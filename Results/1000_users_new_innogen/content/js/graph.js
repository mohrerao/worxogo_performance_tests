/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 19800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? 19800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 347.0, "minX": 0.0, "maxY": 12497.0, "series": [{"data": [[0.0, 505.0], [0.1, 544.0], [0.2, 568.0], [0.3, 571.0], [0.4, 575.0], [0.5, 629.0], [0.6, 632.0], [0.7, 639.0], [0.8, 640.0], [0.9, 648.0], [1.0, 653.0], [1.1, 653.0], [1.2, 660.0], [1.3, 663.0], [1.4, 666.0], [1.5, 668.0], [1.6, 671.0], [1.7, 673.0], [1.8, 675.0], [1.9, 675.0], [2.0, 677.0], [2.1, 688.0], [2.2, 692.0], [2.3, 693.0], [2.4, 694.0], [2.5, 694.0], [2.6, 695.0], [2.7, 695.0], [2.8, 696.0], [2.9, 698.0], [3.0, 701.0], [3.1, 704.0], [3.2, 706.0], [3.3, 708.0], [3.4, 711.0], [3.5, 712.0], [3.6, 713.0], [3.7, 715.0], [3.8, 717.0], [3.9, 718.0], [4.0, 718.0], [4.1, 720.0], [4.2, 721.0], [4.3, 721.0], [4.4, 722.0], [4.5, 723.0], [4.6, 726.0], [4.7, 730.0], [4.8, 730.0], [4.9, 731.0], [5.0, 731.0], [5.1, 735.0], [5.2, 736.0], [5.3, 737.0], [5.4, 740.0], [5.5, 740.0], [5.6, 741.0], [5.7, 744.0], [5.8, 746.0], [5.9, 748.0], [6.0, 749.0], [6.1, 750.0], [6.2, 752.0], [6.3, 753.0], [6.4, 753.0], [6.5, 755.0], [6.6, 756.0], [6.7, 756.0], [6.8, 757.0], [6.9, 758.0], [7.0, 759.0], [7.1, 762.0], [7.2, 762.0], [7.3, 764.0], [7.4, 765.0], [7.5, 765.0], [7.6, 766.0], [7.7, 771.0], [7.8, 772.0], [7.9, 774.0], [8.0, 775.0], [8.1, 775.0], [8.2, 775.0], [8.3, 775.0], [8.4, 776.0], [8.5, 779.0], [8.6, 781.0], [8.7, 782.0], [8.8, 782.0], [8.9, 783.0], [9.0, 787.0], [9.1, 787.0], [9.2, 791.0], [9.3, 793.0], [9.4, 793.0], [9.5, 794.0], [9.6, 795.0], [9.7, 795.0], [9.8, 797.0], [9.9, 799.0], [10.0, 801.0], [10.1, 802.0], [10.2, 802.0], [10.3, 802.0], [10.4, 802.0], [10.5, 803.0], [10.6, 803.0], [10.7, 804.0], [10.8, 804.0], [10.9, 806.0], [11.0, 806.0], [11.1, 807.0], [11.2, 808.0], [11.3, 810.0], [11.4, 810.0], [11.5, 812.0], [11.6, 813.0], [11.7, 815.0], [11.8, 817.0], [11.9, 823.0], [12.0, 825.0], [12.1, 826.0], [12.2, 827.0], [12.3, 828.0], [12.4, 829.0], [12.5, 829.0], [12.6, 830.0], [12.7, 831.0], [12.8, 833.0], [12.9, 836.0], [13.0, 836.0], [13.1, 837.0], [13.2, 837.0], [13.3, 838.0], [13.4, 840.0], [13.5, 841.0], [13.6, 841.0], [13.7, 841.0], [13.8, 841.0], [13.9, 842.0], [14.0, 843.0], [14.1, 845.0], [14.2, 846.0], [14.3, 846.0], [14.4, 847.0], [14.5, 847.0], [14.6, 853.0], [14.7, 856.0], [14.8, 856.0], [14.9, 860.0], [15.0, 861.0], [15.1, 863.0], [15.2, 864.0], [15.3, 864.0], [15.4, 864.0], [15.5, 865.0], [15.6, 865.0], [15.7, 865.0], [15.8, 865.0], [15.9, 865.0], [16.0, 866.0], [16.1, 866.0], [16.2, 867.0], [16.3, 868.0], [16.4, 870.0], [16.5, 871.0], [16.6, 873.0], [16.7, 873.0], [16.8, 873.0], [16.9, 876.0], [17.0, 877.0], [17.1, 878.0], [17.2, 878.0], [17.3, 879.0], [17.4, 880.0], [17.5, 880.0], [17.6, 881.0], [17.7, 881.0], [17.8, 881.0], [17.9, 882.0], [18.0, 883.0], [18.1, 884.0], [18.2, 884.0], [18.3, 886.0], [18.4, 886.0], [18.5, 886.0], [18.6, 886.0], [18.7, 889.0], [18.8, 889.0], [18.9, 889.0], [19.0, 889.0], [19.1, 890.0], [19.2, 890.0], [19.3, 891.0], [19.4, 893.0], [19.5, 893.0], [19.6, 894.0], [19.7, 894.0], [19.8, 894.0], [19.9, 895.0], [20.0, 896.0], [20.1, 897.0], [20.2, 897.0], [20.3, 897.0], [20.4, 897.0], [20.5, 897.0], [20.6, 898.0], [20.7, 898.0], [20.8, 899.0], [20.9, 899.0], [21.0, 899.0], [21.1, 900.0], [21.2, 900.0], [21.3, 900.0], [21.4, 901.0], [21.5, 901.0], [21.6, 901.0], [21.7, 901.0], [21.8, 901.0], [21.9, 902.0], [22.0, 902.0], [22.1, 903.0], [22.2, 903.0], [22.3, 903.0], [22.4, 903.0], [22.5, 903.0], [22.6, 904.0], [22.7, 904.0], [22.8, 905.0], [22.9, 905.0], [23.0, 905.0], [23.1, 905.0], [23.2, 906.0], [23.3, 906.0], [23.4, 907.0], [23.5, 908.0], [23.6, 908.0], [23.7, 908.0], [23.8, 908.0], [23.9, 909.0], [24.0, 909.0], [24.1, 909.0], [24.2, 910.0], [24.3, 910.0], [24.4, 911.0], [24.5, 911.0], [24.6, 911.0], [24.7, 911.0], [24.8, 911.0], [24.9, 911.0], [25.0, 912.0], [25.1, 913.0], [25.2, 914.0], [25.3, 915.0], [25.4, 916.0], [25.5, 916.0], [25.6, 917.0], [25.7, 917.0], [25.8, 917.0], [25.9, 918.0], [26.0, 918.0], [26.1, 919.0], [26.2, 919.0], [26.3, 920.0], [26.4, 920.0], [26.5, 920.0], [26.6, 920.0], [26.7, 922.0], [26.8, 923.0], [26.9, 923.0], [27.0, 923.0], [27.1, 924.0], [27.2, 924.0], [27.3, 924.0], [27.4, 924.0], [27.5, 925.0], [27.6, 925.0], [27.7, 926.0], [27.8, 927.0], [27.9, 927.0], [28.0, 927.0], [28.1, 927.0], [28.2, 928.0], [28.3, 928.0], [28.4, 929.0], [28.5, 929.0], [28.6, 929.0], [28.7, 930.0], [28.8, 930.0], [28.9, 931.0], [29.0, 931.0], [29.1, 931.0], [29.2, 932.0], [29.3, 932.0], [29.4, 932.0], [29.5, 932.0], [29.6, 932.0], [29.7, 933.0], [29.8, 933.0], [29.9, 933.0], [30.0, 934.0], [30.1, 934.0], [30.2, 935.0], [30.3, 936.0], [30.4, 936.0], [30.5, 936.0], [30.6, 936.0], [30.7, 936.0], [30.8, 936.0], [30.9, 937.0], [31.0, 937.0], [31.1, 937.0], [31.2, 937.0], [31.3, 938.0], [31.4, 938.0], [31.5, 938.0], [31.6, 938.0], [31.7, 938.0], [31.8, 939.0], [31.9, 939.0], [32.0, 940.0], [32.1, 941.0], [32.2, 942.0], [32.3, 942.0], [32.4, 942.0], [32.5, 943.0], [32.6, 943.0], [32.7, 943.0], [32.8, 943.0], [32.9, 944.0], [33.0, 944.0], [33.1, 944.0], [33.2, 944.0], [33.3, 944.0], [33.4, 944.0], [33.5, 945.0], [33.6, 945.0], [33.7, 945.0], [33.8, 946.0], [33.9, 946.0], [34.0, 947.0], [34.1, 947.0], [34.2, 947.0], [34.3, 947.0], [34.4, 947.0], [34.5, 947.0], [34.6, 948.0], [34.7, 948.0], [34.8, 948.0], [34.9, 948.0], [35.0, 949.0], [35.1, 949.0], [35.2, 949.0], [35.3, 949.0], [35.4, 950.0], [35.5, 950.0], [35.6, 950.0], [35.7, 950.0], [35.8, 950.0], [35.9, 951.0], [36.0, 951.0], [36.1, 951.0], [36.2, 952.0], [36.3, 952.0], [36.4, 952.0], [36.5, 952.0], [36.6, 952.0], [36.7, 952.0], [36.8, 953.0], [36.9, 953.0], [37.0, 953.0], [37.1, 953.0], [37.2, 953.0], [37.3, 954.0], [37.4, 954.0], [37.5, 954.0], [37.6, 954.0], [37.7, 955.0], [37.8, 955.0], [37.9, 955.0], [38.0, 956.0], [38.1, 956.0], [38.2, 956.0], [38.3, 956.0], [38.4, 957.0], [38.5, 957.0], [38.6, 957.0], [38.7, 957.0], [38.8, 957.0], [38.9, 958.0], [39.0, 958.0], [39.1, 958.0], [39.2, 958.0], [39.3, 958.0], [39.4, 958.0], [39.5, 959.0], [39.6, 959.0], [39.7, 959.0], [39.8, 959.0], [39.9, 960.0], [40.0, 960.0], [40.1, 960.0], [40.2, 960.0], [40.3, 960.0], [40.4, 961.0], [40.5, 961.0], [40.6, 961.0], [40.7, 961.0], [40.8, 961.0], [40.9, 961.0], [41.0, 961.0], [41.1, 962.0], [41.2, 962.0], [41.3, 963.0], [41.4, 964.0], [41.5, 964.0], [41.6, 964.0], [41.7, 964.0], [41.8, 964.0], [41.9, 965.0], [42.0, 965.0], [42.1, 965.0], [42.2, 965.0], [42.3, 965.0], [42.4, 966.0], [42.5, 966.0], [42.6, 966.0], [42.7, 966.0], [42.8, 966.0], [42.9, 967.0], [43.0, 967.0], [43.1, 967.0], [43.2, 967.0], [43.3, 967.0], [43.4, 967.0], [43.5, 968.0], [43.6, 968.0], [43.7, 968.0], [43.8, 968.0], [43.9, 968.0], [44.0, 968.0], [44.1, 969.0], [44.2, 969.0], [44.3, 969.0], [44.4, 969.0], [44.5, 969.0], [44.6, 969.0], [44.7, 969.0], [44.8, 970.0], [44.9, 970.0], [45.0, 970.0], [45.1, 970.0], [45.2, 970.0], [45.3, 970.0], [45.4, 971.0], [45.5, 972.0], [45.6, 972.0], [45.7, 972.0], [45.8, 972.0], [45.9, 972.0], [46.0, 973.0], [46.1, 973.0], [46.2, 973.0], [46.3, 974.0], [46.4, 974.0], [46.5, 974.0], [46.6, 974.0], [46.7, 975.0], [46.8, 975.0], [46.9, 975.0], [47.0, 975.0], [47.1, 975.0], [47.2, 975.0], [47.3, 975.0], [47.4, 975.0], [47.5, 975.0], [47.6, 975.0], [47.7, 976.0], [47.8, 976.0], [47.9, 976.0], [48.0, 976.0], [48.1, 976.0], [48.2, 977.0], [48.3, 977.0], [48.4, 977.0], [48.5, 977.0], [48.6, 977.0], [48.7, 978.0], [48.8, 978.0], [48.9, 978.0], [49.0, 978.0], [49.1, 978.0], [49.2, 978.0], [49.3, 978.0], [49.4, 979.0], [49.5, 979.0], [49.6, 979.0], [49.7, 979.0], [49.8, 979.0], [49.9, 980.0], [50.0, 980.0], [50.1, 980.0], [50.2, 980.0], [50.3, 980.0], [50.4, 981.0], [50.5, 981.0], [50.6, 981.0], [50.7, 981.0], [50.8, 981.0], [50.9, 981.0], [51.0, 981.0], [51.1, 981.0], [51.2, 981.0], [51.3, 981.0], [51.4, 982.0], [51.5, 982.0], [51.6, 982.0], [51.7, 982.0], [51.8, 983.0], [51.9, 983.0], [52.0, 983.0], [52.1, 983.0], [52.2, 984.0], [52.3, 984.0], [52.4, 984.0], [52.5, 984.0], [52.6, 984.0], [52.7, 984.0], [52.8, 984.0], [52.9, 985.0], [53.0, 985.0], [53.1, 985.0], [53.2, 985.0], [53.3, 986.0], [53.4, 986.0], [53.5, 986.0], [53.6, 986.0], [53.7, 987.0], [53.8, 987.0], [53.9, 987.0], [54.0, 988.0], [54.1, 988.0], [54.2, 988.0], [54.3, 988.0], [54.4, 989.0], [54.5, 989.0], [54.6, 989.0], [54.7, 990.0], [54.8, 990.0], [54.9, 990.0], [55.0, 990.0], [55.1, 990.0], [55.2, 991.0], [55.3, 991.0], [55.4, 991.0], [55.5, 991.0], [55.6, 991.0], [55.7, 991.0], [55.8, 992.0], [55.9, 992.0], [56.0, 992.0], [56.1, 992.0], [56.2, 992.0], [56.3, 993.0], [56.4, 993.0], [56.5, 993.0], [56.6, 993.0], [56.7, 994.0], [56.8, 994.0], [56.9, 994.0], [57.0, 994.0], [57.1, 995.0], [57.2, 995.0], [57.3, 995.0], [57.4, 995.0], [57.5, 995.0], [57.6, 995.0], [57.7, 995.0], [57.8, 995.0], [57.9, 995.0], [58.0, 995.0], [58.1, 996.0], [58.2, 996.0], [58.3, 996.0], [58.4, 997.0], [58.5, 997.0], [58.6, 997.0], [58.7, 997.0], [58.8, 997.0], [58.9, 998.0], [59.0, 998.0], [59.1, 998.0], [59.2, 998.0], [59.3, 998.0], [59.4, 999.0], [59.5, 999.0], [59.6, 999.0], [59.7, 1000.0], [59.8, 1000.0], [59.9, 1000.0], [60.0, 1000.0], [60.1, 1000.0], [60.2, 1001.0], [60.3, 1001.0], [60.4, 1001.0], [60.5, 1002.0], [60.6, 1002.0], [60.7, 1002.0], [60.8, 1002.0], [60.9, 1002.0], [61.0, 1002.0], [61.1, 1002.0], [61.2, 1002.0], [61.3, 1002.0], [61.4, 1003.0], [61.5, 1003.0], [61.6, 1003.0], [61.7, 1003.0], [61.8, 1004.0], [61.9, 1004.0], [62.0, 1005.0], [62.1, 1005.0], [62.2, 1005.0], [62.3, 1005.0], [62.4, 1005.0], [62.5, 1005.0], [62.6, 1005.0], [62.7, 1005.0], [62.8, 1005.0], [62.9, 1006.0], [63.0, 1006.0], [63.1, 1006.0], [63.2, 1006.0], [63.3, 1006.0], [63.4, 1006.0], [63.5, 1006.0], [63.6, 1006.0], [63.7, 1007.0], [63.8, 1007.0], [63.9, 1007.0], [64.0, 1007.0], [64.1, 1007.0], [64.2, 1007.0], [64.3, 1007.0], [64.4, 1007.0], [64.5, 1007.0], [64.6, 1008.0], [64.7, 1008.0], [64.8, 1009.0], [64.9, 1009.0], [65.0, 1009.0], [65.1, 1009.0], [65.2, 1010.0], [65.3, 1010.0], [65.4, 1010.0], [65.5, 1010.0], [65.6, 1010.0], [65.7, 1011.0], [65.8, 1011.0], [65.9, 1011.0], [66.0, 1011.0], [66.1, 1011.0], [66.2, 1012.0], [66.3, 1012.0], [66.4, 1012.0], [66.5, 1012.0], [66.6, 1012.0], [66.7, 1012.0], [66.8, 1013.0], [66.9, 1013.0], [67.0, 1013.0], [67.1, 1013.0], [67.2, 1013.0], [67.3, 1013.0], [67.4, 1013.0], [67.5, 1014.0], [67.6, 1014.0], [67.7, 1014.0], [67.8, 1015.0], [67.9, 1015.0], [68.0, 1015.0], [68.1, 1015.0], [68.2, 1015.0], [68.3, 1015.0], [68.4, 1016.0], [68.5, 1016.0], [68.6, 1016.0], [68.7, 1016.0], [68.8, 1016.0], [68.9, 1016.0], [69.0, 1017.0], [69.1, 1017.0], [69.2, 1017.0], [69.3, 1017.0], [69.4, 1018.0], [69.5, 1018.0], [69.6, 1018.0], [69.7, 1019.0], [69.8, 1019.0], [69.9, 1019.0], [70.0, 1020.0], [70.1, 1021.0], [70.2, 1021.0], [70.3, 1022.0], [70.4, 1022.0], [70.5, 1022.0], [70.6, 1022.0], [70.7, 1022.0], [70.8, 1022.0], [70.9, 1023.0], [71.0, 1023.0], [71.1, 1023.0], [71.2, 1023.0], [71.3, 1023.0], [71.4, 1023.0], [71.5, 1023.0], [71.6, 1024.0], [71.7, 1024.0], [71.8, 1024.0], [71.9, 1024.0], [72.0, 1024.0], [72.1, 1024.0], [72.2, 1024.0], [72.3, 1024.0], [72.4, 1024.0], [72.5, 1025.0], [72.6, 1025.0], [72.7, 1025.0], [72.8, 1025.0], [72.9, 1025.0], [73.0, 1026.0], [73.1, 1026.0], [73.2, 1027.0], [73.3, 1027.0], [73.4, 1027.0], [73.5, 1027.0], [73.6, 1027.0], [73.7, 1027.0], [73.8, 1027.0], [73.9, 1028.0], [74.0, 1028.0], [74.1, 1028.0], [74.2, 1029.0], [74.3, 1030.0], [74.4, 1030.0], [74.5, 1031.0], [74.6, 1032.0], [74.7, 1032.0], [74.8, 1032.0], [74.9, 1032.0], [75.0, 1033.0], [75.1, 1033.0], [75.2, 1033.0], [75.3, 1033.0], [75.4, 1033.0], [75.5, 1033.0], [75.6, 1034.0], [75.7, 1034.0], [75.8, 1035.0], [75.9, 1035.0], [76.0, 1035.0], [76.1, 1035.0], [76.2, 1036.0], [76.3, 1036.0], [76.4, 1036.0], [76.5, 1036.0], [76.6, 1036.0], [76.7, 1036.0], [76.8, 1036.0], [76.9, 1036.0], [77.0, 1037.0], [77.1, 1038.0], [77.2, 1038.0], [77.3, 1038.0], [77.4, 1038.0], [77.5, 1039.0], [77.6, 1039.0], [77.7, 1039.0], [77.8, 1039.0], [77.9, 1040.0], [78.0, 1040.0], [78.1, 1040.0], [78.2, 1040.0], [78.3, 1040.0], [78.4, 1040.0], [78.5, 1040.0], [78.6, 1041.0], [78.7, 1041.0], [78.8, 1042.0], [78.9, 1043.0], [79.0, 1043.0], [79.1, 1043.0], [79.2, 1043.0], [79.3, 1043.0], [79.4, 1044.0], [79.5, 1044.0], [79.6, 1044.0], [79.7, 1044.0], [79.8, 1045.0], [79.9, 1046.0], [80.0, 1047.0], [80.1, 1047.0], [80.2, 1048.0], [80.3, 1049.0], [80.4, 1049.0], [80.5, 1049.0], [80.6, 1050.0], [80.7, 1050.0], [80.8, 1050.0], [80.9, 1050.0], [81.0, 1050.0], [81.1, 1050.0], [81.2, 1051.0], [81.3, 1051.0], [81.4, 1051.0], [81.5, 1052.0], [81.6, 1052.0], [81.7, 1054.0], [81.8, 1054.0], [81.9, 1055.0], [82.0, 1056.0], [82.1, 1057.0], [82.2, 1057.0], [82.3, 1057.0], [82.4, 1057.0], [82.5, 1057.0], [82.6, 1058.0], [82.7, 1058.0], [82.8, 1059.0], [82.9, 1059.0], [83.0, 1059.0], [83.1, 1060.0], [83.2, 1061.0], [83.3, 1062.0], [83.4, 1062.0], [83.5, 1063.0], [83.6, 1063.0], [83.7, 1063.0], [83.8, 1064.0], [83.9, 1064.0], [84.0, 1064.0], [84.1, 1064.0], [84.2, 1065.0], [84.3, 1066.0], [84.4, 1066.0], [84.5, 1066.0], [84.6, 1067.0], [84.7, 1068.0], [84.8, 1070.0], [84.9, 1071.0], [85.0, 1072.0], [85.1, 1072.0], [85.2, 1074.0], [85.3, 1075.0], [85.4, 1075.0], [85.5, 1076.0], [85.6, 1076.0], [85.7, 1076.0], [85.8, 1077.0], [85.9, 1077.0], [86.0, 1077.0], [86.1, 1078.0], [86.2, 1078.0], [86.3, 1078.0], [86.4, 1078.0], [86.5, 1080.0], [86.6, 1081.0], [86.7, 1081.0], [86.8, 1082.0], [86.9, 1082.0], [87.0, 1083.0], [87.1, 1084.0], [87.2, 1085.0], [87.3, 1086.0], [87.4, 1089.0], [87.5, 1089.0], [87.6, 1091.0], [87.7, 1091.0], [87.8, 1093.0], [87.9, 1093.0], [88.0, 1095.0], [88.1, 1097.0], [88.2, 1097.0], [88.3, 1098.0], [88.4, 1099.0], [88.5, 1103.0], [88.6, 1104.0], [88.7, 1105.0], [88.8, 1106.0], [88.9, 1107.0], [89.0, 1110.0], [89.1, 1115.0], [89.2, 1117.0], [89.3, 1117.0], [89.4, 1117.0], [89.5, 1119.0], [89.6, 1121.0], [89.7, 1123.0], [89.8, 1124.0], [89.9, 1125.0], [90.0, 1126.0], [90.1, 1129.0], [90.2, 1134.0], [90.3, 1134.0], [90.4, 1134.0], [90.5, 1135.0], [90.6, 1135.0], [90.7, 1136.0], [90.8, 1140.0], [90.9, 1140.0], [91.0, 1142.0], [91.1, 1149.0], [91.2, 1150.0], [91.3, 1150.0], [91.4, 1151.0], [91.5, 1155.0], [91.6, 1155.0], [91.7, 1155.0], [91.8, 1156.0], [91.9, 1159.0], [92.0, 1159.0], [92.1, 1159.0], [92.2, 1162.0], [92.3, 1164.0], [92.4, 1165.0], [92.5, 1166.0], [92.6, 1167.0], [92.7, 1168.0], [92.8, 1169.0], [92.9, 1169.0], [93.0, 1170.0], [93.1, 1175.0], [93.2, 1179.0], [93.3, 1180.0], [93.4, 1180.0], [93.5, 1180.0], [93.6, 1182.0], [93.7, 1182.0], [93.8, 1185.0], [93.9, 1187.0], [94.0, 1187.0], [94.1, 1188.0], [94.2, 1195.0], [94.3, 1197.0], [94.4, 1200.0], [94.5, 1207.0], [94.6, 1207.0], [94.7, 1207.0], [94.8, 1214.0], [94.9, 1216.0], [95.0, 1219.0], [95.1, 1221.0], [95.2, 1228.0], [95.3, 1230.0], [95.4, 1235.0], [95.5, 1239.0], [95.6, 1242.0], [95.7, 1242.0], [95.8, 1242.0], [95.9, 1245.0], [96.0, 1250.0], [96.1, 1259.0], [96.2, 1265.0], [96.3, 1266.0], [96.4, 1304.0], [96.5, 1304.0], [96.6, 1306.0], [96.7, 1313.0], [96.8, 1325.0], [96.9, 1326.0], [97.0, 1333.0], [97.1, 1335.0], [97.2, 1337.0], [97.3, 1367.0], [97.4, 1385.0], [97.5, 1386.0], [97.6, 1398.0], [97.7, 1401.0], [97.8, 1410.0], [97.9, 1465.0], [98.0, 1471.0], [98.1, 1479.0], [98.2, 1531.0], [98.3, 1599.0], [98.4, 1611.0], [98.5, 1643.0], [98.6, 1647.0], [98.7, 1660.0], [98.8, 1667.0], [98.9, 1712.0], [99.0, 1779.0], [99.1, 1796.0], [99.2, 1806.0], [99.3, 1807.0], [99.4, 1949.0], [99.5, 2009.0], [99.6, 2039.0], [99.7, 2072.0], [99.8, 2218.0], [99.9, 2282.0]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[0.0, 4710.0], [0.1, 4801.0], [0.2, 4851.0], [0.3, 4970.0], [0.4, 4981.0], [0.5, 4983.0], [0.6, 5092.0], [0.7, 5155.0], [0.8, 5175.0], [0.9, 5175.0], [1.0, 5211.0], [1.1, 5267.0], [1.2, 5285.0], [1.3, 5291.0], [1.4, 5327.0], [1.5, 5333.0], [1.6, 5341.0], [1.7, 5346.0], [1.8, 5356.0], [1.9, 5357.0], [2.0, 5359.0], [2.1, 5377.0], [2.2, 5379.0], [2.3, 5382.0], [2.4, 5384.0], [2.5, 5384.0], [2.6, 5389.0], [2.7, 5391.0], [2.8, 5394.0], [2.9, 5394.0], [3.0, 5396.0], [3.1, 5400.0], [3.2, 5404.0], [3.3, 5405.0], [3.4, 5409.0], [3.5, 5409.0], [3.6, 5414.0], [3.7, 5414.0], [3.8, 5423.0], [3.9, 5424.0], [4.0, 5424.0], [4.1, 5429.0], [4.2, 5444.0], [4.3, 5452.0], [4.4, 5452.0], [4.5, 5456.0], [4.6, 5464.0], [4.7, 5466.0], [4.8, 5466.0], [4.9, 5467.0], [5.0, 5468.0], [5.1, 5474.0], [5.2, 5474.0], [5.3, 5476.0], [5.4, 5479.0], [5.5, 5480.0], [5.6, 5488.0], [5.7, 5489.0], [5.8, 5489.0], [5.9, 5490.0], [6.0, 5491.0], [6.1, 5498.0], [6.2, 5500.0], [6.3, 5501.0], [6.4, 5502.0], [6.5, 5504.0], [6.6, 5504.0], [6.7, 5509.0], [6.8, 5511.0], [6.9, 5514.0], [7.0, 5514.0], [7.1, 5515.0], [7.2, 5515.0], [7.3, 5516.0], [7.4, 5518.0], [7.5, 5518.0], [7.6, 5518.0], [7.7, 5521.0], [7.8, 5522.0], [7.9, 5523.0], [8.0, 5527.0], [8.1, 5527.0], [8.2, 5528.0], [8.3, 5529.0], [8.4, 5529.0], [8.5, 5529.0], [8.6, 5530.0], [8.7, 5534.0], [8.8, 5534.0], [8.9, 5534.0], [9.0, 5534.0], [9.1, 5535.0], [9.2, 5536.0], [9.3, 5536.0], [9.4, 5538.0], [9.5, 5539.0], [9.6, 5541.0], [9.7, 5541.0], [9.8, 5547.0], [9.9, 5547.0], [10.0, 5551.0], [10.1, 5553.0], [10.2, 5554.0], [10.3, 5554.0], [10.4, 5554.0], [10.5, 5555.0], [10.6, 5556.0], [10.7, 5557.0], [10.8, 5558.0], [10.9, 5558.0], [11.0, 5559.0], [11.1, 5559.0], [11.2, 5560.0], [11.3, 5560.0], [11.4, 5561.0], [11.5, 5563.0], [11.6, 5563.0], [11.7, 5563.0], [11.8, 5564.0], [11.9, 5565.0], [12.0, 5565.0], [12.1, 5566.0], [12.2, 5570.0], [12.3, 5570.0], [12.4, 5571.0], [12.5, 5573.0], [12.6, 5574.0], [12.7, 5575.0], [12.8, 5576.0], [12.9, 5576.0], [13.0, 5576.0], [13.1, 5577.0], [13.2, 5577.0], [13.3, 5579.0], [13.4, 5580.0], [13.5, 5580.0], [13.6, 5582.0], [13.7, 5586.0], [13.8, 5586.0], [13.9, 5586.0], [14.0, 5587.0], [14.1, 5587.0], [14.2, 5589.0], [14.3, 5590.0], [14.4, 5591.0], [14.5, 5591.0], [14.6, 5591.0], [14.7, 5591.0], [14.8, 5595.0], [14.9, 5598.0], [15.0, 5602.0], [15.1, 5602.0], [15.2, 5603.0], [15.3, 5604.0], [15.4, 5605.0], [15.5, 5606.0], [15.6, 5606.0], [15.7, 5606.0], [15.8, 5607.0], [15.9, 5608.0], [16.0, 5609.0], [16.1, 5610.0], [16.2, 5610.0], [16.3, 5610.0], [16.4, 5611.0], [16.5, 5612.0], [16.6, 5612.0], [16.7, 5612.0], [16.8, 5612.0], [16.9, 5614.0], [17.0, 5616.0], [17.1, 5616.0], [17.2, 5616.0], [17.3, 5616.0], [17.4, 5617.0], [17.5, 5617.0], [17.6, 5618.0], [17.7, 5618.0], [17.8, 5618.0], [17.9, 5619.0], [18.0, 5620.0], [18.1, 5620.0], [18.2, 5621.0], [18.3, 5622.0], [18.4, 5622.0], [18.5, 5623.0], [18.6, 5624.0], [18.7, 5624.0], [18.8, 5625.0], [18.9, 5626.0], [19.0, 5627.0], [19.1, 5629.0], [19.2, 5629.0], [19.3, 5630.0], [19.4, 5631.0], [19.5, 5631.0], [19.6, 5633.0], [19.7, 5633.0], [19.8, 5633.0], [19.9, 5634.0], [20.0, 5635.0], [20.1, 5636.0], [20.2, 5636.0], [20.3, 5636.0], [20.4, 5637.0], [20.5, 5637.0], [20.6, 5638.0], [20.7, 5639.0], [20.8, 5640.0], [20.9, 5642.0], [21.0, 5644.0], [21.1, 5647.0], [21.2, 5649.0], [21.3, 5649.0], [21.4, 5649.0], [21.5, 5652.0], [21.6, 5653.0], [21.7, 5654.0], [21.8, 5654.0], [21.9, 5654.0], [22.0, 5656.0], [22.1, 5657.0], [22.2, 5658.0], [22.3, 5658.0], [22.4, 5660.0], [22.5, 5662.0], [22.6, 5662.0], [22.7, 5663.0], [22.8, 5665.0], [22.9, 5666.0], [23.0, 5668.0], [23.1, 5670.0], [23.2, 5672.0], [23.3, 5673.0], [23.4, 5679.0], [23.5, 5680.0], [23.6, 5681.0], [23.7, 5682.0], [23.8, 5684.0], [23.9, 5684.0], [24.0, 5686.0], [24.1, 5687.0], [24.2, 5687.0], [24.3, 5688.0], [24.4, 5689.0], [24.5, 5690.0], [24.6, 5691.0], [24.7, 5691.0], [24.8, 5693.0], [24.9, 5697.0], [25.0, 5701.0], [25.1, 5712.0], [25.2, 5713.0], [25.3, 5716.0], [25.4, 5719.0], [25.5, 5722.0], [25.6, 5723.0], [25.7, 5723.0], [25.8, 5723.0], [25.9, 5723.0], [26.0, 5725.0], [26.1, 5725.0], [26.2, 5727.0], [26.3, 5728.0], [26.4, 5729.0], [26.5, 5729.0], [26.6, 5730.0], [26.7, 5730.0], [26.8, 5732.0], [26.9, 5733.0], [27.0, 5737.0], [27.1, 5737.0], [27.2, 5739.0], [27.3, 5742.0], [27.4, 5744.0], [27.5, 5744.0], [27.6, 5744.0], [27.7, 5746.0], [27.8, 5746.0], [27.9, 5746.0], [28.0, 5747.0], [28.1, 5748.0], [28.2, 5748.0], [28.3, 5751.0], [28.4, 5752.0], [28.5, 5752.0], [28.6, 5755.0], [28.7, 5756.0], [28.8, 5758.0], [28.9, 5760.0], [29.0, 5762.0], [29.1, 5762.0], [29.2, 5763.0], [29.3, 5763.0], [29.4, 5765.0], [29.5, 5766.0], [29.6, 5766.0], [29.7, 5767.0], [29.8, 5770.0], [29.9, 5772.0], [30.0, 5773.0], [30.1, 5775.0], [30.2, 5776.0], [30.3, 5776.0], [30.4, 5777.0], [30.5, 5777.0], [30.6, 5778.0], [30.7, 5779.0], [30.8, 5779.0], [30.9, 5780.0], [31.0, 5781.0], [31.1, 5781.0], [31.2, 5782.0], [31.3, 5783.0], [31.4, 5784.0], [31.5, 5784.0], [31.6, 5784.0], [31.7, 5784.0], [31.8, 5785.0], [31.9, 5787.0], [32.0, 5788.0], [32.1, 5788.0], [32.2, 5788.0], [32.3, 5789.0], [32.4, 5790.0], [32.5, 5790.0], [32.6, 5790.0], [32.7, 5792.0], [32.8, 5792.0], [32.9, 5793.0], [33.0, 5794.0], [33.1, 5795.0], [33.2, 5795.0], [33.3, 5795.0], [33.4, 5796.0], [33.5, 5797.0], [33.6, 5798.0], [33.7, 5800.0], [33.8, 5803.0], [33.9, 5804.0], [34.0, 5804.0], [34.1, 5806.0], [34.2, 5806.0], [34.3, 5807.0], [34.4, 5807.0], [34.5, 5807.0], [34.6, 5809.0], [34.7, 5809.0], [34.8, 5810.0], [34.9, 5810.0], [35.0, 5815.0], [35.1, 5815.0], [35.2, 5816.0], [35.3, 5817.0], [35.4, 5818.0], [35.5, 5821.0], [35.6, 5821.0], [35.7, 5822.0], [35.8, 5823.0], [35.9, 5828.0], [36.0, 5828.0], [36.1, 5831.0], [36.2, 5831.0], [36.3, 5831.0], [36.4, 5834.0], [36.5, 5835.0], [36.6, 5835.0], [36.7, 5836.0], [36.8, 5836.0], [36.9, 5838.0], [37.0, 5839.0], [37.1, 5841.0], [37.2, 5842.0], [37.3, 5843.0], [37.4, 5843.0], [37.5, 5843.0], [37.6, 5843.0], [37.7, 5844.0], [37.8, 5844.0], [37.9, 5845.0], [38.0, 5845.0], [38.1, 5845.0], [38.2, 5845.0], [38.3, 5846.0], [38.4, 5846.0], [38.5, 5848.0], [38.6, 5849.0], [38.7, 5849.0], [38.8, 5850.0], [38.9, 5850.0], [39.0, 5851.0], [39.1, 5852.0], [39.2, 5852.0], [39.3, 5853.0], [39.4, 5854.0], [39.5, 5855.0], [39.6, 5856.0], [39.7, 5857.0], [39.8, 5857.0], [39.9, 5857.0], [40.0, 5858.0], [40.1, 5859.0], [40.2, 5859.0], [40.3, 5860.0], [40.4, 5860.0], [40.5, 5861.0], [40.6, 5862.0], [40.7, 5864.0], [40.8, 5866.0], [40.9, 5867.0], [41.0, 5868.0], [41.1, 5868.0], [41.2, 5869.0], [41.3, 5869.0], [41.4, 5871.0], [41.5, 5875.0], [41.6, 5875.0], [41.7, 5879.0], [41.8, 5880.0], [41.9, 5881.0], [42.0, 5882.0], [42.1, 5885.0], [42.2, 5885.0], [42.3, 5885.0], [42.4, 5886.0], [42.5, 5887.0], [42.6, 5888.0], [42.7, 5890.0], [42.8, 5890.0], [42.9, 5890.0], [43.0, 5891.0], [43.1, 5892.0], [43.2, 5894.0], [43.3, 5894.0], [43.4, 5894.0], [43.5, 5896.0], [43.6, 5897.0], [43.7, 5898.0], [43.8, 5899.0], [43.9, 5900.0], [44.0, 5903.0], [44.1, 5904.0], [44.2, 5904.0], [44.3, 5905.0], [44.4, 5906.0], [44.5, 5906.0], [44.6, 5906.0], [44.7, 5907.0], [44.8, 5908.0], [44.9, 5908.0], [45.0, 5909.0], [45.1, 5910.0], [45.2, 5910.0], [45.3, 5910.0], [45.4, 5910.0], [45.5, 5911.0], [45.6, 5912.0], [45.7, 5915.0], [45.8, 5915.0], [45.9, 5915.0], [46.0, 5915.0], [46.1, 5916.0], [46.2, 5919.0], [46.3, 5920.0], [46.4, 5920.0], [46.5, 5922.0], [46.6, 5922.0], [46.7, 5922.0], [46.8, 5922.0], [46.9, 5924.0], [47.0, 5926.0], [47.1, 5928.0], [47.2, 5930.0], [47.3, 5931.0], [47.4, 5931.0], [47.5, 5933.0], [47.6, 5934.0], [47.7, 5934.0], [47.8, 5934.0], [47.9, 5937.0], [48.0, 5939.0], [48.1, 5939.0], [48.2, 5941.0], [48.3, 5941.0], [48.4, 5941.0], [48.5, 5943.0], [48.6, 5944.0], [48.7, 5945.0], [48.8, 5945.0], [48.9, 5946.0], [49.0, 5946.0], [49.1, 5947.0], [49.2, 5947.0], [49.3, 5949.0], [49.4, 5949.0], [49.5, 5950.0], [49.6, 5950.0], [49.7, 5951.0], [49.8, 5952.0], [49.9, 5953.0], [50.0, 5953.0], [50.1, 5955.0], [50.2, 5955.0], [50.3, 5956.0], [50.4, 5956.0], [50.5, 5957.0], [50.6, 5958.0], [50.7, 5958.0], [50.8, 5960.0], [50.9, 5961.0], [51.0, 5961.0], [51.1, 5961.0], [51.2, 5965.0], [51.3, 5966.0], [51.4, 5968.0], [51.5, 5968.0], [51.6, 5968.0], [51.7, 5968.0], [51.8, 5969.0], [51.9, 5971.0], [52.0, 5972.0], [52.1, 5973.0], [52.2, 5973.0], [52.3, 5973.0], [52.4, 5973.0], [52.5, 5973.0], [52.6, 5974.0], [52.7, 5974.0], [52.8, 5975.0], [52.9, 5976.0], [53.0, 5976.0], [53.1, 5977.0], [53.2, 5978.0], [53.3, 5978.0], [53.4, 5981.0], [53.5, 5983.0], [53.6, 5983.0], [53.7, 5983.0], [53.8, 5984.0], [53.9, 5985.0], [54.0, 5986.0], [54.1, 5986.0], [54.2, 5987.0], [54.3, 5987.0], [54.4, 5987.0], [54.5, 5988.0], [54.6, 5988.0], [54.7, 5988.0], [54.8, 5989.0], [54.9, 5989.0], [55.0, 5990.0], [55.1, 5992.0], [55.2, 5992.0], [55.3, 5992.0], [55.4, 5993.0], [55.5, 5993.0], [55.6, 5993.0], [55.7, 5993.0], [55.8, 5994.0], [55.9, 5994.0], [56.0, 5995.0], [56.1, 5995.0], [56.2, 5996.0], [56.3, 5996.0], [56.4, 5997.0], [56.5, 5998.0], [56.6, 5998.0], [56.7, 5999.0], [56.8, 5999.0], [56.9, 6001.0], [57.0, 6001.0], [57.1, 6002.0], [57.2, 6003.0], [57.3, 6004.0], [57.4, 6004.0], [57.5, 6004.0], [57.6, 6005.0], [57.7, 6006.0], [57.8, 6007.0], [57.9, 6008.0], [58.0, 6008.0], [58.1, 6008.0], [58.2, 6008.0], [58.3, 6009.0], [58.4, 6009.0], [58.5, 6010.0], [58.6, 6013.0], [58.7, 6013.0], [58.8, 6014.0], [58.9, 6014.0], [59.0, 6014.0], [59.1, 6014.0], [59.2, 6014.0], [59.3, 6015.0], [59.4, 6016.0], [59.5, 6017.0], [59.6, 6017.0], [59.7, 6018.0], [59.8, 6020.0], [59.9, 6021.0], [60.0, 6021.0], [60.1, 6024.0], [60.2, 6025.0], [60.3, 6025.0], [60.4, 6026.0], [60.5, 6027.0], [60.6, 6027.0], [60.7, 6030.0], [60.8, 6030.0], [60.9, 6031.0], [61.0, 6031.0], [61.1, 6033.0], [61.2, 6035.0], [61.3, 6036.0], [61.4, 6037.0], [61.5, 6039.0], [61.6, 6039.0], [61.7, 6040.0], [61.8, 6040.0], [61.9, 6041.0], [62.0, 6042.0], [62.1, 6042.0], [62.2, 6044.0], [62.3, 6044.0], [62.4, 6045.0], [62.5, 6045.0], [62.6, 6046.0], [62.7, 6046.0], [62.8, 6047.0], [62.9, 6047.0], [63.0, 6047.0], [63.1, 6048.0], [63.2, 6048.0], [63.3, 6049.0], [63.4, 6052.0], [63.5, 6054.0], [63.6, 6055.0], [63.7, 6055.0], [63.8, 6055.0], [63.9, 6056.0], [64.0, 6057.0], [64.1, 6058.0], [64.2, 6061.0], [64.3, 6061.0], [64.4, 6062.0], [64.5, 6062.0], [64.6, 6063.0], [64.7, 6063.0], [64.8, 6063.0], [64.9, 6064.0], [65.0, 6065.0], [65.1, 6065.0], [65.2, 6068.0], [65.3, 6071.0], [65.4, 6071.0], [65.5, 6071.0], [65.6, 6072.0], [65.7, 6072.0], [65.8, 6072.0], [65.9, 6073.0], [66.0, 6073.0], [66.1, 6074.0], [66.2, 6077.0], [66.3, 6077.0], [66.4, 6079.0], [66.5, 6079.0], [66.6, 6080.0], [66.7, 6080.0], [66.8, 6084.0], [66.9, 6085.0], [67.0, 6086.0], [67.1, 6087.0], [67.2, 6088.0], [67.3, 6089.0], [67.4, 6091.0], [67.5, 6092.0], [67.6, 6095.0], [67.7, 6097.0], [67.8, 6097.0], [67.9, 6097.0], [68.0, 6100.0], [68.1, 6103.0], [68.2, 6104.0], [68.3, 6105.0], [68.4, 6107.0], [68.5, 6107.0], [68.6, 6107.0], [68.7, 6108.0], [68.8, 6109.0], [68.9, 6109.0], [69.0, 6110.0], [69.1, 6110.0], [69.2, 6111.0], [69.3, 6112.0], [69.4, 6113.0], [69.5, 6113.0], [69.6, 6113.0], [69.7, 6114.0], [69.8, 6114.0], [69.9, 6116.0], [70.0, 6117.0], [70.1, 6118.0], [70.2, 6120.0], [70.3, 6124.0], [70.4, 6124.0], [70.5, 6126.0], [70.6, 6127.0], [70.7, 6129.0], [70.8, 6131.0], [70.9, 6131.0], [71.0, 6132.0], [71.1, 6135.0], [71.2, 6135.0], [71.3, 6136.0], [71.4, 6138.0], [71.5, 6139.0], [71.6, 6139.0], [71.7, 6140.0], [71.8, 6141.0], [71.9, 6142.0], [72.0, 6144.0], [72.1, 6147.0], [72.2, 6147.0], [72.3, 6150.0], [72.4, 6152.0], [72.5, 6152.0], [72.6, 6154.0], [72.7, 6154.0], [72.8, 6157.0], [72.9, 6158.0], [73.0, 6160.0], [73.1, 6161.0], [73.2, 6162.0], [73.3, 6164.0], [73.4, 6164.0], [73.5, 6166.0], [73.6, 6166.0], [73.7, 6166.0], [73.8, 6167.0], [73.9, 6167.0], [74.0, 6171.0], [74.1, 6172.0], [74.2, 6174.0], [74.3, 6176.0], [74.4, 6176.0], [74.5, 6178.0], [74.6, 6182.0], [74.7, 6182.0], [74.8, 6183.0], [74.9, 6184.0], [75.0, 6186.0], [75.1, 6190.0], [75.2, 6193.0], [75.3, 6195.0], [75.4, 6197.0], [75.5, 6198.0], [75.6, 6198.0], [75.7, 6200.0], [75.8, 6201.0], [75.9, 6201.0], [76.0, 6202.0], [76.1, 6203.0], [76.2, 6203.0], [76.3, 6204.0], [76.4, 6204.0], [76.5, 6204.0], [76.6, 6204.0], [76.7, 6210.0], [76.8, 6210.0], [76.9, 6211.0], [77.0, 6212.0], [77.1, 6214.0], [77.2, 6215.0], [77.3, 6217.0], [77.4, 6222.0], [77.5, 6223.0], [77.6, 6226.0], [77.7, 6228.0], [77.8, 6233.0], [77.9, 6235.0], [78.0, 6236.0], [78.1, 6236.0], [78.2, 6242.0], [78.3, 6246.0], [78.4, 6246.0], [78.5, 6248.0], [78.6, 6255.0], [78.7, 6259.0], [78.8, 6259.0], [78.9, 6259.0], [79.0, 6260.0], [79.1, 6262.0], [79.2, 6263.0], [79.3, 6264.0], [79.4, 6266.0], [79.5, 6266.0], [79.6, 6266.0], [79.7, 6267.0], [79.8, 6267.0], [79.9, 6271.0], [80.0, 6272.0], [80.1, 6273.0], [80.2, 6273.0], [80.3, 6275.0], [80.4, 6279.0], [80.5, 6281.0], [80.6, 6281.0], [80.7, 6283.0], [80.8, 6285.0], [80.9, 6287.0], [81.0, 6289.0], [81.1, 6291.0], [81.2, 6291.0], [81.3, 6292.0], [81.4, 6292.0], [81.5, 6293.0], [81.6, 6295.0], [81.7, 6295.0], [81.8, 6297.0], [81.9, 6302.0], [82.0, 6306.0], [82.1, 6308.0], [82.2, 6309.0], [82.3, 6310.0], [82.4, 6311.0], [82.5, 6311.0], [82.6, 6314.0], [82.7, 6317.0], [82.8, 6318.0], [82.9, 6320.0], [83.0, 6321.0], [83.1, 6322.0], [83.2, 6325.0], [83.3, 6325.0], [83.4, 6330.0], [83.5, 6331.0], [83.6, 6332.0], [83.7, 6333.0], [83.8, 6337.0], [83.9, 6339.0], [84.0, 6340.0], [84.1, 6340.0], [84.2, 6342.0], [84.3, 6347.0], [84.4, 6348.0], [84.5, 6349.0], [84.6, 6350.0], [84.7, 6352.0], [84.8, 6353.0], [84.9, 6353.0], [85.0, 6359.0], [85.1, 6369.0], [85.2, 6370.0], [85.3, 6373.0], [85.4, 6374.0], [85.5, 6378.0], [85.6, 6381.0], [85.7, 6393.0], [85.8, 6393.0], [85.9, 6398.0], [86.0, 6399.0], [86.1, 6399.0], [86.2, 6399.0], [86.3, 6400.0], [86.4, 6407.0], [86.5, 6411.0], [86.6, 6414.0], [86.7, 6415.0], [86.8, 6416.0], [86.9, 6418.0], [87.0, 6419.0], [87.1, 6419.0], [87.2, 6422.0], [87.3, 6425.0], [87.4, 6429.0], [87.5, 6432.0], [87.6, 6432.0], [87.7, 6439.0], [87.8, 6442.0], [87.9, 6445.0], [88.0, 6445.0], [88.1, 6455.0], [88.2, 6466.0], [88.3, 6467.0], [88.4, 6467.0], [88.5, 6467.0], [88.6, 6471.0], [88.7, 6480.0], [88.8, 6486.0], [88.9, 6492.0], [89.0, 6509.0], [89.1, 6514.0], [89.2, 6514.0], [89.3, 6515.0], [89.4, 6515.0], [89.5, 6519.0], [89.6, 6526.0], [89.7, 6535.0], [89.8, 6535.0], [89.9, 6540.0], [90.0, 6542.0], [90.1, 6545.0], [90.2, 6553.0], [90.3, 6557.0], [90.4, 6568.0], [90.5, 6572.0], [90.6, 6572.0], [90.7, 6574.0], [90.8, 6578.0], [90.9, 6585.0], [91.0, 6589.0], [91.1, 6599.0], [91.2, 6610.0], [91.3, 6632.0], [91.4, 6638.0], [91.5, 6654.0], [91.6, 6666.0], [91.7, 6706.0], [91.8, 6707.0], [91.9, 6711.0], [92.0, 6719.0], [92.1, 6733.0], [92.2, 6734.0], [92.3, 6736.0], [92.4, 6746.0], [92.5, 6763.0], [92.6, 6768.0], [92.7, 6772.0], [92.8, 6789.0], [92.9, 6791.0], [93.0, 6795.0], [93.1, 6796.0], [93.2, 6797.0], [93.3, 6800.0], [93.4, 6808.0], [93.5, 6817.0], [93.6, 6831.0], [93.7, 6836.0], [93.8, 6838.0], [93.9, 6842.0], [94.0, 6850.0], [94.1, 6851.0], [94.2, 6858.0], [94.3, 6863.0], [94.4, 6866.0], [94.5, 6870.0], [94.6, 6871.0], [94.7, 6877.0], [94.8, 6895.0], [94.9, 6905.0], [95.0, 6918.0], [95.1, 6925.0], [95.2, 6929.0], [95.3, 6935.0], [95.4, 6947.0], [95.5, 6950.0], [95.6, 6988.0], [95.7, 6990.0], [95.8, 7005.0], [95.9, 7043.0], [96.0, 7062.0], [96.1, 7068.0], [96.2, 7077.0], [96.3, 7083.0], [96.4, 7116.0], [96.5, 7156.0], [96.6, 7175.0], [96.7, 7184.0], [96.8, 7201.0], [96.9, 7202.0], [97.0, 7206.0], [97.1, 7213.0], [97.2, 7269.0], [97.3, 7276.0], [97.4, 7313.0], [97.5, 7391.0], [97.6, 7402.0], [97.7, 7438.0], [97.8, 7447.0], [97.9, 7524.0], [98.0, 7571.0], [98.1, 7602.0], [98.2, 7603.0], [98.3, 7639.0], [98.4, 7647.0], [98.5, 7683.0], [98.6, 7754.0], [98.7, 7779.0], [98.8, 7891.0], [98.9, 7987.0], [99.0, 8099.0], [99.1, 8181.0], [99.2, 8395.0], [99.3, 8722.0], [99.4, 9327.0], [99.5, 9655.0], [99.6, 10383.0], [99.7, 10651.0], [99.8, 11570.0], [99.9, 12322.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[0.0, 347.0], [0.1, 358.0], [0.2, 362.0], [0.3, 364.0], [0.4, 365.0], [0.5, 374.0], [0.6, 375.0], [0.7, 387.0], [0.8, 406.0], [0.9, 459.0], [1.0, 461.0], [1.1, 487.0], [1.2, 520.0], [1.3, 524.0], [1.4, 545.0], [1.5, 548.0], [1.6, 592.0], [1.7, 593.0], [1.8, 613.0], [1.9, 646.0], [2.0, 763.0], [2.1, 818.0], [2.2, 846.0], [2.3, 852.0], [2.4, 852.0], [2.5, 862.0], [2.6, 866.0], [2.7, 868.0], [2.8, 869.0], [2.9, 876.0], [3.0, 879.0], [3.1, 879.0], [3.2, 879.0], [3.3, 885.0], [3.4, 890.0], [3.5, 895.0], [3.6, 895.0], [3.7, 902.0], [3.8, 902.0], [3.9, 906.0], [4.0, 913.0], [4.1, 921.0], [4.2, 922.0], [4.3, 923.0], [4.4, 924.0], [4.5, 925.0], [4.6, 929.0], [4.7, 930.0], [4.8, 934.0], [4.9, 937.0], [5.0, 938.0], [5.1, 941.0], [5.2, 941.0], [5.3, 942.0], [5.4, 943.0], [5.5, 943.0], [5.6, 948.0], [5.7, 948.0], [5.8, 949.0], [5.9, 950.0], [6.0, 950.0], [6.1, 950.0], [6.2, 951.0], [6.3, 951.0], [6.4, 951.0], [6.5, 953.0], [6.6, 953.0], [6.7, 953.0], [6.8, 953.0], [6.9, 954.0], [7.0, 954.0], [7.1, 956.0], [7.2, 959.0], [7.3, 959.0], [7.4, 961.0], [7.5, 963.0], [7.6, 964.0], [7.7, 965.0], [7.8, 967.0], [7.9, 968.0], [8.0, 969.0], [8.1, 969.0], [8.2, 970.0], [8.3, 971.0], [8.4, 971.0], [8.5, 972.0], [8.6, 973.0], [8.7, 973.0], [8.8, 973.0], [8.9, 974.0], [9.0, 974.0], [9.1, 975.0], [9.2, 976.0], [9.3, 977.0], [9.4, 977.0], [9.5, 978.0], [9.6, 978.0], [9.7, 979.0], [9.8, 980.0], [9.9, 981.0], [10.0, 981.0], [10.1, 981.0], [10.2, 982.0], [10.3, 982.0], [10.4, 983.0], [10.5, 984.0], [10.6, 984.0], [10.7, 984.0], [10.8, 985.0], [10.9, 985.0], [11.0, 986.0], [11.1, 987.0], [11.2, 987.0], [11.3, 988.0], [11.4, 989.0], [11.5, 989.0], [11.6, 989.0], [11.7, 989.0], [11.8, 990.0], [11.9, 990.0], [12.0, 991.0], [12.1, 992.0], [12.2, 995.0], [12.3, 996.0], [12.4, 996.0], [12.5, 996.0], [12.6, 999.0], [12.7, 999.0], [12.8, 999.0], [12.9, 999.0], [13.0, 1000.0], [13.1, 1000.0], [13.2, 1002.0], [13.3, 1003.0], [13.4, 1003.0], [13.5, 1003.0], [13.6, 1004.0], [13.7, 1004.0], [13.8, 1005.0], [13.9, 1005.0], [14.0, 1006.0], [14.1, 1006.0], [14.2, 1007.0], [14.3, 1007.0], [14.4, 1007.0], [14.5, 1008.0], [14.6, 1009.0], [14.7, 1009.0], [14.8, 1009.0], [14.9, 1009.0], [15.0, 1011.0], [15.1, 1012.0], [15.2, 1012.0], [15.3, 1013.0], [15.4, 1014.0], [15.5, 1014.0], [15.6, 1017.0], [15.7, 1017.0], [15.8, 1018.0], [15.9, 1019.0], [16.0, 1022.0], [16.1, 1022.0], [16.2, 1022.0], [16.3, 1022.0], [16.4, 1022.0], [16.5, 1023.0], [16.6, 1024.0], [16.7, 1024.0], [16.8, 1025.0], [16.9, 1025.0], [17.0, 1026.0], [17.1, 1026.0], [17.2, 1026.0], [17.3, 1026.0], [17.4, 1027.0], [17.5, 1027.0], [17.6, 1027.0], [17.7, 1027.0], [17.8, 1028.0], [17.9, 1029.0], [18.0, 1029.0], [18.1, 1029.0], [18.2, 1030.0], [18.3, 1031.0], [18.4, 1032.0], [18.5, 1032.0], [18.6, 1032.0], [18.7, 1033.0], [18.8, 1034.0], [18.9, 1036.0], [19.0, 1036.0], [19.1, 1036.0], [19.2, 1036.0], [19.3, 1036.0], [19.4, 1037.0], [19.5, 1037.0], [19.6, 1037.0], [19.7, 1037.0], [19.8, 1038.0], [19.9, 1039.0], [20.0, 1040.0], [20.1, 1041.0], [20.2, 1041.0], [20.3, 1041.0], [20.4, 1041.0], [20.5, 1041.0], [20.6, 1042.0], [20.7, 1043.0], [20.8, 1043.0], [20.9, 1043.0], [21.0, 1044.0], [21.1, 1044.0], [21.2, 1045.0], [21.3, 1046.0], [21.4, 1047.0], [21.5, 1047.0], [21.6, 1048.0], [21.7, 1048.0], [21.8, 1049.0], [21.9, 1050.0], [22.0, 1050.0], [22.1, 1051.0], [22.2, 1052.0], [22.3, 1052.0], [22.4, 1052.0], [22.5, 1053.0], [22.6, 1053.0], [22.7, 1054.0], [22.8, 1054.0], [22.9, 1054.0], [23.0, 1055.0], [23.1, 1055.0], [23.2, 1056.0], [23.3, 1056.0], [23.4, 1056.0], [23.5, 1057.0], [23.6, 1057.0], [23.7, 1057.0], [23.8, 1057.0], [23.9, 1058.0], [24.0, 1058.0], [24.1, 1058.0], [24.2, 1059.0], [24.3, 1060.0], [24.4, 1061.0], [24.5, 1061.0], [24.6, 1061.0], [24.7, 1061.0], [24.8, 1061.0], [24.9, 1061.0], [25.0, 1062.0], [25.1, 1062.0], [25.2, 1062.0], [25.3, 1062.0], [25.4, 1063.0], [25.5, 1063.0], [25.6, 1063.0], [25.7, 1064.0], [25.8, 1064.0], [25.9, 1064.0], [26.0, 1065.0], [26.1, 1065.0], [26.2, 1065.0], [26.3, 1066.0], [26.4, 1066.0], [26.5, 1067.0], [26.6, 1067.0], [26.7, 1067.0], [26.8, 1069.0], [26.9, 1069.0], [27.0, 1069.0], [27.1, 1069.0], [27.2, 1070.0], [27.3, 1070.0], [27.4, 1070.0], [27.5, 1070.0], [27.6, 1070.0], [27.7, 1070.0], [27.8, 1071.0], [27.9, 1071.0], [28.0, 1071.0], [28.1, 1071.0], [28.2, 1072.0], [28.3, 1073.0], [28.4, 1073.0], [28.5, 1073.0], [28.6, 1073.0], [28.7, 1073.0], [28.8, 1074.0], [28.9, 1074.0], [29.0, 1074.0], [29.1, 1074.0], [29.2, 1074.0], [29.3, 1075.0], [29.4, 1075.0], [29.5, 1075.0], [29.6, 1075.0], [29.7, 1076.0], [29.8, 1077.0], [29.9, 1077.0], [30.0, 1078.0], [30.1, 1078.0], [30.2, 1078.0], [30.3, 1078.0], [30.4, 1078.0], [30.5, 1079.0], [30.6, 1079.0], [30.7, 1079.0], [30.8, 1080.0], [30.9, 1080.0], [31.0, 1080.0], [31.1, 1080.0], [31.2, 1080.0], [31.3, 1080.0], [31.4, 1081.0], [31.5, 1081.0], [31.6, 1082.0], [31.7, 1082.0], [31.8, 1083.0], [31.9, 1083.0], [32.0, 1083.0], [32.1, 1083.0], [32.2, 1083.0], [32.3, 1083.0], [32.4, 1084.0], [32.5, 1085.0], [32.6, 1085.0], [32.7, 1085.0], [32.8, 1085.0], [32.9, 1086.0], [33.0, 1087.0], [33.1, 1088.0], [33.2, 1088.0], [33.3, 1088.0], [33.4, 1088.0], [33.5, 1088.0], [33.6, 1089.0], [33.7, 1089.0], [33.8, 1089.0], [33.9, 1089.0], [34.0, 1089.0], [34.1, 1089.0], [34.2, 1090.0], [34.3, 1090.0], [34.4, 1090.0], [34.5, 1091.0], [34.6, 1092.0], [34.7, 1092.0], [34.8, 1093.0], [34.9, 1093.0], [35.0, 1093.0], [35.1, 1094.0], [35.2, 1094.0], [35.3, 1094.0], [35.4, 1094.0], [35.5, 1095.0], [35.6, 1095.0], [35.7, 1095.0], [35.8, 1096.0], [35.9, 1096.0], [36.0, 1096.0], [36.1, 1096.0], [36.2, 1096.0], [36.3, 1096.0], [36.4, 1097.0], [36.5, 1097.0], [36.6, 1097.0], [36.7, 1097.0], [36.8, 1098.0], [36.9, 1098.0], [37.0, 1098.0], [37.1, 1098.0], [37.2, 1098.0], [37.3, 1098.0], [37.4, 1098.0], [37.5, 1099.0], [37.6, 1099.0], [37.7, 1099.0], [37.8, 1099.0], [37.9, 1100.0], [38.0, 1100.0], [38.1, 1100.0], [38.2, 1100.0], [38.3, 1100.0], [38.4, 1100.0], [38.5, 1101.0], [38.6, 1101.0], [38.7, 1101.0], [38.8, 1101.0], [38.9, 1101.0], [39.0, 1102.0], [39.1, 1102.0], [39.2, 1102.0], [39.3, 1102.0], [39.4, 1102.0], [39.5, 1102.0], [39.6, 1102.0], [39.7, 1102.0], [39.8, 1103.0], [39.9, 1103.0], [40.0, 1103.0], [40.1, 1103.0], [40.2, 1103.0], [40.3, 1104.0], [40.4, 1104.0], [40.5, 1104.0], [40.6, 1104.0], [40.7, 1105.0], [40.8, 1106.0], [40.9, 1106.0], [41.0, 1106.0], [41.1, 1106.0], [41.2, 1107.0], [41.3, 1107.0], [41.4, 1107.0], [41.5, 1108.0], [41.6, 1108.0], [41.7, 1108.0], [41.8, 1109.0], [41.9, 1109.0], [42.0, 1109.0], [42.1, 1110.0], [42.2, 1110.0], [42.3, 1110.0], [42.4, 1111.0], [42.5, 1111.0], [42.6, 1111.0], [42.7, 1111.0], [42.8, 1112.0], [42.9, 1112.0], [43.0, 1112.0], [43.1, 1112.0], [43.2, 1112.0], [43.3, 1113.0], [43.4, 1113.0], [43.5, 1113.0], [43.6, 1113.0], [43.7, 1113.0], [43.8, 1113.0], [43.9, 1114.0], [44.0, 1114.0], [44.1, 1114.0], [44.2, 1115.0], [44.3, 1115.0], [44.4, 1115.0], [44.5, 1115.0], [44.6, 1115.0], [44.7, 1116.0], [44.8, 1116.0], [44.9, 1116.0], [45.0, 1116.0], [45.1, 1117.0], [45.2, 1117.0], [45.3, 1117.0], [45.4, 1117.0], [45.5, 1117.0], [45.6, 1117.0], [45.7, 1117.0], [45.8, 1118.0], [45.9, 1118.0], [46.0, 1119.0], [46.1, 1119.0], [46.2, 1119.0], [46.3, 1119.0], [46.4, 1119.0], [46.5, 1120.0], [46.6, 1120.0], [46.7, 1120.0], [46.8, 1120.0], [46.9, 1121.0], [47.0, 1121.0], [47.1, 1121.0], [47.2, 1121.0], [47.3, 1121.0], [47.4, 1122.0], [47.5, 1122.0], [47.6, 1122.0], [47.7, 1122.0], [47.8, 1122.0], [47.9, 1123.0], [48.0, 1123.0], [48.1, 1123.0], [48.2, 1123.0], [48.3, 1124.0], [48.4, 1124.0], [48.5, 1124.0], [48.6, 1124.0], [48.7, 1124.0], [48.8, 1124.0], [48.9, 1124.0], [49.0, 1124.0], [49.1, 1125.0], [49.2, 1125.0], [49.3, 1125.0], [49.4, 1125.0], [49.5, 1125.0], [49.6, 1125.0], [49.7, 1125.0], [49.8, 1125.0], [49.9, 1125.0], [50.0, 1126.0], [50.1, 1126.0], [50.2, 1126.0], [50.3, 1127.0], [50.4, 1127.0], [50.5, 1127.0], [50.6, 1127.0], [50.7, 1127.0], [50.8, 1128.0], [50.9, 1128.0], [51.0, 1128.0], [51.1, 1129.0], [51.2, 1129.0], [51.3, 1129.0], [51.4, 1129.0], [51.5, 1130.0], [51.6, 1131.0], [51.7, 1131.0], [51.8, 1131.0], [51.9, 1131.0], [52.0, 1132.0], [52.1, 1132.0], [52.2, 1132.0], [52.3, 1132.0], [52.4, 1132.0], [52.5, 1132.0], [52.6, 1132.0], [52.7, 1132.0], [52.8, 1133.0], [52.9, 1133.0], [53.0, 1133.0], [53.1, 1133.0], [53.2, 1133.0], [53.3, 1133.0], [53.4, 1133.0], [53.5, 1134.0], [53.6, 1134.0], [53.7, 1134.0], [53.8, 1134.0], [53.9, 1134.0], [54.0, 1134.0], [54.1, 1135.0], [54.2, 1135.0], [54.3, 1135.0], [54.4, 1135.0], [54.5, 1135.0], [54.6, 1135.0], [54.7, 1136.0], [54.8, 1136.0], [54.9, 1136.0], [55.0, 1137.0], [55.1, 1137.0], [55.2, 1137.0], [55.3, 1137.0], [55.4, 1137.0], [55.5, 1139.0], [55.6, 1140.0], [55.7, 1140.0], [55.8, 1140.0], [55.9, 1140.0], [56.0, 1140.0], [56.1, 1140.0], [56.2, 1141.0], [56.3, 1141.0], [56.4, 1141.0], [56.5, 1141.0], [56.6, 1141.0], [56.7, 1141.0], [56.8, 1141.0], [56.9, 1142.0], [57.0, 1142.0], [57.1, 1142.0], [57.2, 1142.0], [57.3, 1142.0], [57.4, 1142.0], [57.5, 1142.0], [57.6, 1143.0], [57.7, 1143.0], [57.8, 1144.0], [57.9, 1144.0], [58.0, 1144.0], [58.1, 1145.0], [58.2, 1145.0], [58.3, 1145.0], [58.4, 1145.0], [58.5, 1146.0], [58.6, 1146.0], [58.7, 1146.0], [58.8, 1147.0], [58.9, 1148.0], [59.0, 1148.0], [59.1, 1149.0], [59.2, 1151.0], [59.3, 1151.0], [59.4, 1151.0], [59.5, 1151.0], [59.6, 1151.0], [59.7, 1151.0], [59.8, 1152.0], [59.9, 1152.0], [60.0, 1152.0], [60.1, 1152.0], [60.2, 1152.0], [60.3, 1152.0], [60.4, 1153.0], [60.5, 1153.0], [60.6, 1153.0], [60.7, 1153.0], [60.8, 1153.0], [60.9, 1154.0], [61.0, 1154.0], [61.1, 1154.0], [61.2, 1154.0], [61.3, 1155.0], [61.4, 1156.0], [61.5, 1157.0], [61.6, 1157.0], [61.7, 1157.0], [61.8, 1157.0], [61.9, 1158.0], [62.0, 1158.0], [62.1, 1158.0], [62.2, 1159.0], [62.3, 1159.0], [62.4, 1159.0], [62.5, 1159.0], [62.6, 1159.0], [62.7, 1160.0], [62.8, 1161.0], [62.9, 1161.0], [63.0, 1161.0], [63.1, 1161.0], [63.2, 1161.0], [63.3, 1161.0], [63.4, 1161.0], [63.5, 1162.0], [63.6, 1162.0], [63.7, 1162.0], [63.8, 1162.0], [63.9, 1162.0], [64.0, 1163.0], [64.1, 1163.0], [64.2, 1163.0], [64.3, 1163.0], [64.4, 1163.0], [64.5, 1163.0], [64.6, 1164.0], [64.7, 1165.0], [64.8, 1165.0], [64.9, 1165.0], [65.0, 1165.0], [65.1, 1165.0], [65.2, 1165.0], [65.3, 1165.0], [65.4, 1165.0], [65.5, 1165.0], [65.6, 1165.0], [65.7, 1166.0], [65.8, 1166.0], [65.9, 1166.0], [66.0, 1166.0], [66.1, 1167.0], [66.2, 1168.0], [66.3, 1168.0], [66.4, 1168.0], [66.5, 1168.0], [66.6, 1168.0], [66.7, 1168.0], [66.8, 1168.0], [66.9, 1168.0], [67.0, 1169.0], [67.1, 1170.0], [67.2, 1170.0], [67.3, 1170.0], [67.4, 1170.0], [67.5, 1171.0], [67.6, 1171.0], [67.7, 1172.0], [67.8, 1172.0], [67.9, 1172.0], [68.0, 1172.0], [68.1, 1172.0], [68.2, 1173.0], [68.3, 1173.0], [68.4, 1173.0], [68.5, 1173.0], [68.6, 1173.0], [68.7, 1174.0], [68.8, 1174.0], [68.9, 1174.0], [69.0, 1174.0], [69.1, 1175.0], [69.2, 1175.0], [69.3, 1176.0], [69.4, 1176.0], [69.5, 1176.0], [69.6, 1177.0], [69.7, 1177.0], [69.8, 1177.0], [69.9, 1178.0], [70.0, 1178.0], [70.1, 1179.0], [70.2, 1179.0], [70.3, 1181.0], [70.4, 1181.0], [70.5, 1181.0], [70.6, 1181.0], [70.7, 1181.0], [70.8, 1182.0], [70.9, 1182.0], [71.0, 1182.0], [71.1, 1182.0], [71.2, 1183.0], [71.3, 1183.0], [71.4, 1183.0], [71.5, 1184.0], [71.6, 1184.0], [71.7, 1184.0], [71.8, 1184.0], [71.9, 1184.0], [72.0, 1185.0], [72.1, 1185.0], [72.2, 1185.0], [72.3, 1185.0], [72.4, 1185.0], [72.5, 1186.0], [72.6, 1186.0], [72.7, 1186.0], [72.8, 1188.0], [72.9, 1188.0], [73.0, 1188.0], [73.1, 1189.0], [73.2, 1190.0], [73.3, 1190.0], [73.4, 1191.0], [73.5, 1191.0], [73.6, 1191.0], [73.7, 1192.0], [73.8, 1192.0], [73.9, 1193.0], [74.0, 1193.0], [74.1, 1194.0], [74.2, 1194.0], [74.3, 1194.0], [74.4, 1195.0], [74.5, 1196.0], [74.6, 1196.0], [74.7, 1196.0], [74.8, 1197.0], [74.9, 1198.0], [75.0, 1199.0], [75.1, 1199.0], [75.2, 1199.0], [75.3, 1199.0], [75.4, 1200.0], [75.5, 1200.0], [75.6, 1201.0], [75.7, 1201.0], [75.8, 1201.0], [75.9, 1203.0], [76.0, 1204.0], [76.1, 1205.0], [76.2, 1205.0], [76.3, 1207.0], [76.4, 1207.0], [76.5, 1207.0], [76.6, 1207.0], [76.7, 1208.0], [76.8, 1208.0], [76.9, 1209.0], [77.0, 1209.0], [77.1, 1209.0], [77.2, 1210.0], [77.3, 1210.0], [77.4, 1212.0], [77.5, 1213.0], [77.6, 1214.0], [77.7, 1214.0], [77.8, 1217.0], [77.9, 1218.0], [78.0, 1218.0], [78.1, 1218.0], [78.2, 1219.0], [78.3, 1219.0], [78.4, 1219.0], [78.5, 1220.0], [78.6, 1220.0], [78.7, 1220.0], [78.8, 1221.0], [78.9, 1221.0], [79.0, 1221.0], [79.1, 1222.0], [79.2, 1222.0], [79.3, 1222.0], [79.4, 1222.0], [79.5, 1223.0], [79.6, 1223.0], [79.7, 1224.0], [79.8, 1224.0], [79.9, 1225.0], [80.0, 1225.0], [80.1, 1226.0], [80.2, 1226.0], [80.3, 1226.0], [80.4, 1226.0], [80.5, 1227.0], [80.6, 1228.0], [80.7, 1228.0], [80.8, 1230.0], [80.9, 1230.0], [81.0, 1230.0], [81.1, 1230.0], [81.2, 1230.0], [81.3, 1231.0], [81.4, 1231.0], [81.5, 1232.0], [81.6, 1233.0], [81.7, 1233.0], [81.8, 1235.0], [81.9, 1235.0], [82.0, 1236.0], [82.1, 1236.0], [82.2, 1239.0], [82.3, 1240.0], [82.4, 1240.0], [82.5, 1241.0], [82.6, 1241.0], [82.7, 1242.0], [82.8, 1242.0], [82.9, 1243.0], [83.0, 1243.0], [83.1, 1244.0], [83.2, 1245.0], [83.3, 1245.0], [83.4, 1245.0], [83.5, 1245.0], [83.6, 1246.0], [83.7, 1248.0], [83.8, 1251.0], [83.9, 1251.0], [84.0, 1252.0], [84.1, 1252.0], [84.2, 1253.0], [84.3, 1255.0], [84.4, 1255.0], [84.5, 1255.0], [84.6, 1256.0], [84.7, 1256.0], [84.8, 1256.0], [84.9, 1257.0], [85.0, 1257.0], [85.1, 1259.0], [85.2, 1260.0], [85.3, 1260.0], [85.4, 1260.0], [85.5, 1262.0], [85.6, 1263.0], [85.7, 1263.0], [85.8, 1263.0], [85.9, 1265.0], [86.0, 1265.0], [86.1, 1267.0], [86.2, 1267.0], [86.3, 1267.0], [86.4, 1268.0], [86.5, 1269.0], [86.6, 1269.0], [86.7, 1269.0], [86.8, 1274.0], [86.9, 1275.0], [87.0, 1275.0], [87.1, 1276.0], [87.2, 1278.0], [87.3, 1278.0], [87.4, 1279.0], [87.5, 1279.0], [87.6, 1283.0], [87.7, 1284.0], [87.8, 1284.0], [87.9, 1285.0], [88.0, 1285.0], [88.1, 1286.0], [88.2, 1287.0], [88.3, 1287.0], [88.4, 1288.0], [88.5, 1288.0], [88.6, 1288.0], [88.7, 1289.0], [88.8, 1290.0], [88.9, 1292.0], [89.0, 1292.0], [89.1, 1294.0], [89.2, 1296.0], [89.3, 1298.0], [89.4, 1298.0], [89.5, 1298.0], [89.6, 1298.0], [89.7, 1300.0], [89.8, 1301.0], [89.9, 1303.0], [90.0, 1303.0], [90.1, 1304.0], [90.2, 1304.0], [90.3, 1306.0], [90.4, 1306.0], [90.5, 1306.0], [90.6, 1306.0], [90.7, 1308.0], [90.8, 1309.0], [90.9, 1310.0], [91.0, 1310.0], [91.1, 1310.0], [91.2, 1313.0], [91.3, 1314.0], [91.4, 1315.0], [91.5, 1316.0], [91.6, 1316.0], [91.7, 1316.0], [91.8, 1316.0], [91.9, 1318.0], [92.0, 1319.0], [92.1, 1321.0], [92.2, 1323.0], [92.3, 1324.0], [92.4, 1324.0], [92.5, 1324.0], [92.6, 1326.0], [92.7, 1326.0], [92.8, 1328.0], [92.9, 1328.0], [93.0, 1328.0], [93.1, 1329.0], [93.2, 1330.0], [93.3, 1330.0], [93.4, 1331.0], [93.5, 1333.0], [93.6, 1333.0], [93.7, 1334.0], [93.8, 1335.0], [93.9, 1340.0], [94.0, 1340.0], [94.1, 1342.0], [94.2, 1342.0], [94.3, 1344.0], [94.4, 1345.0], [94.5, 1345.0], [94.6, 1346.0], [94.7, 1346.0], [94.8, 1348.0], [94.9, 1348.0], [95.0, 1349.0], [95.1, 1352.0], [95.2, 1354.0], [95.3, 1362.0], [95.4, 1369.0], [95.5, 1370.0], [95.6, 1371.0], [95.7, 1377.0], [95.8, 1379.0], [95.9, 1382.0], [96.0, 1383.0], [96.1, 1388.0], [96.2, 1389.0], [96.3, 1392.0], [96.4, 1394.0], [96.5, 1407.0], [96.6, 1410.0], [96.7, 1413.0], [96.8, 1415.0], [96.9, 1415.0], [97.0, 1417.0], [97.1, 1419.0], [97.2, 1419.0], [97.3, 1419.0], [97.4, 1423.0], [97.5, 1425.0], [97.6, 1432.0], [97.7, 1433.0], [97.8, 1441.0], [97.9, 1448.0], [98.0, 1461.0], [98.1, 1481.0], [98.2, 1496.0], [98.3, 1496.0], [98.4, 1497.0], [98.5, 1509.0], [98.6, 1515.0], [98.7, 1517.0], [98.8, 1525.0], [98.9, 1547.0], [99.0, 1574.0], [99.1, 1606.0], [99.2, 1648.0], [99.3, 1719.0], [99.4, 1740.0], [99.5, 1819.0], [99.6, 1845.0], [99.7, 1882.0], [99.8, 1886.0], [99.9, 2252.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 3303.0], [0.1, 3319.0], [0.2, 3418.0], [0.3, 3422.0], [0.4, 3436.0], [0.5, 3450.0], [0.6, 3466.0], [0.7, 3477.0], [0.8, 3482.0], [0.9, 3485.0], [1.0, 3486.0], [1.1, 3492.0], [1.2, 3508.0], [1.3, 3510.0], [1.4, 3511.0], [1.5, 3513.0], [1.6, 3513.0], [1.7, 3516.0], [1.8, 3517.0], [1.9, 3518.0], [2.0, 3526.0], [2.1, 3530.0], [2.2, 3532.0], [2.3, 3537.0], [2.4, 3540.0], [2.5, 3540.0], [2.6, 3545.0], [2.7, 3545.0], [2.8, 3546.0], [2.9, 3550.0], [3.0, 3551.0], [3.1, 3551.0], [3.2, 3558.0], [3.3, 3558.0], [3.4, 3561.0], [3.5, 3561.0], [3.6, 3561.0], [3.7, 3564.0], [3.8, 3565.0], [3.9, 3565.0], [4.0, 3568.0], [4.1, 3568.0], [4.2, 3569.0], [4.3, 3570.0], [4.4, 3570.0], [4.5, 3573.0], [4.6, 3575.0], [4.7, 3578.0], [4.8, 3579.0], [4.9, 3580.0], [5.0, 3580.0], [5.1, 3582.0], [5.2, 3584.0], [5.3, 3585.0], [5.4, 3586.0], [5.5, 3587.0], [5.6, 3588.0], [5.7, 3593.0], [5.8, 3595.0], [5.9, 3595.0], [6.0, 3595.0], [6.1, 3596.0], [6.2, 3596.0], [6.3, 3599.0], [6.4, 3599.0], [6.5, 3600.0], [6.6, 3600.0], [6.7, 3600.0], [6.8, 3601.0], [6.9, 3601.0], [7.0, 3603.0], [7.1, 3604.0], [7.2, 3604.0], [7.3, 3605.0], [7.4, 3605.0], [7.5, 3608.0], [7.6, 3608.0], [7.7, 3608.0], [7.8, 3608.0], [7.9, 3611.0], [8.0, 3612.0], [8.1, 3612.0], [8.2, 3612.0], [8.3, 3613.0], [8.4, 3614.0], [8.5, 3614.0], [8.6, 3615.0], [8.7, 3616.0], [8.8, 3617.0], [8.9, 3617.0], [9.0, 3618.0], [9.1, 3619.0], [9.2, 3620.0], [9.3, 3621.0], [9.4, 3621.0], [9.5, 3624.0], [9.6, 3624.0], [9.7, 3625.0], [9.8, 3625.0], [9.9, 3625.0], [10.0, 3627.0], [10.1, 3629.0], [10.2, 3629.0], [10.3, 3629.0], [10.4, 3630.0], [10.5, 3630.0], [10.6, 3631.0], [10.7, 3631.0], [10.8, 3632.0], [10.9, 3633.0], [11.0, 3634.0], [11.1, 3635.0], [11.2, 3636.0], [11.3, 3637.0], [11.4, 3637.0], [11.5, 3638.0], [11.6, 3638.0], [11.7, 3641.0], [11.8, 3642.0], [11.9, 3642.0], [12.0, 3642.0], [12.1, 3642.0], [12.2, 3644.0], [12.3, 3644.0], [12.4, 3645.0], [12.5, 3645.0], [12.6, 3645.0], [12.7, 3645.0], [12.8, 3645.0], [12.9, 3646.0], [13.0, 3647.0], [13.1, 3647.0], [13.2, 3648.0], [13.3, 3649.0], [13.4, 3649.0], [13.5, 3650.0], [13.6, 3650.0], [13.7, 3651.0], [13.8, 3652.0], [13.9, 3652.0], [14.0, 3653.0], [14.1, 3654.0], [14.2, 3654.0], [14.3, 3655.0], [14.4, 3655.0], [14.5, 3656.0], [14.6, 3659.0], [14.7, 3659.0], [14.8, 3659.0], [14.9, 3660.0], [15.0, 3661.0], [15.1, 3662.0], [15.2, 3662.0], [15.3, 3662.0], [15.4, 3662.0], [15.5, 3662.0], [15.6, 3663.0], [15.7, 3664.0], [15.8, 3664.0], [15.9, 3664.0], [16.0, 3665.0], [16.1, 3668.0], [16.2, 3668.0], [16.3, 3669.0], [16.4, 3669.0], [16.5, 3669.0], [16.6, 3670.0], [16.7, 3670.0], [16.8, 3671.0], [16.9, 3673.0], [17.0, 3673.0], [17.1, 3673.0], [17.2, 3674.0], [17.3, 3674.0], [17.4, 3674.0], [17.5, 3675.0], [17.6, 3675.0], [17.7, 3675.0], [17.8, 3675.0], [17.9, 3676.0], [18.0, 3676.0], [18.1, 3676.0], [18.2, 3677.0], [18.3, 3678.0], [18.4, 3678.0], [18.5, 3679.0], [18.6, 3679.0], [18.7, 3679.0], [18.8, 3679.0], [18.9, 3679.0], [19.0, 3680.0], [19.1, 3680.0], [19.2, 3680.0], [19.3, 3681.0], [19.4, 3682.0], [19.5, 3682.0], [19.6, 3682.0], [19.7, 3682.0], [19.8, 3682.0], [19.9, 3683.0], [20.0, 3686.0], [20.1, 3686.0], [20.2, 3686.0], [20.3, 3688.0], [20.4, 3688.0], [20.5, 3689.0], [20.6, 3689.0], [20.7, 3689.0], [20.8, 3689.0], [20.9, 3690.0], [21.0, 3690.0], [21.1, 3691.0], [21.2, 3691.0], [21.3, 3691.0], [21.4, 3692.0], [21.5, 3692.0], [21.6, 3693.0], [21.7, 3693.0], [21.8, 3694.0], [21.9, 3694.0], [22.0, 3695.0], [22.1, 3696.0], [22.2, 3696.0], [22.3, 3698.0], [22.4, 3698.0], [22.5, 3699.0], [22.6, 3699.0], [22.7, 3699.0], [22.8, 3699.0], [22.9, 3700.0], [23.0, 3700.0], [23.1, 3700.0], [23.2, 3701.0], [23.3, 3701.0], [23.4, 3701.0], [23.5, 3701.0], [23.6, 3703.0], [23.7, 3703.0], [23.8, 3704.0], [23.9, 3704.0], [24.0, 3704.0], [24.1, 3704.0], [24.2, 3706.0], [24.3, 3706.0], [24.4, 3707.0], [24.5, 3708.0], [24.6, 3709.0], [24.7, 3709.0], [24.8, 3709.0], [24.9, 3709.0], [25.0, 3710.0], [25.1, 3710.0], [25.2, 3710.0], [25.3, 3710.0], [25.4, 3711.0], [25.5, 3711.0], [25.6, 3711.0], [25.7, 3712.0], [25.8, 3712.0], [25.9, 3713.0], [26.0, 3713.0], [26.1, 3716.0], [26.2, 3717.0], [26.3, 3717.0], [26.4, 3717.0], [26.5, 3718.0], [26.6, 3718.0], [26.7, 3721.0], [26.8, 3722.0], [26.9, 3723.0], [27.0, 3723.0], [27.1, 3723.0], [27.2, 3724.0], [27.3, 3725.0], [27.4, 3726.0], [27.5, 3727.0], [27.6, 3727.0], [27.7, 3728.0], [27.8, 3728.0], [27.9, 3729.0], [28.0, 3730.0], [28.1, 3731.0], [28.2, 3731.0], [28.3, 3731.0], [28.4, 3732.0], [28.5, 3732.0], [28.6, 3733.0], [28.7, 3733.0], [28.8, 3734.0], [28.9, 3734.0], [29.0, 3735.0], [29.1, 3735.0], [29.2, 3735.0], [29.3, 3735.0], [29.4, 3736.0], [29.5, 3736.0], [29.6, 3736.0], [29.7, 3737.0], [29.8, 3738.0], [29.9, 3738.0], [30.0, 3741.0], [30.1, 3741.0], [30.2, 3741.0], [30.3, 3742.0], [30.4, 3742.0], [30.5, 3742.0], [30.6, 3743.0], [30.7, 3743.0], [30.8, 3744.0], [30.9, 3744.0], [31.0, 3744.0], [31.1, 3745.0], [31.2, 3745.0], [31.3, 3745.0], [31.4, 3745.0], [31.5, 3746.0], [31.6, 3746.0], [31.7, 3747.0], [31.8, 3748.0], [31.9, 3748.0], [32.0, 3748.0], [32.1, 3750.0], [32.2, 3750.0], [32.3, 3750.0], [32.4, 3752.0], [32.5, 3752.0], [32.6, 3752.0], [32.7, 3752.0], [32.8, 3753.0], [32.9, 3753.0], [33.0, 3754.0], [33.1, 3755.0], [33.2, 3756.0], [33.3, 3756.0], [33.4, 3756.0], [33.5, 3756.0], [33.6, 3757.0], [33.7, 3758.0], [33.8, 3758.0], [33.9, 3758.0], [34.0, 3758.0], [34.1, 3758.0], [34.2, 3759.0], [34.3, 3759.0], [34.4, 3759.0], [34.5, 3760.0], [34.6, 3760.0], [34.7, 3761.0], [34.8, 3761.0], [34.9, 3763.0], [35.0, 3764.0], [35.1, 3764.0], [35.2, 3764.0], [35.3, 3764.0], [35.4, 3765.0], [35.5, 3765.0], [35.6, 3766.0], [35.7, 3766.0], [35.8, 3766.0], [35.9, 3767.0], [36.0, 3767.0], [36.1, 3769.0], [36.2, 3770.0], [36.3, 3770.0], [36.4, 3770.0], [36.5, 3771.0], [36.6, 3771.0], [36.7, 3772.0], [36.8, 3773.0], [36.9, 3773.0], [37.0, 3773.0], [37.1, 3774.0], [37.2, 3775.0], [37.3, 3775.0], [37.4, 3776.0], [37.5, 3777.0], [37.6, 3777.0], [37.7, 3777.0], [37.8, 3778.0], [37.9, 3778.0], [38.0, 3778.0], [38.1, 3779.0], [38.2, 3780.0], [38.3, 3780.0], [38.4, 3780.0], [38.5, 3780.0], [38.6, 3781.0], [38.7, 3781.0], [38.8, 3781.0], [38.9, 3781.0], [39.0, 3781.0], [39.1, 3781.0], [39.2, 3782.0], [39.3, 3783.0], [39.4, 3783.0], [39.5, 3783.0], [39.6, 3783.0], [39.7, 3784.0], [39.8, 3784.0], [39.9, 3784.0], [40.0, 3786.0], [40.1, 3787.0], [40.2, 3787.0], [40.3, 3787.0], [40.4, 3790.0], [40.5, 3790.0], [40.6, 3791.0], [40.7, 3792.0], [40.8, 3792.0], [40.9, 3792.0], [41.0, 3792.0], [41.1, 3793.0], [41.2, 3793.0], [41.3, 3795.0], [41.4, 3795.0], [41.5, 3795.0], [41.6, 3796.0], [41.7, 3796.0], [41.8, 3796.0], [41.9, 3796.0], [42.0, 3796.0], [42.1, 3796.0], [42.2, 3796.0], [42.3, 3797.0], [42.4, 3797.0], [42.5, 3797.0], [42.6, 3797.0], [42.7, 3797.0], [42.8, 3798.0], [42.9, 3799.0], [43.0, 3799.0], [43.1, 3799.0], [43.2, 3800.0], [43.3, 3800.0], [43.4, 3800.0], [43.5, 3800.0], [43.6, 3801.0], [43.7, 3801.0], [43.8, 3801.0], [43.9, 3802.0], [44.0, 3804.0], [44.1, 3804.0], [44.2, 3805.0], [44.3, 3805.0], [44.4, 3806.0], [44.5, 3806.0], [44.6, 3807.0], [44.7, 3807.0], [44.8, 3808.0], [44.9, 3808.0], [45.0, 3809.0], [45.1, 3809.0], [45.2, 3809.0], [45.3, 3809.0], [45.4, 3811.0], [45.5, 3811.0], [45.6, 3812.0], [45.7, 3812.0], [45.8, 3812.0], [45.9, 3813.0], [46.0, 3815.0], [46.1, 3815.0], [46.2, 3815.0], [46.3, 3816.0], [46.4, 3817.0], [46.5, 3817.0], [46.6, 3817.0], [46.7, 3818.0], [46.8, 3820.0], [46.9, 3820.0], [47.0, 3821.0], [47.1, 3821.0], [47.2, 3821.0], [47.3, 3822.0], [47.4, 3823.0], [47.5, 3823.0], [47.6, 3825.0], [47.7, 3825.0], [47.8, 3825.0], [47.9, 3826.0], [48.0, 3827.0], [48.1, 3827.0], [48.2, 3828.0], [48.3, 3828.0], [48.4, 3828.0], [48.5, 3829.0], [48.6, 3829.0], [48.7, 3829.0], [48.8, 3831.0], [48.9, 3831.0], [49.0, 3832.0], [49.1, 3833.0], [49.2, 3834.0], [49.3, 3836.0], [49.4, 3836.0], [49.5, 3838.0], [49.6, 3838.0], [49.7, 3839.0], [49.8, 3839.0], [49.9, 3840.0], [50.0, 3841.0], [50.1, 3841.0], [50.2, 3841.0], [50.3, 3842.0], [50.4, 3842.0], [50.5, 3843.0], [50.6, 3843.0], [50.7, 3843.0], [50.8, 3844.0], [50.9, 3844.0], [51.0, 3845.0], [51.1, 3845.0], [51.2, 3845.0], [51.3, 3845.0], [51.4, 3846.0], [51.5, 3847.0], [51.6, 3847.0], [51.7, 3847.0], [51.8, 3847.0], [51.9, 3849.0], [52.0, 3850.0], [52.1, 3851.0], [52.2, 3852.0], [52.3, 3852.0], [52.4, 3852.0], [52.5, 3853.0], [52.6, 3853.0], [52.7, 3853.0], [52.8, 3854.0], [52.9, 3854.0], [53.0, 3854.0], [53.1, 3854.0], [53.2, 3854.0], [53.3, 3855.0], [53.4, 3855.0], [53.5, 3856.0], [53.6, 3857.0], [53.7, 3857.0], [53.8, 3858.0], [53.9, 3858.0], [54.0, 3858.0], [54.1, 3858.0], [54.2, 3859.0], [54.3, 3859.0], [54.4, 3860.0], [54.5, 3860.0], [54.6, 3861.0], [54.7, 3861.0], [54.8, 3862.0], [54.9, 3863.0], [55.0, 3863.0], [55.1, 3864.0], [55.2, 3864.0], [55.3, 3864.0], [55.4, 3864.0], [55.5, 3865.0], [55.6, 3865.0], [55.7, 3865.0], [55.8, 3865.0], [55.9, 3867.0], [56.0, 3867.0], [56.1, 3867.0], [56.2, 3868.0], [56.3, 3868.0], [56.4, 3869.0], [56.5, 3869.0], [56.6, 3871.0], [56.7, 3871.0], [56.8, 3871.0], [56.9, 3871.0], [57.0, 3872.0], [57.1, 3873.0], [57.2, 3873.0], [57.3, 3874.0], [57.4, 3874.0], [57.5, 3874.0], [57.6, 3875.0], [57.7, 3875.0], [57.8, 3875.0], [57.9, 3876.0], [58.0, 3878.0], [58.1, 3878.0], [58.2, 3878.0], [58.3, 3879.0], [58.4, 3880.0], [58.5, 3880.0], [58.6, 3881.0], [58.7, 3881.0], [58.8, 3881.0], [58.9, 3881.0], [59.0, 3882.0], [59.1, 3882.0], [59.2, 3884.0], [59.3, 3884.0], [59.4, 3885.0], [59.5, 3886.0], [59.6, 3886.0], [59.7, 3887.0], [59.8, 3887.0], [59.9, 3888.0], [60.0, 3888.0], [60.1, 3890.0], [60.2, 3890.0], [60.3, 3890.0], [60.4, 3891.0], [60.5, 3891.0], [60.6, 3893.0], [60.7, 3893.0], [60.8, 3895.0], [60.9, 3895.0], [61.0, 3896.0], [61.1, 3898.0], [61.2, 3899.0], [61.3, 3899.0], [61.4, 3899.0], [61.5, 3900.0], [61.6, 3900.0], [61.7, 3900.0], [61.8, 3902.0], [61.9, 3902.0], [62.0, 3902.0], [62.1, 3902.0], [62.2, 3903.0], [62.3, 3903.0], [62.4, 3903.0], [62.5, 3903.0], [62.6, 3904.0], [62.7, 3904.0], [62.8, 3904.0], [62.9, 3904.0], [63.0, 3904.0], [63.1, 3905.0], [63.2, 3905.0], [63.3, 3908.0], [63.4, 3908.0], [63.5, 3908.0], [63.6, 3908.0], [63.7, 3908.0], [63.8, 3909.0], [63.9, 3909.0], [64.0, 3909.0], [64.1, 3909.0], [64.2, 3910.0], [64.3, 3910.0], [64.4, 3910.0], [64.5, 3910.0], [64.6, 3911.0], [64.7, 3911.0], [64.8, 3912.0], [64.9, 3913.0], [65.0, 3913.0], [65.1, 3915.0], [65.2, 3916.0], [65.3, 3920.0], [65.4, 3920.0], [65.5, 3921.0], [65.6, 3921.0], [65.7, 3921.0], [65.8, 3921.0], [65.9, 3922.0], [66.0, 3925.0], [66.1, 3925.0], [66.2, 3926.0], [66.3, 3926.0], [66.4, 3926.0], [66.5, 3926.0], [66.6, 3927.0], [66.7, 3928.0], [66.8, 3931.0], [66.9, 3931.0], [67.0, 3931.0], [67.1, 3931.0], [67.2, 3931.0], [67.3, 3931.0], [67.4, 3932.0], [67.5, 3933.0], [67.6, 3933.0], [67.7, 3933.0], [67.8, 3933.0], [67.9, 3934.0], [68.0, 3934.0], [68.1, 3934.0], [68.2, 3935.0], [68.3, 3937.0], [68.4, 3937.0], [68.5, 3937.0], [68.6, 3938.0], [68.7, 3938.0], [68.8, 3938.0], [68.9, 3938.0], [69.0, 3940.0], [69.1, 3941.0], [69.2, 3943.0], [69.3, 3943.0], [69.4, 3943.0], [69.5, 3943.0], [69.6, 3945.0], [69.7, 3945.0], [69.8, 3945.0], [69.9, 3946.0], [70.0, 3949.0], [70.1, 3951.0], [70.2, 3952.0], [70.3, 3952.0], [70.4, 3952.0], [70.5, 3953.0], [70.6, 3954.0], [70.7, 3954.0], [70.8, 3956.0], [70.9, 3956.0], [71.0, 3958.0], [71.1, 3958.0], [71.2, 3958.0], [71.3, 3960.0], [71.4, 3961.0], [71.5, 3961.0], [71.6, 3962.0], [71.7, 3962.0], [71.8, 3962.0], [71.9, 3962.0], [72.0, 3963.0], [72.1, 3963.0], [72.2, 3964.0], [72.3, 3966.0], [72.4, 3966.0], [72.5, 3967.0], [72.6, 3967.0], [72.7, 3969.0], [72.8, 3969.0], [72.9, 3969.0], [73.0, 3970.0], [73.1, 3971.0], [73.2, 3972.0], [73.3, 3974.0], [73.4, 3975.0], [73.5, 3976.0], [73.6, 3977.0], [73.7, 3978.0], [73.8, 3978.0], [73.9, 3978.0], [74.0, 3979.0], [74.1, 3979.0], [74.2, 3980.0], [74.3, 3981.0], [74.4, 3982.0], [74.5, 3982.0], [74.6, 3983.0], [74.7, 3984.0], [74.8, 3985.0], [74.9, 3986.0], [75.0, 3987.0], [75.1, 3988.0], [75.2, 3988.0], [75.3, 3989.0], [75.4, 3989.0], [75.5, 3990.0], [75.6, 3991.0], [75.7, 3991.0], [75.8, 3992.0], [75.9, 3995.0], [76.0, 3996.0], [76.1, 4000.0], [76.2, 4001.0], [76.3, 4001.0], [76.4, 4002.0], [76.5, 4002.0], [76.6, 4004.0], [76.7, 4005.0], [76.8, 4005.0], [76.9, 4005.0], [77.0, 4005.0], [77.1, 4005.0], [77.2, 4006.0], [77.3, 4006.0], [77.4, 4007.0], [77.5, 4007.0], [77.6, 4008.0], [77.7, 4008.0], [77.8, 4008.0], [77.9, 4011.0], [78.0, 4011.0], [78.1, 4011.0], [78.2, 4013.0], [78.3, 4013.0], [78.4, 4015.0], [78.5, 4015.0], [78.6, 4016.0], [78.7, 4018.0], [78.8, 4019.0], [78.9, 4021.0], [79.0, 4021.0], [79.1, 4022.0], [79.2, 4023.0], [79.3, 4024.0], [79.4, 4025.0], [79.5, 4026.0], [79.6, 4026.0], [79.7, 4027.0], [79.8, 4027.0], [79.9, 4028.0], [80.0, 4029.0], [80.1, 4032.0], [80.2, 4035.0], [80.3, 4036.0], [80.4, 4036.0], [80.5, 4037.0], [80.6, 4038.0], [80.7, 4041.0], [80.8, 4042.0], [80.9, 4043.0], [81.0, 4044.0], [81.1, 4044.0], [81.2, 4046.0], [81.3, 4047.0], [81.4, 4048.0], [81.5, 4048.0], [81.6, 4048.0], [81.7, 4049.0], [81.8, 4051.0], [81.9, 4051.0], [82.0, 4052.0], [82.1, 4053.0], [82.2, 4054.0], [82.3, 4055.0], [82.4, 4057.0], [82.5, 4061.0], [82.6, 4061.0], [82.7, 4063.0], [82.8, 4064.0], [82.9, 4064.0], [83.0, 4066.0], [83.1, 4067.0], [83.2, 4067.0], [83.3, 4067.0], [83.4, 4069.0], [83.5, 4071.0], [83.6, 4071.0], [83.7, 4072.0], [83.8, 4072.0], [83.9, 4072.0], [84.0, 4078.0], [84.1, 4081.0], [84.2, 4082.0], [84.3, 4083.0], [84.4, 4084.0], [84.5, 4085.0], [84.6, 4089.0], [84.7, 4091.0], [84.8, 4093.0], [84.9, 4093.0], [85.0, 4095.0], [85.1, 4096.0], [85.2, 4096.0], [85.3, 4099.0], [85.4, 4100.0], [85.5, 4102.0], [85.6, 4103.0], [85.7, 4103.0], [85.8, 4107.0], [85.9, 4107.0], [86.0, 4110.0], [86.1, 4113.0], [86.2, 4114.0], [86.3, 4114.0], [86.4, 4114.0], [86.5, 4116.0], [86.6, 4119.0], [86.7, 4120.0], [86.8, 4125.0], [86.9, 4128.0], [87.0, 4129.0], [87.1, 4129.0], [87.2, 4132.0], [87.3, 4133.0], [87.4, 4135.0], [87.5, 4136.0], [87.6, 4137.0], [87.7, 4137.0], [87.8, 4139.0], [87.9, 4145.0], [88.0, 4145.0], [88.1, 4145.0], [88.2, 4148.0], [88.3, 4149.0], [88.4, 4150.0], [88.5, 4155.0], [88.6, 4158.0], [88.7, 4165.0], [88.8, 4166.0], [88.9, 4170.0], [89.0, 4171.0], [89.1, 4172.0], [89.2, 4172.0], [89.3, 4174.0], [89.4, 4181.0], [89.5, 4183.0], [89.6, 4184.0], [89.7, 4194.0], [89.8, 4197.0], [89.9, 4199.0], [90.0, 4208.0], [90.1, 4217.0], [90.2, 4218.0], [90.3, 4224.0], [90.4, 4224.0], [90.5, 4224.0], [90.6, 4226.0], [90.7, 4233.0], [90.8, 4235.0], [90.9, 4241.0], [91.0, 4245.0], [91.1, 4249.0], [91.2, 4249.0], [91.3, 4251.0], [91.4, 4252.0], [91.5, 4256.0], [91.6, 4258.0], [91.7, 4262.0], [91.8, 4265.0], [91.9, 4266.0], [92.0, 4269.0], [92.1, 4270.0], [92.2, 4272.0], [92.3, 4277.0], [92.4, 4278.0], [92.5, 4282.0], [92.6, 4287.0], [92.7, 4300.0], [92.8, 4300.0], [92.9, 4305.0], [93.0, 4307.0], [93.1, 4308.0], [93.2, 4310.0], [93.3, 4311.0], [93.4, 4313.0], [93.5, 4314.0], [93.6, 4326.0], [93.7, 4327.0], [93.8, 4328.0], [93.9, 4329.0], [94.0, 4334.0], [94.1, 4341.0], [94.2, 4345.0], [94.3, 4345.0], [94.4, 4355.0], [94.5, 4359.0], [94.6, 4364.0], [94.7, 4378.0], [94.8, 4383.0], [94.9, 4388.0], [95.0, 4393.0], [95.1, 4396.0], [95.2, 4398.0], [95.3, 4410.0], [95.4, 4428.0], [95.5, 4436.0], [95.6, 4453.0], [95.7, 4473.0], [95.8, 4491.0], [95.9, 4508.0], [96.0, 4509.0], [96.1, 4526.0], [96.2, 4609.0], [96.3, 4612.0], [96.4, 4620.0], [96.5, 4633.0], [96.6, 4644.0], [96.7, 4666.0], [96.8, 4713.0], [96.9, 4729.0], [97.0, 4765.0], [97.1, 4778.0], [97.2, 4779.0], [97.3, 4855.0], [97.4, 4913.0], [97.5, 4937.0], [97.6, 4967.0], [97.7, 5010.0], [97.8, 5014.0], [97.9, 5020.0], [98.0, 5052.0], [98.1, 5117.0], [98.2, 5122.0], [98.3, 5250.0], [98.4, 5267.0], [98.5, 5271.0], [98.6, 5284.0], [98.7, 5325.0], [98.8, 5497.0], [98.9, 5671.0], [99.0, 5768.0], [99.1, 5915.0], [99.2, 6220.0], [99.3, 6252.0], [99.4, 6502.0], [99.5, 7057.0], [99.6, 7771.0], [99.7, 7876.0], [99.8, 8610.0], [99.9, 8931.0]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 872.0, "series": [{"data": [[1500.0, 13.0], [500.0, 608.0], [1000.0, 393.0], [2000.0, 6.0]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[8500.0, 1.0], [9000.0, 1.0], [9500.0, 1.0], [10000.0, 1.0], [10500.0, 1.0], [11500.0, 1.0], [12000.0, 2.0], [4500.0, 6.0], [5000.0, 57.0], [5500.0, 517.0], [6000.0, 327.0], [6500.0, 70.0], [7000.0, 21.0], [7500.0, 11.0], [8000.0, 3.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[0.0, 12.0], [1500.0, 14.0], [1000.0, 872.0], [500.0, 120.0], [2000.0, 2.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[8500.0, 2.0], [4500.0, 18.0], [5000.0, 12.0], [10000.0, 1.0], [5500.0, 3.0], [3000.0, 12.0], [6000.0, 2.0], [6500.0, 1.0], [3500.0, 764.0], [7000.0, 1.0], [7500.0, 2.0], [4000.0, 202.0]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 12000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1970.0, "series": [{"data": [[1.0, 1970.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 23.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 12.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 1055.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.187499999999999, "minX": 1.49936328E12, "maxY": 9.606177606177603, "series": [{"data": [[1.49936388E12, 7.565400843881856], [1.49936358E12, 7.584362139917696], [1.49936352E12, 7.818548387096774], [1.49936418E12, 7.98347107438017], [1.49936364E12, 7.633333333333333], [1.4993643E12, 8.011494252873563], [1.49936334E12, 7.616326530612247], [1.49936424E12, 7.92372881355932], [1.49936328E12, 6.187499999999999], [1.49936394E12, 7.762499999999998], [1.4993634E12, 9.606177606177603], [1.49936406E12, 7.669456066945607], [1.499364E12, 8.065843621399178], [1.4993637E12, 8.29718875502008], [1.49936412E12, 7.756302521008406], [1.49936382E12, 7.556962025316456], [1.49936376E12, 8.055118110236224], [1.49936346E12, 7.566666666666666]], "isOverall": false, "label": "Authenticated Browsing", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.4993643E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 632.0, "minX": 1.0, "maxY": 9856.8, "series": [{"data": [[8.0, 966.4454664914583], [2.0, 640.0], [9.0, 1063.246753246753], [10.0, 1188.2307692307693], [11.0, 1263.5714285714284], [12.0, 1603.3333333333333], [3.0, 653.0], [13.0, 1637.2], [14.0, 1512.5833333333333], [4.0, 639.0], [1.0, 632.0], [5.0, 648.0], [6.0, 671.0], [7.0, 792.8983050847459]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[8.21960784313726, 985.5960784313734]], "isOverall": false, "label": "Submit Idea-Aggregated", "isController": false}, {"data": [[8.0, 5941.089356110385], [2.0, 5587.0], [9.0, 6318.5584415584435], [10.0, 7084.615384615385], [11.0, 6868.857142857143], [12.0, 7075.0], [3.0, 5817.0], [13.0, 9856.8], [14.0, 8133.5], [4.0, 5924.0], [1.0, 5556.0], [5.0, 5828.0], [6.0, 5972.0], [7.0, 5423.949152542374]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[8.21960784313726, 6036.487254901963]], "isOverall": false, "label": "Transaction Controller-Aggregated", "isController": true}, {"data": [[2.0, 1121.0], [8.0, 1130.80303030303], [9.0, 1060.7209302325582], [10.0, 1116.3636363636363], [11.0, 1027.5], [3.0, 1090.0], [12.0, 1305.5], [13.0, 1123.0833333333335], [14.0, 810.6666666666666], [4.0, 869.0], [5.0, 885.0], [6.0, 1050.5], [7.0, 1137.6174055829224]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[7.543137254901966, 1130.5068627450955]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[8.0, 3990.8383084577094], [2.0, 3731.0], [9.0, 4148.647058823529], [10.0, 4154.499999999999], [11.0, 5534.714285714286], [12.0, 4410.0], [3.0, 3828.0], [13.0, 5758.199999999999], [14.0, 4543.333333333333], [4.0, 3928.0], [5.0, 3982.0], [6.0, 3750.75], [7.0, 3759.3544061302673]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}, {"data": [[7.661764705882353, 3920.367647058825]], "isOverall": false, "label": "Navigate to Idea page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 14.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 50.68333333333333, "minX": 1.49936328E12, "maxY": 579048.2333333333, "series": [{"data": [[1.49936388E12, 540314.5], [1.49936358E12, 555636.3833333333], [1.49936352E12, 561980.5833333334], [1.49936418E12, 554465.65], [1.49936364E12, 547968.5166666667], [1.4993643E12, 395121.11666666664], [1.49936334E12, 562898.35], [1.49936424E12, 540467.0], [1.49936328E12, 32960.01666666667], [1.49936394E12, 548040.4333333333], [1.4993634E12, 577548.05], [1.49936406E12, 546672.9166666666], [1.499364E12, 555849.3], [1.4993637E12, 562363.0833333334], [1.49936412E12, 540555.2833333333], [1.49936382E12, 538946.0666666667], [1.49936376E12, 579048.2333333333], [1.49936346E12, 547579.7666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.49936388E12, 1342.25], [1.49936358E12, 1387.75], [1.49936352E12, 1410.5], [1.49936418E12, 1370.25], [1.49936364E12, 1365.0], [1.4993643E12, 1036.35], [1.49936334E12, 1391.8666666666666], [1.49936424E12, 1342.25], [1.49936328E12, 50.68333333333333], [1.49936394E12, 1365.0], [1.4993634E12, 1472.9], [1.49936406E12, 1365.0], [1.499364E12, 1370.25], [1.4993637E12, 1410.5], [1.49936412E12, 1359.75], [1.49936382E12, 1359.75], [1.49936376E12, 1438.5], [1.49936346E12, 1365.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.4993643E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 878.5, "minX": 1.49936328E12, "maxY": 6795.681818181814, "series": [{"data": [[1.49936388E12, 933.2881355932205], [1.49936358E12, 921.9508196721313], [1.49936352E12, 912.7258064516128], [1.49936418E12, 1007.5166666666668], [1.49936364E12, 913.7666666666668], [1.4993643E12, 1128.7173913043478], [1.49936334E12, 917.6885245901639], [1.49936424E12, 1031.627118644068], [1.49936328E12, 878.5], [1.49936394E12, 974.5166666666667], [1.4993634E12, 1199.4], [1.49936406E12, 980.7833333333333], [1.499364E12, 1024.0666666666668], [1.4993637E12, 1012.0000000000002], [1.49936412E12, 1000.5499999999998], [1.49936382E12, 951.7166666666668], [1.49936376E12, 941.6984126984128], [1.49936346E12, 928.1]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[1.49936388E12, 5891.932203389831], [1.49936358E12, 5685.933333333332], [1.49936352E12, 5841.285714285714], [1.49936418E12, 6154.360655737705], [1.49936364E12, 5763.84745762712], [1.4993643E12, 6676.022222222223], [1.49936334E12, 5619.499999999999], [1.49936424E12, 6264.53448275862], [1.49936328E12, 5201.75], [1.49936394E12, 6126.516666666667], [1.4993634E12, 6795.681818181814], [1.49936406E12, 5990.45], [1.499364E12, 6246.409836065575], [1.4993637E12, 6176.365079365082], [1.49936412E12, 6066.033898305086], [1.49936382E12, 5840.57627118644], [1.49936376E12, 5897.359375], [1.49936346E12, 5722.305084745762]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.49936388E12, 1164.6666666666667], [1.49936358E12, 1079.0327868852464], [1.49936352E12, 1105.2786885245905], [1.49936418E12, 1150.8999999999999], [1.49936364E12, 1071.377049180327], [1.4993643E12, 1329.7435897435898], [1.49936334E12, 1075.8225806451612], [1.49936424E12, 1204.9166666666667], [1.49936328E12, 982.4285714285714], [1.49936394E12, 1197.8166666666666], [1.4993634E12, 1121.9218750000002], [1.49936406E12, 1106.1355932203392], [1.499364E12, 1163.7377049180327], [1.4993637E12, 1118.3225806451617], [1.49936412E12, 1098.1666666666667], [1.49936382E12, 1089.0169491525423], [1.49936376E12, 1122.5238095238096], [1.49936346E12, 1110.3934426229512]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.49936388E12, 3805.220338983051], [1.49936358E12, 3677.8688524590166], [1.49936352E12, 3817.564516129033], [1.49936418E12, 3999.9180327868853], [1.49936364E12, 3789.3666666666677], [1.4993643E12, 4245.227272727273], [1.49936334E12, 3629.580645161291], [1.49936424E12, 4024.8135593220336], [1.49936328E12, 3346.6666666666665], [1.49936394E12, 3935.5], [1.4993634E12, 4507.953124999999], [1.49936406E12, 3899.0666666666666], [1.499364E12, 4067.213114754098], [1.4993637E12, 4036.3225806451624], [1.49936412E12, 3968.8474576271187], [1.49936382E12, 3809.474576271185], [1.49936376E12, 3837.921875], [1.49936346E12, 3684.333333333333]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.4993643E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 238.45161290322585, "minX": 1.49936328E12, "maxY": 4793.772727272725, "series": [{"data": [[1.49936388E12, 930.3220338983052], [1.49936358E12, 919.8360655737703], [1.49936352E12, 909.016129032258], [1.49936418E12, 1004.0666666666665], [1.49936364E12, 911.1666666666665], [1.4993643E12, 1125.6521739130437], [1.49936334E12, 914.4426229508196], [1.49936424E12, 1028.2203389830504], [1.49936328E12, 875.0], [1.49936394E12, 971.1166666666667], [1.4993634E12, 1196.2153846153851], [1.49936406E12, 977.5], [1.499364E12, 1017.5666666666662], [1.4993637E12, 1008.467741935484], [1.49936412E12, 992.7500000000002], [1.49936382E12, 948.2166666666667], [1.49936376E12, 939.1269841269841], [1.49936346E12, 925.9333333333333]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[1.49936388E12, 3903.6271186440686], [1.49936358E12, 3780.0333333333338], [1.49936352E12, 3783.857142857142], [1.49936418E12, 4117.065573770492], [1.49936364E12, 3809.9491525423737], [1.4993643E12, 4543.0444444444465], [1.49936334E12, 3714.116666666667], [1.49936424E12, 4234.637931034484], [1.49936328E12, 3475.5], [1.49936394E12, 3995.5333333333324], [1.4993634E12, 4793.772727272725], [1.49936406E12, 4039.0166666666664], [1.499364E12, 4223.88524590164], [1.4993637E12, 4204.523809523811], [1.49936412E12, 4104.593220338984], [1.49936382E12, 3919.9322033898297], [1.49936376E12, 3915.3437500000005], [1.49936346E12, 3767.491525423729]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.49936388E12, 252.41666666666669], [1.49936358E12, 247.44262295081973], [1.49936352E12, 253.31147540983608], [1.49936418E12, 248.53333333333336], [1.49936364E12, 244.70491803278696], [1.4993643E12, 262.46153846153845], [1.49936334E12, 238.45161290322585], [1.49936424E12, 270.8166666666667], [1.49936328E12, 267.85714285714283], [1.49936394E12, 252.00000000000003], [1.4993634E12, 266.9375], [1.49936406E12, 243.13559322033896], [1.499364E12, 267.24590163934425], [1.4993637E12, 261.59677419354836], [1.49936412E12, 249.41666666666666], [1.49936382E12, 247.15254237288136], [1.49936376E12, 247.0634920634921], [1.49936346E12, 245.32786885245898]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.49936388E12, 2722.0508474576277], [1.49936358E12, 2610.0163934426228], [1.49936352E12, 2621.7419354838707], [1.49936418E12, 2867.6557377049185], [1.49936364E12, 2656.0999999999995], [1.4993643E12, 3169.386363636364], [1.49936334E12, 2556.3870967741937], [1.49936424E12, 2924.491525423729], [1.49936328E12, 2306.0], [1.49936394E12, 2760.4333333333343], [1.4993634E12, 3362.0312500000005], [1.49936406E12, 2815.5166666666664], [1.499364E12, 2950.655737704918], [1.4993637E12, 2937.2903225806454], [1.49936412E12, 2862.779661016949], [1.49936382E12, 2725.542372881356], [1.49936376E12, 2730.03125], [1.49936346E12, 2595.2]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.4993643E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.49936328E12, "maxY": 333.0, "series": [{"data": [[1.49936388E12, 148.9491525423729], [1.49936358E12, 150.01639344262293], [1.49936352E12, 154.27419354838716], [1.49936418E12, 149.68333333333328], [1.49936364E12, 146.50000000000003], [1.4993643E12, 149.7173913043478], [1.49936334E12, 151.47540983606555], [1.49936424E12, 148.4406779661017], [1.49936328E12, 152.0], [1.49936394E12, 149.51666666666668], [1.4993634E12, 152.12307692307698], [1.49936406E12, 152.56666666666666], [1.499364E12, 153.93333333333328], [1.4993637E12, 150.70967741935488], [1.49936412E12, 148.6666666666667], [1.49936382E12, 152.33333333333326], [1.49936376E12, 149.33333333333326], [1.49936346E12, 150.35000000000005]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[1.49936388E12, 296.16949152542384], [1.49936358E12, 295.1333333333334], [1.49936352E12, 312.30158730158723], [1.49936418E12, 301.0], [1.49936364E12, 298.01694915254245], [1.4993643E12, 304.62222222222226], [1.49936334E12, 298.3833333333334], [1.49936424E12, 301.08620689655174], [1.49936328E12, 333.0], [1.49936394E12, 298.20000000000005], [1.4993634E12, 301.8939393939394], [1.49936406E12, 303.6666666666667], [1.499364E12, 302.2459016393443], [1.4993637E12, 303.3809523809524], [1.49936412E12, 295.88135593220335], [1.49936382E12, 301.67796610169506], [1.49936376E12, 298.23437500000006], [1.49936346E12, 299.10169491525426]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.49936388E12, 0.0], [1.49936358E12, 0.0], [1.49936352E12, 0.0], [1.49936418E12, 0.0], [1.49936364E12, 0.0], [1.4993643E12, 0.0], [1.49936334E12, 0.0], [1.49936424E12, 0.0], [1.49936328E12, 0.0], [1.49936394E12, 0.0], [1.4993634E12, 0.0], [1.49936406E12, 0.0], [1.499364E12, 0.0], [1.4993637E12, 0.0], [1.49936412E12, 0.0], [1.49936382E12, 0.0], [1.49936376E12, 0.0], [1.49936346E12, 0.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.49936388E12, 147.22033898305085], [1.49936358E12, 145.24590163934425], [1.49936352E12, 158.03225806451613], [1.49936418E12, 151.16393442622956], [1.49936364E12, 151.4333333333333], [1.4993643E12, 155.29545454545462], [1.49936334E12, 147.98387096774192], [1.49936424E12, 152.42372881355936], [1.49936328E12, 171.0], [1.49936394E12, 148.61666666666662], [1.4993634E12, 150.12500000000006], [1.49936406E12, 150.60000000000008], [1.499364E12, 148.50819672131146], [1.4993637E12, 152.72580645161287], [1.49936412E12, 147.728813559322], [1.49936382E12, 149.33898305084745], [1.49936376E12, 148.99999999999994], [1.49936346E12, 148.68333333333334]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.4993643E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 347.0, "minX": 1.49936328E12, "maxY": 10122.0, "series": [{"data": [[1.49936388E12, 4526.0], [1.49936358E12, 3931.0], [1.49936352E12, 4308.0], [1.49936418E12, 5250.0], [1.49936364E12, 5325.0], [1.4993643E12, 4778.0], [1.49936334E12, 3867.0], [1.49936424E12, 5122.0], [1.49936328E12, 3418.0], [1.49936394E12, 5671.0], [1.4993634E12, 10122.0], [1.49936406E12, 4128.0], [1.499364E12, 5497.0], [1.4993637E12, 6220.0], [1.49936412E12, 5768.0], [1.49936382E12, 4208.0], [1.49936376E12, 4666.0], [1.49936346E12, 4396.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.49936388E12, 675.0], [1.49936358E12, 364.0], [1.49936352E12, 347.0], [1.49936418E12, 365.0], [1.49936364E12, 545.0], [1.4993643E12, 632.0], [1.49936334E12, 362.0], [1.49936424E12, 829.0], [1.49936328E12, 762.0], [1.49936394E12, 775.0], [1.4993634E12, 459.0], [1.49936406E12, 660.0], [1.499364E12, 520.0], [1.4993637E12, 374.0], [1.49936412E12, 713.0], [1.49936382E12, 730.0], [1.49936376E12, 358.0], [1.49936346E12, 375.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.49936388E12, 3843.0], [1.49936358E12, 3771.4000000000005], [1.49936352E12, 3796.4], [1.49936418E12, 3911.0], [1.49936364E12, 3783.2], [1.4993643E12, 3952.0], [1.49936334E12, 3655.4], [1.49936424E12, 3933.0], [1.49936328E12, 3388.3], [1.49936394E12, 3854.0], [1.4993634E12, 3832.4000000000005], [1.49936406E12, 3884.8], [1.499364E12, 3874.7], [1.4993637E12, 3825.0], [1.49936412E12, 3903.0], [1.49936382E12, 3848.2000000000003], [1.49936376E12, 3845.4], [1.49936346E12, 3766.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.49936388E12, 4957.4000000000015], [1.49936358E12, 5227.880000000005], [1.49936352E12, 6386.999999999991], [1.49936418E12, 4831.440000000004], [1.49936364E12, 5111.800000000005], [1.4993643E12, 4773.059999999999], [1.49936334E12, 3814.1999999999994], [1.49936424E12, 4777.739999999998], [1.49936328E12, 3418.0], [1.49936394E12, 4934.119999999997], [1.4993634E12, 7993.439999999977], [1.49936406E12, 4871.240000000012], [1.499364E12, 4939.100000000005], [1.4993637E12, 5267.36], [1.49936412E12, 4816.239999999983], [1.49936382E12, 5016.76], [1.49936376E12, 5067.6], [1.49936346E12, 7321.180000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.49936388E12, 3967.0], [1.49936358E12, 3958.3999999999996], [1.49936352E12, 4026.7], [1.49936418E12, 4041.45], [1.49936364E12, 3936.7999999999997], [1.4993643E12, 4096.0], [1.49936334E12, 3704.4], [1.49936424E12, 4054.5499999999997], [1.49936328E12, 3418.0], [1.49936394E12, 3983.3999999999996], [1.4993634E12, 4577.999999999991], [1.49936406E12, 4027.0], [1.499364E12, 4028.7499999999995], [1.4993637E12, 4011.9], [1.49936412E12, 4027.0], [1.49936382E12, 3986.2], [1.49936376E12, 4005.0], [1.49936346E12, 4034.55]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.4993643E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 899.0, "minX": 0.0, "maxY": 1161.0, "series": [{"data": [[0.0, 1042.5], [2.0, 1161.0], [3.0, 1142.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 899.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 3.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 395.5, "minX": 0.0, "maxY": 999.0, "series": [{"data": [[0.0, 395.5], [2.0, 999.0], [3.0, 963.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 899.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 3.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.3, "minX": 1.49936328E12, "maxY": 3.216666666666667, "series": [{"data": [[1.49936388E12, 2.966666666666667], [1.49936358E12, 3.0166666666666666], [1.49936352E12, 3.1], [1.49936418E12, 3.0166666666666666], [1.49936364E12, 3.033333333333333], [1.4993643E12, 2.033333333333333], [1.49936334E12, 3.066666666666667], [1.49936424E12, 2.9833333333333334], [1.49936328E12, 0.3], [1.49936394E12, 2.9833333333333334], [1.4993634E12, 3.216666666666667], [1.49936406E12, 2.966666666666667], [1.499364E12, 3.05], [1.4993637E12, 3.1166666666666667], [1.49936412E12, 2.9833333333333334], [1.49936382E12, 3.0], [1.49936376E12, 3.1333333333333333], [1.49936346E12, 3.033333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.4993643E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.49936328E12, "maxY": 3.1333333333333333, "series": [{"data": [[1.49936388E12, 2.966666666666667], [1.49936358E12, 3.033333333333333], [1.49936352E12, 3.05], [1.49936418E12, 3.0], [1.49936364E12, 3.0], [1.4993643E12, 2.15], [1.49936334E12, 3.05], [1.49936424E12, 2.966666666666667], [1.49936328E12, 0.2], [1.49936394E12, 3.0], [1.4993634E12, 3.1333333333333333], [1.49936406E12, 2.9833333333333334], [1.499364E12, 3.0166666666666666], [1.4993637E12, 3.05], [1.49936412E12, 2.9833333333333334], [1.49936382E12, 2.966666666666667], [1.49936376E12, 3.0833333333333335], [1.49936346E12, 2.9833333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.4993634E12, 0.08333333333333333], [1.49936358E12, 0.016666666666666666], [1.49936352E12, 0.03333333333333333], [1.499364E12, 0.016666666666666666], [1.49936418E12, 0.016666666666666666], [1.4993637E12, 0.05], [1.49936364E12, 0.016666666666666666], [1.49936334E12, 0.03333333333333333], [1.49936376E12, 0.08333333333333333], [1.49936346E12, 0.03333333333333333]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.4993643E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.49936328E12, "maxY": 1.0666666666666667, "series": [{"data": [[1.49936388E12, 0.9833333333333333], [1.49936358E12, 0.9833333333333333], [1.49936352E12, 1.0166666666666666], [1.49936418E12, 1.0], [1.49936364E12, 0.9666666666666667], [1.4993643E12, 0.75], [1.49936334E12, 0.9666666666666667], [1.49936424E12, 0.9666666666666667], [1.49936328E12, 0.06666666666666667], [1.49936394E12, 1.0], [1.4993634E12, 1.0166666666666666], [1.49936406E12, 1.0], [1.499364E12, 1.0], [1.4993637E12, 1.0], [1.49936412E12, 0.9833333333333333], [1.49936382E12, 0.9833333333333333], [1.49936376E12, 0.9833333333333333], [1.49936346E12, 0.95]], "isOverall": false, "label": "Transaction Controller-success", "isController": true}, {"data": [[1.49936388E12, 0.9833333333333333], [1.49936358E12, 1.0166666666666666], [1.49936352E12, 1.0333333333333334], [1.49936418E12, 1.0166666666666666], [1.49936364E12, 1.0], [1.4993643E12, 0.7333333333333333], [1.49936334E12, 1.0333333333333334], [1.49936424E12, 0.9833333333333333], [1.49936328E12, 0.05], [1.49936394E12, 1.0], [1.4993634E12, 1.0666666666666667], [1.49936406E12, 1.0], [1.499364E12, 1.0166666666666666], [1.4993637E12, 1.0333333333333334], [1.49936412E12, 0.9833333333333333], [1.49936382E12, 0.9833333333333333], [1.49936376E12, 1.0666666666666667], [1.49936346E12, 1.0]], "isOverall": false, "label": "Navigate to Idea page-success", "isController": false}, {"data": [[1.4993634E12, 0.08333333333333333], [1.49936358E12, 0.016666666666666666], [1.49936352E12, 0.03333333333333333], [1.499364E12, 0.016666666666666666], [1.49936418E12, 0.016666666666666666], [1.4993637E12, 0.05], [1.49936364E12, 0.016666666666666666], [1.49936334E12, 0.03333333333333333], [1.49936376E12, 0.08333333333333333], [1.49936346E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction Controller-failure", "isController": true}, {"data": [[1.4993634E12, 0.08333333333333333], [1.49936358E12, 0.016666666666666666], [1.49936352E12, 0.03333333333333333], [1.499364E12, 0.016666666666666666], [1.49936418E12, 0.016666666666666666], [1.4993637E12, 0.05], [1.49936364E12, 0.016666666666666666], [1.49936334E12, 0.03333333333333333], [1.49936376E12, 0.08333333333333333], [1.49936346E12, 0.03333333333333333]], "isOverall": false, "label": "Submit Idea-failure", "isController": false}, {"data": [[1.49936388E12, 1.0], [1.49936358E12, 1.0166666666666666], [1.49936352E12, 1.0166666666666666], [1.49936418E12, 1.0], [1.49936364E12, 1.0166666666666666], [1.4993643E12, 0.65], [1.49936334E12, 1.0333333333333334], [1.49936424E12, 1.0], [1.49936328E12, 0.11666666666666667], [1.49936394E12, 1.0], [1.4993634E12, 1.0666666666666667], [1.49936406E12, 0.9833333333333333], [1.499364E12, 1.0166666666666666], [1.4993637E12, 1.0333333333333334], [1.49936412E12, 1.0], [1.49936382E12, 0.9833333333333333], [1.49936376E12, 1.05], [1.49936346E12, 1.0166666666666666]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.49936388E12, 0.9833333333333333], [1.49936358E12, 1.0], [1.49936352E12, 1.0], [1.49936418E12, 0.9833333333333333], [1.49936364E12, 0.9833333333333333], [1.4993643E12, 0.7666666666666667], [1.49936334E12, 0.9833333333333333], [1.49936424E12, 0.9833333333333333], [1.49936328E12, 0.03333333333333333], [1.49936394E12, 1.0], [1.4993634E12, 1.0], [1.49936406E12, 1.0], [1.499364E12, 0.9833333333333333], [1.4993637E12, 0.9833333333333333], [1.49936412E12, 1.0], [1.49936382E12, 1.0], [1.49936376E12, 0.9666666666666667], [1.49936346E12, 0.9666666666666667]], "isOverall": false, "label": "Submit Idea-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.4993643E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
