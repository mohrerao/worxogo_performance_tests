/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 19800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? 19800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 58.0, "minX": 0.0, "maxY": 6132.0, "series": [{"data": [[0.0, 182.0], [0.1, 182.0], [0.2, 184.0], [0.3, 184.0], [0.4, 187.0], [0.5, 187.0], [0.6, 187.0], [0.7, 189.0], [0.8, 190.0], [0.9, 190.0], [1.0, 190.0], [1.1, 190.0], [1.2, 190.0], [1.3, 191.0], [1.4, 191.0], [1.5, 191.0], [1.6, 192.0], [1.7, 192.0], [1.8, 192.0], [1.9, 192.0], [2.0, 192.0], [2.1, 192.0], [2.2, 192.0], [2.3, 192.0], [2.4, 192.0], [2.5, 192.0], [2.6, 194.0], [2.7, 194.0], [2.8, 194.0], [2.9, 195.0], [3.0, 195.0], [3.1, 195.0], [3.2, 195.0], [3.3, 195.0], [3.4, 195.0], [3.5, 196.0], [3.6, 196.0], [3.7, 196.0], [3.8, 196.0], [3.9, 197.0], [4.0, 197.0], [4.1, 197.0], [4.2, 197.0], [4.3, 197.0], [4.4, 197.0], [4.5, 197.0], [4.6, 197.0], [4.7, 197.0], [4.8, 197.0], [4.9, 197.0], [5.0, 198.0], [5.1, 198.0], [5.2, 198.0], [5.3, 198.0], [5.4, 198.0], [5.5, 198.0], [5.6, 199.0], [5.7, 199.0], [5.8, 200.0], [5.9, 200.0], [6.0, 200.0], [6.1, 200.0], [6.2, 200.0], [6.3, 200.0], [6.4, 200.0], [6.5, 200.0], [6.6, 200.0], [6.7, 200.0], [6.8, 201.0], [6.9, 201.0], [7.0, 201.0], [7.1, 201.0], [7.2, 201.0], [7.3, 201.0], [7.4, 201.0], [7.5, 201.0], [7.6, 201.0], [7.7, 201.0], [7.8, 202.0], [7.9, 202.0], [8.0, 202.0], [8.1, 202.0], [8.2, 202.0], [8.3, 202.0], [8.4, 202.0], [8.5, 202.0], [8.6, 202.0], [8.7, 202.0], [8.8, 203.0], [8.9, 203.0], [9.0, 203.0], [9.1, 203.0], [9.2, 203.0], [9.3, 203.0], [9.4, 203.0], [9.5, 203.0], [9.6, 203.0], [9.7, 203.0], [9.8, 203.0], [9.9, 203.0], [10.0, 203.0], [10.1, 203.0], [10.2, 203.0], [10.3, 204.0], [10.4, 204.0], [10.5, 204.0], [10.6, 204.0], [10.7, 204.0], [10.8, 204.0], [10.9, 204.0], [11.0, 204.0], [11.1, 205.0], [11.2, 205.0], [11.3, 205.0], [11.4, 205.0], [11.5, 205.0], [11.6, 205.0], [11.7, 205.0], [11.8, 205.0], [11.9, 205.0], [12.0, 205.0], [12.1, 205.0], [12.2, 205.0], [12.3, 205.0], [12.4, 205.0], [12.5, 205.0], [12.6, 205.0], [12.7, 205.0], [12.8, 205.0], [12.9, 205.0], [13.0, 205.0], [13.1, 206.0], [13.2, 206.0], [13.3, 206.0], [13.4, 206.0], [13.5, 206.0], [13.6, 206.0], [13.7, 206.0], [13.8, 206.0], [13.9, 206.0], [14.0, 206.0], [14.1, 206.0], [14.2, 206.0], [14.3, 206.0], [14.4, 206.0], [14.5, 206.0], [14.6, 206.0], [14.7, 206.0], [14.8, 206.0], [14.9, 206.0], [15.0, 206.0], [15.1, 206.0], [15.2, 206.0], [15.3, 206.0], [15.4, 206.0], [15.5, 206.0], [15.6, 206.0], [15.7, 207.0], [15.8, 207.0], [15.9, 207.0], [16.0, 207.0], [16.1, 207.0], [16.2, 207.0], [16.3, 207.0], [16.4, 207.0], [16.5, 207.0], [16.6, 207.0], [16.7, 207.0], [16.8, 207.0], [16.9, 207.0], [17.0, 207.0], [17.1, 207.0], [17.2, 207.0], [17.3, 207.0], [17.4, 207.0], [17.5, 207.0], [17.6, 207.0], [17.7, 207.0], [17.8, 207.0], [17.9, 207.0], [18.0, 207.0], [18.1, 207.0], [18.2, 207.0], [18.3, 208.0], [18.4, 208.0], [18.5, 208.0], [18.6, 208.0], [18.7, 208.0], [18.8, 208.0], [18.9, 208.0], [19.0, 208.0], [19.1, 208.0], [19.2, 208.0], [19.3, 208.0], [19.4, 208.0], [19.5, 208.0], [19.6, 208.0], [19.7, 208.0], [19.8, 208.0], [19.9, 208.0], [20.0, 208.0], [20.1, 209.0], [20.2, 209.0], [20.3, 209.0], [20.4, 209.0], [20.5, 209.0], [20.6, 209.0], [20.7, 209.0], [20.8, 209.0], [20.9, 209.0], [21.0, 209.0], [21.1, 209.0], [21.2, 209.0], [21.3, 209.0], [21.4, 209.0], [21.5, 209.0], [21.6, 209.0], [21.7, 209.0], [21.8, 209.0], [21.9, 209.0], [22.0, 209.0], [22.1, 210.0], [22.2, 210.0], [22.3, 210.0], [22.4, 210.0], [22.5, 210.0], [22.6, 210.0], [22.7, 210.0], [22.8, 210.0], [22.9, 210.0], [23.0, 210.0], [23.1, 210.0], [23.2, 210.0], [23.3, 210.0], [23.4, 210.0], [23.5, 210.0], [23.6, 210.0], [23.7, 211.0], [23.8, 211.0], [23.9, 211.0], [24.0, 211.0], [24.1, 211.0], [24.2, 211.0], [24.3, 211.0], [24.4, 211.0], [24.5, 211.0], [24.6, 211.0], [24.7, 211.0], [24.8, 211.0], [24.9, 211.0], [25.0, 211.0], [25.1, 211.0], [25.2, 211.0], [25.3, 211.0], [25.4, 211.0], [25.5, 211.0], [25.6, 211.0], [25.7, 211.0], [25.8, 211.0], [25.9, 212.0], [26.0, 212.0], [26.1, 212.0], [26.2, 212.0], [26.3, 212.0], [26.4, 212.0], [26.5, 212.0], [26.6, 212.0], [26.7, 212.0], [26.8, 212.0], [26.9, 212.0], [27.0, 212.0], [27.1, 212.0], [27.2, 212.0], [27.3, 212.0], [27.4, 212.0], [27.5, 212.0], [27.6, 212.0], [27.7, 212.0], [27.8, 212.0], [27.9, 212.0], [28.0, 212.0], [28.1, 212.0], [28.2, 212.0], [28.3, 212.0], [28.4, 212.0], [28.5, 213.0], [28.6, 213.0], [28.7, 213.0], [28.8, 213.0], [28.9, 213.0], [29.0, 213.0], [29.1, 213.0], [29.2, 213.0], [29.3, 213.0], [29.4, 213.0], [29.5, 213.0], [29.6, 213.0], [29.7, 213.0], [29.8, 213.0], [29.9, 213.0], [30.0, 213.0], [30.1, 214.0], [30.2, 214.0], [30.3, 214.0], [30.4, 214.0], [30.5, 214.0], [30.6, 214.0], [30.7, 214.0], [30.8, 214.0], [30.9, 215.0], [31.0, 215.0], [31.1, 215.0], [31.2, 215.0], [31.3, 215.0], [31.4, 215.0], [31.5, 215.0], [31.6, 215.0], [31.7, 215.0], [31.8, 215.0], [31.9, 215.0], [32.0, 215.0], [32.1, 215.0], [32.2, 215.0], [32.3, 215.0], [32.4, 215.0], [32.5, 215.0], [32.6, 215.0], [32.7, 215.0], [32.8, 215.0], [32.9, 215.0], [33.0, 215.0], [33.1, 215.0], [33.2, 215.0], [33.3, 215.0], [33.4, 215.0], [33.5, 216.0], [33.6, 216.0], [33.7, 216.0], [33.8, 216.0], [33.9, 216.0], [34.0, 216.0], [34.1, 216.0], [34.2, 217.0], [34.3, 217.0], [34.4, 217.0], [34.5, 217.0], [34.6, 217.0], [34.7, 217.0], [34.8, 217.0], [34.9, 217.0], [35.0, 217.0], [35.1, 217.0], [35.2, 217.0], [35.3, 217.0], [35.4, 217.0], [35.5, 217.0], [35.6, 217.0], [35.7, 217.0], [35.8, 217.0], [35.9, 217.0], [36.0, 218.0], [36.1, 218.0], [36.2, 218.0], [36.3, 218.0], [36.4, 218.0], [36.5, 218.0], [36.6, 218.0], [36.7, 218.0], [36.8, 218.0], [36.9, 218.0], [37.0, 218.0], [37.1, 218.0], [37.2, 218.0], [37.3, 218.0], [37.4, 218.0], [37.5, 218.0], [37.6, 218.0], [37.7, 218.0], [37.8, 219.0], [37.9, 219.0], [38.0, 219.0], [38.1, 219.0], [38.2, 219.0], [38.3, 219.0], [38.4, 219.0], [38.5, 219.0], [38.6, 219.0], [38.7, 219.0], [38.8, 219.0], [38.9, 219.0], [39.0, 220.0], [39.1, 220.0], [39.2, 220.0], [39.3, 220.0], [39.4, 220.0], [39.5, 220.0], [39.6, 220.0], [39.7, 220.0], [39.8, 220.0], [39.9, 220.0], [40.0, 220.0], [40.1, 220.0], [40.2, 221.0], [40.3, 221.0], [40.4, 221.0], [40.5, 221.0], [40.6, 221.0], [40.7, 221.0], [40.8, 221.0], [40.9, 221.0], [41.0, 221.0], [41.1, 221.0], [41.2, 221.0], [41.3, 221.0], [41.4, 221.0], [41.5, 221.0], [41.6, 222.0], [41.7, 222.0], [41.8, 222.0], [41.9, 222.0], [42.0, 222.0], [42.1, 222.0], [42.2, 222.0], [42.3, 222.0], [42.4, 222.0], [42.5, 222.0], [42.6, 222.0], [42.7, 222.0], [42.8, 222.0], [42.9, 222.0], [43.0, 223.0], [43.1, 223.0], [43.2, 223.0], [43.3, 223.0], [43.4, 223.0], [43.5, 223.0], [43.6, 223.0], [43.7, 223.0], [43.8, 223.0], [43.9, 223.0], [44.0, 224.0], [44.1, 224.0], [44.2, 224.0], [44.3, 224.0], [44.4, 224.0], [44.5, 224.0], [44.6, 224.0], [44.7, 224.0], [44.8, 224.0], [44.9, 224.0], [45.0, 224.0], [45.1, 224.0], [45.2, 224.0], [45.3, 224.0], [45.4, 224.0], [45.5, 224.0], [45.6, 224.0], [45.7, 224.0], [45.8, 225.0], [45.9, 225.0], [46.0, 225.0], [46.1, 225.0], [46.2, 225.0], [46.3, 225.0], [46.4, 225.0], [46.5, 225.0], [46.6, 225.0], [46.7, 225.0], [46.8, 225.0], [46.9, 225.0], [47.0, 226.0], [47.1, 226.0], [47.2, 226.0], [47.3, 226.0], [47.4, 226.0], [47.5, 226.0], [47.6, 226.0], [47.7, 226.0], [47.8, 226.0], [47.9, 226.0], [48.0, 226.0], [48.1, 226.0], [48.2, 226.0], [48.3, 226.0], [48.4, 226.0], [48.5, 226.0], [48.6, 226.0], [48.7, 226.0], [48.8, 227.0], [48.9, 227.0], [49.0, 227.0], [49.1, 227.0], [49.2, 227.0], [49.3, 227.0], [49.4, 227.0], [49.5, 227.0], [49.6, 227.0], [49.7, 227.0], [49.8, 227.0], [49.9, 227.0], [50.0, 227.0], [50.1, 227.0], [50.2, 227.0], [50.3, 227.0], [50.4, 227.0], [50.5, 227.0], [50.6, 228.0], [50.7, 228.0], [50.8, 228.0], [50.9, 228.0], [51.0, 228.0], [51.1, 228.0], [51.2, 228.0], [51.3, 228.0], [51.4, 228.0], [51.5, 228.0], [51.6, 228.0], [51.7, 228.0], [51.8, 228.0], [51.9, 228.0], [52.0, 228.0], [52.1, 228.0], [52.2, 229.0], [52.3, 229.0], [52.4, 229.0], [52.5, 229.0], [52.6, 229.0], [52.7, 229.0], [52.8, 229.0], [52.9, 229.0], [53.0, 230.0], [53.1, 230.0], [53.2, 230.0], [53.3, 230.0], [53.4, 230.0], [53.5, 230.0], [53.6, 230.0], [53.7, 230.0], [53.8, 230.0], [53.9, 230.0], [54.0, 230.0], [54.1, 230.0], [54.2, 231.0], [54.3, 231.0], [54.4, 231.0], [54.5, 231.0], [54.6, 231.0], [54.7, 231.0], [54.8, 232.0], [54.9, 232.0], [55.0, 232.0], [55.1, 232.0], [55.2, 232.0], [55.3, 232.0], [55.4, 232.0], [55.5, 232.0], [55.6, 233.0], [55.7, 233.0], [55.8, 233.0], [55.9, 233.0], [56.0, 233.0], [56.1, 233.0], [56.2, 233.0], [56.3, 233.0], [56.4, 233.0], [56.5, 233.0], [56.6, 234.0], [56.7, 234.0], [56.8, 235.0], [56.9, 235.0], [57.0, 235.0], [57.1, 235.0], [57.2, 235.0], [57.3, 235.0], [57.4, 235.0], [57.5, 235.0], [57.6, 235.0], [57.7, 235.0], [57.8, 235.0], [57.9, 235.0], [58.0, 235.0], [58.1, 235.0], [58.2, 235.0], [58.3, 235.0], [58.4, 235.0], [58.5, 235.0], [58.6, 235.0], [58.7, 235.0], [58.8, 235.0], [58.9, 235.0], [59.0, 235.0], [59.1, 235.0], [59.2, 236.0], [59.3, 236.0], [59.4, 236.0], [59.5, 236.0], [59.6, 236.0], [59.7, 236.0], [59.8, 236.0], [59.9, 236.0], [60.0, 236.0], [60.1, 236.0], [60.2, 236.0], [60.3, 236.0], [60.4, 236.0], [60.5, 236.0], [60.6, 236.0], [60.7, 236.0], [60.8, 236.0], [60.9, 236.0], [61.0, 237.0], [61.1, 237.0], [61.2, 237.0], [61.3, 237.0], [61.4, 238.0], [61.5, 238.0], [61.6, 238.0], [61.7, 238.0], [61.8, 238.0], [61.9, 238.0], [62.0, 238.0], [62.1, 238.0], [62.2, 238.0], [62.3, 238.0], [62.4, 238.0], [62.5, 238.0], [62.6, 239.0], [62.7, 239.0], [62.8, 239.0], [62.9, 239.0], [63.0, 240.0], [63.1, 240.0], [63.2, 240.0], [63.3, 240.0], [63.4, 240.0], [63.5, 240.0], [63.6, 240.0], [63.7, 240.0], [63.8, 240.0], [63.9, 240.0], [64.0, 241.0], [64.1, 241.0], [64.2, 241.0], [64.3, 241.0], [64.4, 241.0], [64.5, 241.0], [64.6, 241.0], [64.7, 241.0], [64.8, 242.0], [64.9, 242.0], [65.0, 242.0], [65.1, 242.0], [65.2, 242.0], [65.3, 242.0], [65.4, 242.0], [65.5, 242.0], [65.6, 242.0], [65.7, 242.0], [65.8, 243.0], [65.9, 243.0], [66.0, 243.0], [66.1, 243.0], [66.2, 243.0], [66.3, 243.0], [66.4, 243.0], [66.5, 243.0], [66.6, 244.0], [66.7, 244.0], [66.8, 244.0], [66.9, 244.0], [67.0, 244.0], [67.1, 244.0], [67.2, 244.0], [67.3, 244.0], [67.4, 244.0], [67.5, 244.0], [67.6, 244.0], [67.7, 244.0], [67.8, 245.0], [67.9, 245.0], [68.0, 245.0], [68.1, 245.0], [68.2, 245.0], [68.3, 245.0], [68.4, 245.0], [68.5, 245.0], [68.6, 245.0], [68.7, 245.0], [68.8, 246.0], [68.9, 246.0], [69.0, 246.0], [69.1, 246.0], [69.2, 246.0], [69.3, 246.0], [69.4, 246.0], [69.5, 246.0], [69.6, 247.0], [69.7, 247.0], [69.8, 247.0], [69.9, 247.0], [70.0, 247.0], [70.1, 247.0], [70.2, 247.0], [70.3, 247.0], [70.4, 247.0], [70.5, 247.0], [70.6, 247.0], [70.7, 247.0], [70.8, 248.0], [70.9, 248.0], [71.0, 248.0], [71.1, 248.0], [71.2, 248.0], [71.3, 248.0], [71.4, 249.0], [71.5, 249.0], [71.6, 249.0], [71.7, 249.0], [71.8, 249.0], [71.9, 249.0], [72.0, 249.0], [72.1, 249.0], [72.2, 250.0], [72.3, 250.0], [72.4, 250.0], [72.5, 250.0], [72.6, 250.0], [72.7, 250.0], [72.8, 250.0], [72.9, 250.0], [73.0, 250.0], [73.1, 250.0], [73.2, 251.0], [73.3, 251.0], [73.4, 251.0], [73.5, 251.0], [73.6, 251.0], [73.7, 251.0], [73.8, 251.0], [73.9, 251.0], [74.0, 251.0], [74.1, 251.0], [74.2, 252.0], [74.3, 252.0], [74.4, 252.0], [74.5, 252.0], [74.6, 252.0], [74.7, 252.0], [74.8, 252.0], [74.9, 252.0], [75.0, 252.0], [75.1, 252.0], [75.2, 253.0], [75.3, 253.0], [75.4, 253.0], [75.5, 253.0], [75.6, 253.0], [75.7, 253.0], [75.8, 253.0], [75.9, 253.0], [76.0, 254.0], [76.1, 254.0], [76.2, 254.0], [76.3, 254.0], [76.4, 254.0], [76.5, 254.0], [76.6, 254.0], [76.7, 254.0], [76.8, 255.0], [76.9, 255.0], [77.0, 255.0], [77.1, 255.0], [77.2, 256.0], [77.3, 256.0], [77.4, 256.0], [77.5, 256.0], [77.6, 256.0], [77.7, 256.0], [77.8, 256.0], [77.9, 256.0], [78.0, 256.0], [78.1, 256.0], [78.2, 257.0], [78.3, 257.0], [78.4, 257.0], [78.5, 257.0], [78.6, 257.0], [78.7, 257.0], [78.8, 257.0], [78.9, 257.0], [79.0, 258.0], [79.1, 258.0], [79.2, 258.0], [79.3, 258.0], [79.4, 259.0], [79.5, 259.0], [79.6, 259.0], [79.7, 259.0], [79.8, 259.0], [79.9, 259.0], [80.0, 259.0], [80.1, 259.0], [80.2, 260.0], [80.3, 260.0], [80.4, 260.0], [80.5, 260.0], [80.6, 260.0], [80.7, 260.0], [80.8, 260.0], [80.9, 260.0], [81.0, 261.0], [81.1, 261.0], [81.2, 261.0], [81.3, 261.0], [81.4, 261.0], [81.5, 261.0], [81.6, 261.0], [81.7, 261.0], [81.8, 262.0], [81.9, 262.0], [82.0, 262.0], [82.1, 262.0], [82.2, 262.0], [82.3, 262.0], [82.4, 263.0], [82.5, 263.0], [82.6, 263.0], [82.7, 263.0], [82.8, 263.0], [82.9, 263.0], [83.0, 265.0], [83.1, 265.0], [83.2, 266.0], [83.3, 266.0], [83.4, 266.0], [83.5, 266.0], [83.6, 266.0], [83.7, 266.0], [83.8, 267.0], [83.9, 267.0], [84.0, 268.0], [84.1, 268.0], [84.2, 268.0], [84.3, 268.0], [84.4, 268.0], [84.5, 268.0], [84.6, 268.0], [84.7, 268.0], [84.8, 268.0], [84.9, 268.0], [85.0, 269.0], [85.1, 269.0], [85.2, 269.0], [85.3, 269.0], [85.4, 270.0], [85.5, 270.0], [85.6, 270.0], [85.7, 270.0], [85.8, 271.0], [85.9, 271.0], [86.0, 272.0], [86.1, 272.0], [86.2, 273.0], [86.3, 273.0], [86.4, 273.0], [86.5, 273.0], [86.6, 273.0], [86.7, 273.0], [86.8, 274.0], [86.9, 274.0], [87.0, 275.0], [87.1, 275.0], [87.2, 275.0], [87.3, 275.0], [87.4, 275.0], [87.5, 275.0], [87.6, 276.0], [87.7, 276.0], [87.8, 277.0], [87.9, 277.0], [88.0, 278.0], [88.1, 278.0], [88.2, 278.0], [88.3, 278.0], [88.4, 278.0], [88.5, 278.0], [88.6, 278.0], [88.7, 278.0], [88.8, 279.0], [88.9, 279.0], [89.0, 280.0], [89.1, 280.0], [89.2, 280.0], [89.3, 280.0], [89.4, 282.0], [89.5, 282.0], [89.6, 282.0], [89.7, 282.0], [89.8, 282.0], [89.9, 282.0], [90.0, 282.0], [90.1, 282.0], [90.2, 284.0], [90.3, 284.0], [90.4, 285.0], [90.5, 285.0], [90.6, 286.0], [90.7, 286.0], [90.8, 289.0], [90.9, 289.0], [91.0, 290.0], [91.1, 290.0], [91.2, 291.0], [91.3, 291.0], [91.4, 293.0], [91.5, 293.0], [91.6, 293.0], [91.7, 295.0], [91.8, 295.0], [91.9, 297.0], [92.0, 297.0], [92.1, 297.0], [92.2, 297.0], [92.3, 299.0], [92.4, 299.0], [92.5, 300.0], [92.6, 300.0], [92.7, 301.0], [92.8, 301.0], [92.9, 301.0], [93.0, 301.0], [93.1, 302.0], [93.2, 302.0], [93.3, 303.0], [93.4, 303.0], [93.5, 306.0], [93.6, 306.0], [93.7, 310.0], [93.8, 310.0], [93.9, 314.0], [94.0, 314.0], [94.1, 321.0], [94.2, 321.0], [94.3, 323.0], [94.4, 323.0], [94.5, 339.0], [94.6, 339.0], [94.7, 339.0], [94.8, 339.0], [94.9, 339.0], [95.0, 339.0], [95.1, 344.0], [95.2, 344.0], [95.3, 351.0], [95.4, 351.0], [95.5, 362.0], [95.6, 362.0], [95.7, 363.0], [95.8, 363.0], [95.9, 367.0], [96.0, 367.0], [96.1, 368.0], [96.2, 368.0], [96.3, 373.0], [96.4, 373.0], [96.5, 377.0], [96.6, 377.0], [96.7, 411.0], [96.8, 411.0], [96.9, 417.0], [97.0, 417.0], [97.1, 422.0], [97.2, 422.0], [97.3, 480.0], [97.4, 480.0], [97.5, 484.0], [97.6, 484.0], [97.7, 487.0], [97.8, 487.0], [97.9, 488.0], [98.0, 488.0], [98.1, 512.0], [98.2, 512.0], [98.3, 556.0], [98.4, 556.0], [98.5, 572.0], [98.6, 572.0], [98.7, 605.0], [98.8, 605.0], [98.9, 642.0], [99.0, 642.0], [99.1, 660.0], [99.2, 660.0], [99.3, 680.0], [99.4, 680.0], [99.5, 683.0], [99.6, 683.0], [99.7, 731.0], [99.8, 731.0], [99.9, 761.0], [100.0, 761.0]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[0.0, 126.0], [0.1, 126.0], [0.2, 126.0], [0.3, 128.0], [0.4, 128.0], [0.5, 128.0], [0.6, 128.0], [0.7, 128.0], [0.8, 128.0], [0.9, 128.0], [1.0, 128.0], [1.1, 128.0], [1.2, 129.0], [1.3, 129.0], [1.4, 129.0], [1.5, 129.0], [1.6, 130.0], [1.7, 130.0], [1.8, 130.0], [1.9, 131.0], [2.0, 131.0], [2.1, 131.0], [2.2, 131.0], [2.3, 131.0], [2.4, 131.0], [2.5, 131.0], [2.6, 131.0], [2.7, 131.0], [2.8, 132.0], [2.9, 132.0], [3.0, 132.0], [3.1, 132.0], [3.2, 132.0], [3.3, 132.0], [3.4, 132.0], [3.5, 133.0], [3.6, 133.0], [3.7, 133.0], [3.8, 133.0], [3.9, 133.0], [4.0, 133.0], [4.1, 133.0], [4.2, 133.0], [4.3, 133.0], [4.4, 134.0], [4.5, 134.0], [4.6, 134.0], [4.7, 134.0], [4.8, 135.0], [4.9, 135.0], [5.0, 135.0], [5.1, 135.0], [5.2, 135.0], [5.3, 135.0], [5.4, 135.0], [5.5, 136.0], [5.6, 136.0], [5.7, 136.0], [5.8, 136.0], [5.9, 136.0], [6.0, 136.0], [6.1, 136.0], [6.2, 136.0], [6.3, 136.0], [6.4, 136.0], [6.5, 136.0], [6.6, 136.0], [6.7, 136.0], [6.8, 136.0], [6.9, 136.0], [7.0, 136.0], [7.1, 137.0], [7.2, 137.0], [7.3, 137.0], [7.4, 137.0], [7.5, 137.0], [7.6, 137.0], [7.7, 137.0], [7.8, 137.0], [7.9, 137.0], [8.0, 137.0], [8.1, 137.0], [8.2, 138.0], [8.3, 138.0], [8.4, 138.0], [8.5, 138.0], [8.6, 138.0], [8.7, 138.0], [8.8, 138.0], [8.9, 138.0], [9.0, 138.0], [9.1, 138.0], [9.2, 138.0], [9.3, 138.0], [9.4, 138.0], [9.5, 138.0], [9.6, 138.0], [9.7, 138.0], [9.8, 139.0], [9.9, 139.0], [10.0, 139.0], [10.1, 139.0], [10.2, 139.0], [10.3, 139.0], [10.4, 139.0], [10.5, 139.0], [10.6, 139.0], [10.7, 139.0], [10.8, 139.0], [10.9, 139.0], [11.0, 139.0], [11.1, 139.0], [11.2, 139.0], [11.3, 139.0], [11.4, 139.0], [11.5, 139.0], [11.6, 139.0], [11.7, 139.0], [11.8, 139.0], [11.9, 140.0], [12.0, 140.0], [12.1, 140.0], [12.2, 140.0], [12.3, 140.0], [12.4, 140.0], [12.5, 140.0], [12.6, 140.0], [12.7, 140.0], [12.8, 140.0], [12.9, 140.0], [13.0, 140.0], [13.1, 140.0], [13.2, 140.0], [13.3, 140.0], [13.4, 140.0], [13.5, 141.0], [13.6, 141.0], [13.7, 141.0], [13.8, 141.0], [13.9, 141.0], [14.0, 141.0], [14.1, 141.0], [14.2, 141.0], [14.3, 141.0], [14.4, 141.0], [14.5, 141.0], [14.6, 141.0], [14.7, 141.0], [14.8, 141.0], [14.9, 141.0], [15.0, 141.0], [15.1, 141.0], [15.2, 141.0], [15.3, 141.0], [15.4, 141.0], [15.5, 141.0], [15.6, 141.0], [15.7, 141.0], [15.8, 141.0], [15.9, 141.0], [16.0, 141.0], [16.1, 141.0], [16.2, 142.0], [16.3, 142.0], [16.4, 142.0], [16.5, 142.0], [16.6, 142.0], [16.7, 142.0], [16.8, 142.0], [16.9, 142.0], [17.0, 142.0], [17.1, 142.0], [17.2, 142.0], [17.3, 142.0], [17.4, 142.0], [17.5, 142.0], [17.6, 142.0], [17.7, 142.0], [17.8, 142.0], [17.9, 142.0], [18.0, 142.0], [18.1, 142.0], [18.2, 142.0], [18.3, 142.0], [18.4, 142.0], [18.5, 142.0], [18.6, 142.0], [18.7, 142.0], [18.8, 142.0], [18.9, 142.0], [19.0, 142.0], [19.1, 143.0], [19.2, 143.0], [19.3, 143.0], [19.4, 143.0], [19.5, 143.0], [19.6, 143.0], [19.7, 143.0], [19.8, 143.0], [19.9, 143.0], [20.0, 143.0], [20.1, 143.0], [20.2, 143.0], [20.3, 143.0], [20.4, 143.0], [20.5, 143.0], [20.6, 143.0], [20.7, 143.0], [20.8, 143.0], [20.9, 143.0], [21.0, 143.0], [21.1, 143.0], [21.2, 143.0], [21.3, 143.0], [21.4, 144.0], [21.5, 144.0], [21.6, 144.0], [21.7, 144.0], [21.8, 144.0], [21.9, 144.0], [22.0, 144.0], [22.1, 144.0], [22.2, 144.0], [22.3, 144.0], [22.4, 144.0], [22.5, 144.0], [22.6, 144.0], [22.7, 144.0], [22.8, 144.0], [22.9, 144.0], [23.0, 145.0], [23.1, 145.0], [23.2, 145.0], [23.3, 145.0], [23.4, 145.0], [23.5, 145.0], [23.6, 145.0], [23.7, 145.0], [23.8, 145.0], [23.9, 145.0], [24.0, 145.0], [24.1, 145.0], [24.2, 145.0], [24.3, 145.0], [24.4, 145.0], [24.5, 145.0], [24.6, 145.0], [24.7, 145.0], [24.8, 145.0], [24.9, 145.0], [25.0, 145.0], [25.1, 145.0], [25.2, 145.0], [25.3, 146.0], [25.4, 146.0], [25.5, 146.0], [25.6, 146.0], [25.7, 146.0], [25.8, 146.0], [25.9, 146.0], [26.0, 146.0], [26.1, 146.0], [26.2, 146.0], [26.3, 146.0], [26.4, 146.0], [26.5, 146.0], [26.6, 146.0], [26.7, 146.0], [26.8, 146.0], [26.9, 146.0], [27.0, 146.0], [27.1, 146.0], [27.2, 146.0], [27.3, 146.0], [27.4, 146.0], [27.5, 146.0], [27.6, 146.0], [27.7, 146.0], [27.8, 147.0], [27.9, 147.0], [28.0, 147.0], [28.1, 147.0], [28.2, 147.0], [28.3, 147.0], [28.4, 147.0], [28.5, 147.0], [28.6, 147.0], [28.7, 147.0], [28.8, 147.0], [28.9, 147.0], [29.0, 147.0], [29.1, 147.0], [29.2, 147.0], [29.3, 147.0], [29.4, 147.0], [29.5, 147.0], [29.6, 147.0], [29.7, 147.0], [29.8, 147.0], [29.9, 147.0], [30.0, 147.0], [30.1, 147.0], [30.2, 147.0], [30.3, 148.0], [30.4, 148.0], [30.5, 148.0], [30.6, 148.0], [30.7, 148.0], [30.8, 148.0], [30.9, 148.0], [31.0, 148.0], [31.1, 148.0], [31.2, 148.0], [31.3, 148.0], [31.4, 148.0], [31.5, 148.0], [31.6, 148.0], [31.7, 148.0], [31.8, 148.0], [31.9, 148.0], [32.0, 148.0], [32.1, 148.0], [32.2, 148.0], [32.3, 148.0], [32.4, 148.0], [32.5, 148.0], [32.6, 148.0], [32.7, 148.0], [32.8, 148.0], [32.9, 148.0], [33.0, 148.0], [33.1, 148.0], [33.2, 148.0], [33.3, 148.0], [33.4, 148.0], [33.5, 148.0], [33.6, 148.0], [33.7, 148.0], [33.8, 148.0], [33.9, 148.0], [34.0, 148.0], [34.1, 149.0], [34.2, 149.0], [34.3, 149.0], [34.4, 149.0], [34.5, 149.0], [34.6, 149.0], [34.7, 149.0], [34.8, 149.0], [34.9, 149.0], [35.0, 149.0], [35.1, 149.0], [35.2, 149.0], [35.3, 149.0], [35.4, 149.0], [35.5, 149.0], [35.6, 149.0], [35.7, 149.0], [35.8, 149.0], [35.9, 149.0], [36.0, 149.0], [36.1, 149.0], [36.2, 149.0], [36.3, 149.0], [36.4, 149.0], [36.5, 149.0], [36.6, 149.0], [36.7, 149.0], [36.8, 149.0], [36.9, 149.0], [37.0, 149.0], [37.1, 149.0], [37.2, 149.0], [37.3, 149.0], [37.4, 149.0], [37.5, 149.0], [37.6, 149.0], [37.7, 149.0], [37.8, 149.0], [37.9, 149.0], [38.0, 149.0], [38.1, 149.0], [38.2, 150.0], [38.3, 150.0], [38.4, 150.0], [38.5, 150.0], [38.6, 150.0], [38.7, 150.0], [38.8, 150.0], [38.9, 150.0], [39.0, 150.0], [39.1, 150.0], [39.2, 150.0], [39.3, 150.0], [39.4, 150.0], [39.5, 150.0], [39.6, 150.0], [39.7, 150.0], [39.8, 150.0], [39.9, 150.0], [40.0, 150.0], [40.1, 150.0], [40.2, 150.0], [40.3, 150.0], [40.4, 150.0], [40.5, 151.0], [40.6, 151.0], [40.7, 151.0], [40.8, 151.0], [40.9, 151.0], [41.0, 151.0], [41.1, 151.0], [41.2, 151.0], [41.3, 151.0], [41.4, 151.0], [41.5, 151.0], [41.6, 151.0], [41.7, 151.0], [41.8, 151.0], [41.9, 151.0], [42.0, 151.0], [42.1, 151.0], [42.2, 151.0], [42.3, 151.0], [42.4, 151.0], [42.5, 151.0], [42.6, 151.0], [42.7, 151.0], [42.8, 152.0], [42.9, 152.0], [43.0, 152.0], [43.1, 152.0], [43.2, 153.0], [43.3, 153.0], [43.4, 153.0], [43.5, 153.0], [43.6, 153.0], [43.7, 153.0], [43.8, 153.0], [43.9, 153.0], [44.0, 153.0], [44.1, 153.0], [44.2, 153.0], [44.3, 153.0], [44.4, 153.0], [44.5, 153.0], [44.6, 153.0], [44.7, 153.0], [44.8, 153.0], [44.9, 153.0], [45.0, 153.0], [45.1, 153.0], [45.2, 153.0], [45.3, 153.0], [45.4, 153.0], [45.5, 153.0], [45.6, 153.0], [45.7, 153.0], [45.8, 153.0], [45.9, 153.0], [46.0, 153.0], [46.1, 153.0], [46.2, 154.0], [46.3, 154.0], [46.4, 154.0], [46.5, 154.0], [46.6, 154.0], [46.7, 154.0], [46.8, 154.0], [46.9, 154.0], [47.0, 154.0], [47.1, 154.0], [47.2, 154.0], [47.3, 154.0], [47.4, 154.0], [47.5, 155.0], [47.6, 155.0], [47.7, 155.0], [47.8, 155.0], [47.9, 155.0], [48.0, 155.0], [48.1, 155.0], [48.2, 155.0], [48.3, 155.0], [48.4, 155.0], [48.5, 155.0], [48.6, 155.0], [48.7, 155.0], [48.8, 155.0], [48.9, 156.0], [49.0, 156.0], [49.1, 156.0], [49.2, 156.0], [49.3, 156.0], [49.4, 156.0], [49.5, 156.0], [49.6, 156.0], [49.7, 156.0], [49.8, 156.0], [49.9, 156.0], [50.0, 156.0], [50.1, 156.0], [50.2, 156.0], [50.3, 156.0], [50.4, 156.0], [50.5, 157.0], [50.6, 157.0], [50.7, 157.0], [50.8, 157.0], [50.9, 157.0], [51.0, 157.0], [51.1, 157.0], [51.2, 157.0], [51.3, 157.0], [51.4, 157.0], [51.5, 157.0], [51.6, 157.0], [51.7, 157.0], [51.8, 157.0], [51.9, 157.0], [52.0, 157.0], [52.1, 158.0], [52.2, 158.0], [52.3, 158.0], [52.4, 158.0], [52.5, 158.0], [52.6, 158.0], [52.7, 158.0], [52.8, 158.0], [52.9, 158.0], [53.0, 158.0], [53.1, 158.0], [53.2, 158.0], [53.3, 158.0], [53.4, 158.0], [53.5, 159.0], [53.6, 159.0], [53.7, 159.0], [53.8, 159.0], [53.9, 159.0], [54.0, 159.0], [54.1, 159.0], [54.2, 159.0], [54.3, 159.0], [54.4, 159.0], [54.5, 159.0], [54.6, 159.0], [54.7, 159.0], [54.8, 159.0], [54.9, 159.0], [55.0, 159.0], [55.1, 160.0], [55.2, 160.0], [55.3, 160.0], [55.4, 160.0], [55.5, 160.0], [55.6, 160.0], [55.7, 160.0], [55.8, 160.0], [55.9, 160.0], [56.0, 160.0], [56.1, 160.0], [56.2, 160.0], [56.3, 160.0], [56.4, 161.0], [56.5, 161.0], [56.6, 161.0], [56.7, 161.0], [56.8, 161.0], [56.9, 161.0], [57.0, 161.0], [57.1, 161.0], [57.2, 161.0], [57.3, 161.0], [57.4, 161.0], [57.5, 161.0], [57.6, 162.0], [57.7, 162.0], [57.8, 162.0], [57.9, 162.0], [58.0, 162.0], [58.1, 162.0], [58.2, 162.0], [58.3, 162.0], [58.4, 162.0], [58.5, 162.0], [58.6, 162.0], [58.7, 162.0], [58.8, 162.0], [58.9, 163.0], [59.0, 163.0], [59.1, 163.0], [59.2, 163.0], [59.3, 163.0], [59.4, 164.0], [59.5, 164.0], [59.6, 164.0], [59.7, 164.0], [59.8, 164.0], [59.9, 164.0], [60.0, 164.0], [60.1, 164.0], [60.2, 164.0], [60.3, 164.0], [60.4, 164.0], [60.5, 164.0], [60.6, 164.0], [60.7, 164.0], [60.8, 164.0], [60.9, 164.0], [61.0, 165.0], [61.1, 165.0], [61.2, 165.0], [61.3, 165.0], [61.4, 165.0], [61.5, 165.0], [61.6, 166.0], [61.7, 166.0], [61.8, 166.0], [61.9, 166.0], [62.0, 166.0], [62.1, 166.0], [62.2, 166.0], [62.3, 166.0], [62.4, 166.0], [62.5, 166.0], [62.6, 166.0], [62.7, 166.0], [62.8, 166.0], [62.9, 166.0], [63.0, 166.0], [63.1, 166.0], [63.2, 166.0], [63.3, 166.0], [63.4, 166.0], [63.5, 166.0], [63.6, 166.0], [63.7, 166.0], [63.8, 166.0], [63.9, 167.0], [64.0, 167.0], [64.1, 167.0], [64.2, 167.0], [64.3, 167.0], [64.4, 167.0], [64.5, 167.0], [64.6, 167.0], [64.7, 167.0], [64.8, 168.0], [64.9, 168.0], [65.0, 168.0], [65.1, 168.0], [65.2, 168.0], [65.3, 168.0], [65.4, 168.0], [65.5, 168.0], [65.6, 168.0], [65.7, 168.0], [65.8, 168.0], [65.9, 168.0], [66.0, 168.0], [66.1, 168.0], [66.2, 169.0], [66.3, 169.0], [66.4, 169.0], [66.5, 169.0], [66.6, 169.0], [66.7, 169.0], [66.8, 169.0], [66.9, 169.0], [67.0, 169.0], [67.1, 169.0], [67.2, 169.0], [67.3, 169.0], [67.4, 169.0], [67.5, 169.0], [67.6, 169.0], [67.7, 169.0], [67.8, 170.0], [67.9, 170.0], [68.0, 170.0], [68.1, 170.0], [68.2, 170.0], [68.3, 170.0], [68.4, 170.0], [68.5, 170.0], [68.6, 170.0], [68.7, 170.0], [68.8, 170.0], [68.9, 171.0], [69.0, 171.0], [69.1, 171.0], [69.2, 171.0], [69.3, 171.0], [69.4, 171.0], [69.5, 171.0], [69.6, 171.0], [69.7, 171.0], [69.8, 172.0], [69.9, 172.0], [70.0, 172.0], [70.1, 172.0], [70.2, 172.0], [70.3, 172.0], [70.4, 172.0], [70.5, 172.0], [70.6, 172.0], [70.7, 172.0], [70.8, 172.0], [70.9, 172.0], [71.0, 172.0], [71.1, 172.0], [71.2, 173.0], [71.3, 173.0], [71.4, 173.0], [71.5, 173.0], [71.6, 173.0], [71.7, 173.0], [71.8, 173.0], [71.9, 173.0], [72.0, 173.0], [72.1, 173.0], [72.2, 173.0], [72.3, 173.0], [72.4, 173.0], [72.5, 173.0], [72.6, 174.0], [72.7, 174.0], [72.8, 174.0], [72.9, 174.0], [73.0, 174.0], [73.1, 174.0], [73.2, 175.0], [73.3, 175.0], [73.4, 175.0], [73.5, 175.0], [73.6, 175.0], [73.7, 176.0], [73.8, 176.0], [73.9, 176.0], [74.0, 176.0], [74.1, 176.0], [74.2, 176.0], [74.3, 176.0], [74.4, 176.0], [74.5, 176.0], [74.6, 176.0], [74.7, 176.0], [74.8, 177.0], [74.9, 177.0], [75.0, 177.0], [75.1, 177.0], [75.2, 177.0], [75.3, 177.0], [75.4, 177.0], [75.5, 177.0], [75.6, 177.0], [75.7, 178.0], [75.8, 178.0], [75.9, 178.0], [76.0, 178.0], [76.1, 178.0], [76.2, 178.0], [76.3, 178.0], [76.4, 179.0], [76.5, 179.0], [76.6, 179.0], [76.7, 179.0], [76.8, 179.0], [76.9, 179.0], [77.0, 179.0], [77.1, 179.0], [77.2, 179.0], [77.3, 179.0], [77.4, 179.0], [77.5, 179.0], [77.6, 180.0], [77.7, 180.0], [77.8, 180.0], [77.9, 180.0], [78.0, 180.0], [78.1, 180.0], [78.2, 180.0], [78.3, 180.0], [78.4, 180.0], [78.5, 181.0], [78.6, 181.0], [78.7, 181.0], [78.8, 181.0], [78.9, 181.0], [79.0, 181.0], [79.1, 182.0], [79.2, 182.0], [79.3, 182.0], [79.4, 182.0], [79.5, 182.0], [79.6, 183.0], [79.7, 183.0], [79.8, 184.0], [79.9, 184.0], [80.0, 184.0], [80.1, 184.0], [80.2, 184.0], [80.3, 184.0], [80.4, 184.0], [80.5, 185.0], [80.6, 185.0], [80.7, 185.0], [80.8, 185.0], [80.9, 185.0], [81.0, 185.0], [81.1, 185.0], [81.2, 185.0], [81.3, 185.0], [81.4, 185.0], [81.5, 185.0], [81.6, 185.0], [81.7, 185.0], [81.8, 185.0], [81.9, 186.0], [82.0, 186.0], [82.1, 186.0], [82.2, 186.0], [82.3, 186.0], [82.4, 186.0], [82.5, 186.0], [82.6, 186.0], [82.7, 186.0], [82.8, 187.0], [82.9, 187.0], [83.0, 187.0], [83.1, 187.0], [83.2, 187.0], [83.3, 187.0], [83.4, 187.0], [83.5, 189.0], [83.6, 189.0], [83.7, 189.0], [83.8, 189.0], [83.9, 190.0], [84.0, 190.0], [84.1, 191.0], [84.2, 191.0], [84.3, 191.0], [84.4, 191.0], [84.5, 191.0], [84.6, 192.0], [84.7, 192.0], [84.8, 193.0], [84.9, 193.0], [85.0, 193.0], [85.1, 194.0], [85.2, 194.0], [85.3, 194.0], [85.4, 194.0], [85.5, 195.0], [85.6, 195.0], [85.7, 195.0], [85.8, 195.0], [85.9, 195.0], [86.0, 195.0], [86.1, 195.0], [86.2, 196.0], [86.3, 196.0], [86.4, 196.0], [86.5, 196.0], [86.6, 196.0], [86.7, 196.0], [86.8, 196.0], [86.9, 197.0], [87.0, 197.0], [87.1, 198.0], [87.2, 198.0], [87.3, 198.0], [87.4, 198.0], [87.5, 198.0], [87.6, 199.0], [87.7, 199.0], [87.8, 199.0], [87.9, 199.0], [88.0, 199.0], [88.1, 199.0], [88.2, 200.0], [88.3, 200.0], [88.4, 200.0], [88.5, 200.0], [88.6, 200.0], [88.7, 201.0], [88.8, 201.0], [88.9, 201.0], [89.0, 201.0], [89.1, 201.0], [89.2, 201.0], [89.3, 201.0], [89.4, 202.0], [89.5, 202.0], [89.6, 203.0], [89.7, 203.0], [89.8, 204.0], [89.9, 204.0], [90.0, 204.0], [90.1, 205.0], [90.2, 205.0], [90.3, 205.0], [90.4, 205.0], [90.5, 205.0], [90.6, 205.0], [90.7, 205.0], [90.8, 205.0], [90.9, 205.0], [91.0, 206.0], [91.1, 206.0], [91.2, 206.0], [91.3, 206.0], [91.4, 207.0], [91.5, 207.0], [91.6, 207.0], [91.7, 207.0], [91.8, 207.0], [91.9, 208.0], [92.0, 208.0], [92.1, 208.0], [92.2, 208.0], [92.3, 210.0], [92.4, 210.0], [92.5, 210.0], [92.6, 210.0], [92.7, 210.0], [92.8, 212.0], [92.9, 212.0], [93.0, 213.0], [93.1, 213.0], [93.2, 215.0], [93.3, 215.0], [93.4, 215.0], [93.5, 215.0], [93.6, 215.0], [93.7, 215.0], [93.8, 215.0], [93.9, 216.0], [94.0, 216.0], [94.1, 217.0], [94.2, 217.0], [94.3, 217.0], [94.4, 218.0], [94.5, 218.0], [94.6, 219.0], [94.7, 219.0], [94.8, 224.0], [94.9, 224.0], [95.0, 224.0], [95.1, 225.0], [95.2, 225.0], [95.3, 227.0], [95.4, 227.0], [95.5, 227.0], [95.6, 227.0], [95.7, 229.0], [95.8, 229.0], [95.9, 229.0], [96.0, 232.0], [96.1, 232.0], [96.2, 234.0], [96.3, 234.0], [96.4, 236.0], [96.5, 236.0], [96.6, 237.0], [96.7, 237.0], [96.8, 237.0], [96.9, 239.0], [97.0, 239.0], [97.1, 250.0], [97.2, 250.0], [97.3, 250.0], [97.4, 250.0], [97.5, 250.0], [97.6, 258.0], [97.7, 258.0], [97.8, 261.0], [97.9, 261.0], [98.0, 266.0], [98.1, 266.0], [98.2, 269.0], [98.3, 269.0], [98.4, 269.0], [98.5, 272.0], [98.6, 272.0], [98.7, 333.0], [98.8, 333.0], [98.9, 339.0], [99.0, 339.0], [99.1, 449.0], [99.2, 449.0], [99.3, 449.0], [99.4, 636.0], [99.5, 636.0], [99.6, 678.0], [99.7, 678.0], [99.8, 689.0], [99.9, 689.0], [100.0, 689.0]], "isOverall": false, "label": "Add Comment", "isController": false}, {"data": [[0.0, 58.0], [0.1, 58.0], [0.2, 58.0], [0.3, 59.0], [0.4, 59.0], [0.5, 59.0], [0.6, 59.0], [0.7, 59.0], [0.8, 60.0], [0.9, 60.0], [1.0, 60.0], [1.1, 60.0], [1.2, 60.0], [1.3, 60.0], [1.4, 60.0], [1.5, 60.0], [1.6, 60.0], [1.7, 60.0], [1.8, 61.0], [1.9, 61.0], [2.0, 61.0], [2.1, 61.0], [2.2, 61.0], [2.3, 61.0], [2.4, 61.0], [2.5, 61.0], [2.6, 61.0], [2.7, 62.0], [2.8, 62.0], [2.9, 62.0], [3.0, 62.0], [3.1, 62.0], [3.2, 62.0], [3.3, 62.0], [3.4, 62.0], [3.5, 62.0], [3.6, 62.0], [3.7, 62.0], [3.8, 62.0], [3.9, 62.0], [4.0, 63.0], [4.1, 63.0], [4.2, 63.0], [4.3, 63.0], [4.4, 63.0], [4.5, 63.0], [4.6, 63.0], [4.7, 63.0], [4.8, 63.0], [4.9, 63.0], [5.0, 63.0], [5.1, 63.0], [5.2, 63.0], [5.3, 63.0], [5.4, 63.0], [5.5, 63.0], [5.6, 63.0], [5.7, 63.0], [5.8, 63.0], [5.9, 63.0], [6.0, 63.0], [6.1, 63.0], [6.2, 63.0], [6.3, 63.0], [6.4, 63.0], [6.5, 63.0], [6.6, 63.0], [6.7, 63.0], [6.8, 63.0], [6.9, 63.0], [7.0, 63.0], [7.1, 63.0], [7.2, 63.0], [7.3, 63.0], [7.4, 64.0], [7.5, 64.0], [7.6, 64.0], [7.7, 64.0], [7.8, 64.0], [7.9, 64.0], [8.0, 64.0], [8.1, 64.0], [8.2, 64.0], [8.3, 64.0], [8.4, 64.0], [8.5, 64.0], [8.6, 64.0], [8.7, 64.0], [8.8, 64.0], [8.9, 64.0], [9.0, 64.0], [9.1, 64.0], [9.2, 64.0], [9.3, 65.0], [9.4, 65.0], [9.5, 65.0], [9.6, 65.0], [9.7, 65.0], [9.8, 65.0], [9.9, 65.0], [10.0, 65.0], [10.1, 65.0], [10.2, 65.0], [10.3, 65.0], [10.4, 65.0], [10.5, 65.0], [10.6, 65.0], [10.7, 65.0], [10.8, 65.0], [10.9, 65.0], [11.0, 65.0], [11.1, 65.0], [11.2, 65.0], [11.3, 65.0], [11.4, 65.0], [11.5, 65.0], [11.6, 65.0], [11.7, 65.0], [11.8, 65.0], [11.9, 65.0], [12.0, 65.0], [12.1, 65.0], [12.2, 65.0], [12.3, 65.0], [12.4, 65.0], [12.5, 66.0], [12.6, 66.0], [12.7, 66.0], [12.8, 66.0], [12.9, 66.0], [13.0, 66.0], [13.1, 66.0], [13.2, 66.0], [13.3, 66.0], [13.4, 66.0], [13.5, 66.0], [13.6, 66.0], [13.7, 66.0], [13.8, 66.0], [13.9, 66.0], [14.0, 66.0], [14.1, 66.0], [14.2, 66.0], [14.3, 66.0], [14.4, 66.0], [14.5, 66.0], [14.6, 66.0], [14.7, 66.0], [14.8, 66.0], [14.9, 66.0], [15.0, 66.0], [15.1, 66.0], [15.2, 66.0], [15.3, 66.0], [15.4, 66.0], [15.5, 66.0], [15.6, 66.0], [15.7, 66.0], [15.8, 66.0], [15.9, 66.0], [16.0, 66.0], [16.1, 66.0], [16.2, 66.0], [16.3, 66.0], [16.4, 66.0], [16.5, 66.0], [16.6, 66.0], [16.7, 66.0], [16.8, 66.0], [16.9, 66.0], [17.0, 66.0], [17.1, 66.0], [17.2, 66.0], [17.3, 66.0], [17.4, 66.0], [17.5, 66.0], [17.6, 66.0], [17.7, 66.0], [17.8, 66.0], [17.9, 66.0], [18.0, 66.0], [18.1, 66.0], [18.2, 66.0], [18.3, 66.0], [18.4, 66.0], [18.5, 66.0], [18.6, 66.0], [18.7, 66.0], [18.8, 66.0], [18.9, 66.0], [19.0, 66.0], [19.1, 67.0], [19.2, 67.0], [19.3, 67.0], [19.4, 67.0], [19.5, 67.0], [19.6, 67.0], [19.7, 67.0], [19.8, 67.0], [19.9, 67.0], [20.0, 67.0], [20.1, 67.0], [20.2, 67.0], [20.3, 67.0], [20.4, 67.0], [20.5, 67.0], [20.6, 67.0], [20.7, 67.0], [20.8, 67.0], [20.9, 67.0], [21.0, 67.0], [21.1, 67.0], [21.2, 67.0], [21.3, 67.0], [21.4, 67.0], [21.5, 67.0], [21.6, 67.0], [21.7, 67.0], [21.8, 67.0], [21.9, 67.0], [22.0, 67.0], [22.1, 67.0], [22.2, 67.0], [22.3, 67.0], [22.4, 67.0], [22.5, 67.0], [22.6, 67.0], [22.7, 67.0], [22.8, 67.0], [22.9, 67.0], [23.0, 67.0], [23.1, 67.0], [23.2, 67.0], [23.3, 67.0], [23.4, 67.0], [23.5, 67.0], [23.6, 67.0], [23.7, 67.0], [23.8, 67.0], [23.9, 67.0], [24.0, 67.0], [24.1, 67.0], [24.2, 67.0], [24.3, 67.0], [24.4, 67.0], [24.5, 67.0], [24.6, 67.0], [24.7, 67.0], [24.8, 67.0], [24.9, 67.0], [25.0, 67.0], [25.1, 67.0], [25.2, 68.0], [25.3, 68.0], [25.4, 68.0], [25.5, 68.0], [25.6, 68.0], [25.7, 68.0], [25.8, 68.0], [25.9, 68.0], [26.0, 68.0], [26.1, 68.0], [26.2, 68.0], [26.3, 68.0], [26.4, 68.0], [26.5, 68.0], [26.6, 68.0], [26.7, 68.0], [26.8, 68.0], [26.9, 68.0], [27.0, 68.0], [27.1, 68.0], [27.2, 68.0], [27.3, 68.0], [27.4, 68.0], [27.5, 68.0], [27.6, 68.0], [27.7, 68.0], [27.8, 68.0], [27.9, 68.0], [28.0, 68.0], [28.1, 68.0], [28.2, 68.0], [28.3, 68.0], [28.4, 68.0], [28.5, 68.0], [28.6, 68.0], [28.7, 68.0], [28.8, 68.0], [28.9, 68.0], [29.0, 68.0], [29.1, 68.0], [29.2, 68.0], [29.3, 68.0], [29.4, 68.0], [29.5, 68.0], [29.6, 68.0], [29.7, 68.0], [29.8, 68.0], [29.9, 68.0], [30.0, 68.0], [30.1, 68.0], [30.2, 68.0], [30.3, 68.0], [30.4, 68.0], [30.5, 68.0], [30.6, 68.0], [30.7, 68.0], [30.8, 68.0], [30.9, 68.0], [31.0, 69.0], [31.1, 69.0], [31.2, 69.0], [31.3, 69.0], [31.4, 69.0], [31.5, 69.0], [31.6, 69.0], [31.7, 69.0], [31.8, 69.0], [31.9, 69.0], [32.0, 69.0], [32.1, 69.0], [32.2, 69.0], [32.3, 69.0], [32.4, 69.0], [32.5, 69.0], [32.6, 69.0], [32.7, 69.0], [32.8, 69.0], [32.9, 69.0], [33.0, 69.0], [33.1, 69.0], [33.2, 69.0], [33.3, 69.0], [33.4, 69.0], [33.5, 69.0], [33.6, 69.0], [33.7, 69.0], [33.8, 69.0], [33.9, 69.0], [34.0, 69.0], [34.1, 69.0], [34.2, 69.0], [34.3, 69.0], [34.4, 69.0], [34.5, 69.0], [34.6, 69.0], [34.7, 69.0], [34.8, 69.0], [34.9, 69.0], [35.0, 69.0], [35.1, 69.0], [35.2, 69.0], [35.3, 69.0], [35.4, 69.0], [35.5, 69.0], [35.6, 69.0], [35.7, 69.0], [35.8, 69.0], [35.9, 69.0], [36.0, 69.0], [36.1, 69.0], [36.2, 69.0], [36.3, 69.0], [36.4, 69.0], [36.5, 69.0], [36.6, 69.0], [36.7, 69.0], [36.8, 69.0], [36.9, 69.0], [37.0, 69.0], [37.1, 70.0], [37.2, 70.0], [37.3, 70.0], [37.4, 70.0], [37.5, 70.0], [37.6, 70.0], [37.7, 70.0], [37.8, 70.0], [37.9, 70.0], [38.0, 70.0], [38.1, 70.0], [38.2, 70.0], [38.3, 70.0], [38.4, 70.0], [38.5, 70.0], [38.6, 70.0], [38.7, 70.0], [38.8, 70.0], [38.9, 70.0], [39.0, 70.0], [39.1, 70.0], [39.2, 70.0], [39.3, 70.0], [39.4, 70.0], [39.5, 70.0], [39.6, 70.0], [39.7, 70.0], [39.8, 70.0], [39.9, 70.0], [40.0, 70.0], [40.1, 70.0], [40.2, 70.0], [40.3, 70.0], [40.4, 70.0], [40.5, 70.0], [40.6, 70.0], [40.7, 70.0], [40.8, 70.0], [40.9, 70.0], [41.0, 70.0], [41.1, 70.0], [41.2, 70.0], [41.3, 70.0], [41.4, 70.0], [41.5, 70.0], [41.6, 70.0], [41.7, 70.0], [41.8, 70.0], [41.9, 70.0], [42.0, 70.0], [42.1, 70.0], [42.2, 70.0], [42.3, 70.0], [42.4, 70.0], [42.5, 70.0], [42.6, 70.0], [42.7, 71.0], [42.8, 71.0], [42.9, 71.0], [43.0, 71.0], [43.1, 71.0], [43.2, 71.0], [43.3, 71.0], [43.4, 71.0], [43.5, 71.0], [43.6, 71.0], [43.7, 71.0], [43.8, 71.0], [43.9, 71.0], [44.0, 71.0], [44.1, 71.0], [44.2, 71.0], [44.3, 71.0], [44.4, 71.0], [44.5, 71.0], [44.6, 71.0], [44.7, 71.0], [44.8, 71.0], [44.9, 71.0], [45.0, 71.0], [45.1, 71.0], [45.2, 71.0], [45.3, 71.0], [45.4, 71.0], [45.5, 71.0], [45.6, 71.0], [45.7, 71.0], [45.8, 71.0], [45.9, 71.0], [46.0, 71.0], [46.1, 71.0], [46.2, 71.0], [46.3, 71.0], [46.4, 71.0], [46.5, 71.0], [46.6, 71.0], [46.7, 71.0], [46.8, 71.0], [46.9, 71.0], [47.0, 71.0], [47.1, 71.0], [47.2, 71.0], [47.3, 71.0], [47.4, 71.0], [47.5, 71.0], [47.6, 71.0], [47.7, 71.0], [47.8, 71.0], [47.9, 71.0], [48.0, 71.0], [48.1, 71.0], [48.2, 71.0], [48.3, 72.0], [48.4, 72.0], [48.5, 72.0], [48.6, 72.0], [48.7, 72.0], [48.8, 72.0], [48.9, 72.0], [49.0, 72.0], [49.1, 72.0], [49.2, 72.0], [49.3, 72.0], [49.4, 72.0], [49.5, 72.0], [49.6, 72.0], [49.7, 72.0], [49.8, 72.0], [49.9, 72.0], [50.0, 72.0], [50.1, 72.0], [50.2, 72.0], [50.3, 72.0], [50.4, 72.0], [50.5, 72.0], [50.6, 72.0], [50.7, 72.0], [50.8, 72.0], [50.9, 72.0], [51.0, 72.0], [51.1, 72.0], [51.2, 72.0], [51.3, 72.0], [51.4, 72.0], [51.5, 72.0], [51.6, 72.0], [51.7, 72.0], [51.8, 72.0], [51.9, 72.0], [52.0, 72.0], [52.1, 72.0], [52.2, 72.0], [52.3, 72.0], [52.4, 72.0], [52.5, 72.0], [52.6, 72.0], [52.7, 72.0], [52.8, 72.0], [52.9, 72.0], [53.0, 72.0], [53.1, 72.0], [53.2, 72.0], [53.3, 72.0], [53.4, 72.0], [53.5, 72.0], [53.6, 72.0], [53.7, 72.0], [53.8, 72.0], [53.9, 72.0], [54.0, 72.0], [54.1, 72.0], [54.2, 72.0], [54.3, 72.0], [54.4, 72.0], [54.5, 72.0], [54.6, 72.0], [54.7, 72.0], [54.8, 72.0], [54.9, 72.0], [55.0, 72.0], [55.1, 72.0], [55.2, 72.0], [55.3, 72.0], [55.4, 72.0], [55.5, 72.0], [55.6, 72.0], [55.7, 73.0], [55.8, 73.0], [55.9, 73.0], [56.0, 73.0], [56.1, 73.0], [56.2, 73.0], [56.3, 73.0], [56.4, 73.0], [56.5, 73.0], [56.6, 73.0], [56.7, 73.0], [56.8, 73.0], [56.9, 73.0], [57.0, 73.0], [57.1, 73.0], [57.2, 73.0], [57.3, 73.0], [57.4, 73.0], [57.5, 73.0], [57.6, 73.0], [57.7, 73.0], [57.8, 73.0], [57.9, 73.0], [58.0, 73.0], [58.1, 73.0], [58.2, 73.0], [58.3, 73.0], [58.4, 73.0], [58.5, 73.0], [58.6, 73.0], [58.7, 73.0], [58.8, 73.0], [58.9, 73.0], [59.0, 73.0], [59.1, 73.0], [59.2, 73.0], [59.3, 73.0], [59.4, 73.0], [59.5, 73.0], [59.6, 73.0], [59.7, 73.0], [59.8, 73.0], [59.9, 73.0], [60.0, 73.0], [60.1, 73.0], [60.2, 73.0], [60.3, 73.0], [60.4, 73.0], [60.5, 73.0], [60.6, 73.0], [60.7, 73.0], [60.8, 73.0], [60.9, 73.0], [61.0, 73.0], [61.1, 73.0], [61.2, 73.0], [61.3, 74.0], [61.4, 74.0], [61.5, 74.0], [61.6, 74.0], [61.7, 74.0], [61.8, 74.0], [61.9, 74.0], [62.0, 74.0], [62.1, 74.0], [62.2, 74.0], [62.3, 74.0], [62.4, 74.0], [62.5, 74.0], [62.6, 74.0], [62.7, 74.0], [62.8, 74.0], [62.9, 74.0], [63.0, 74.0], [63.1, 74.0], [63.2, 74.0], [63.3, 74.0], [63.4, 74.0], [63.5, 74.0], [63.6, 74.0], [63.7, 74.0], [63.8, 74.0], [63.9, 74.0], [64.0, 74.0], [64.1, 74.0], [64.2, 74.0], [64.3, 74.0], [64.4, 74.0], [64.5, 74.0], [64.6, 74.0], [64.7, 74.0], [64.8, 74.0], [64.9, 74.0], [65.0, 74.0], [65.1, 74.0], [65.2, 74.0], [65.3, 74.0], [65.4, 74.0], [65.5, 74.0], [65.6, 74.0], [65.7, 75.0], [65.8, 75.0], [65.9, 75.0], [66.0, 75.0], [66.1, 75.0], [66.2, 75.0], [66.3, 75.0], [66.4, 75.0], [66.5, 75.0], [66.6, 75.0], [66.7, 75.0], [66.8, 75.0], [66.9, 75.0], [67.0, 75.0], [67.1, 75.0], [67.2, 75.0], [67.3, 75.0], [67.4, 75.0], [67.5, 75.0], [67.6, 75.0], [67.7, 75.0], [67.8, 75.0], [67.9, 75.0], [68.0, 75.0], [68.1, 76.0], [68.2, 76.0], [68.3, 76.0], [68.4, 76.0], [68.5, 76.0], [68.6, 76.0], [68.7, 76.0], [68.8, 76.0], [68.9, 76.0], [69.0, 76.0], [69.1, 76.0], [69.2, 76.0], [69.3, 76.0], [69.4, 76.0], [69.5, 76.0], [69.6, 76.0], [69.7, 76.0], [69.8, 76.0], [69.9, 76.0], [70.0, 76.0], [70.1, 76.0], [70.2, 76.0], [70.3, 76.0], [70.4, 76.0], [70.5, 76.0], [70.6, 76.0], [70.7, 76.0], [70.8, 76.0], [70.9, 76.0], [71.0, 76.0], [71.1, 76.0], [71.2, 76.0], [71.3, 76.0], [71.4, 76.0], [71.5, 77.0], [71.6, 77.0], [71.7, 77.0], [71.8, 77.0], [71.9, 77.0], [72.0, 77.0], [72.1, 77.0], [72.2, 77.0], [72.3, 77.0], [72.4, 77.0], [72.5, 77.0], [72.6, 77.0], [72.7, 77.0], [72.8, 77.0], [72.9, 77.0], [73.0, 77.0], [73.1, 77.0], [73.2, 77.0], [73.3, 77.0], [73.4, 77.0], [73.5, 77.0], [73.6, 77.0], [73.7, 77.0], [73.8, 77.0], [73.9, 77.0], [74.0, 78.0], [74.1, 78.0], [74.2, 78.0], [74.3, 78.0], [74.4, 78.0], [74.5, 78.0], [74.6, 78.0], [74.7, 78.0], [74.8, 78.0], [74.9, 78.0], [75.0, 78.0], [75.1, 78.0], [75.2, 78.0], [75.3, 78.0], [75.4, 78.0], [75.5, 78.0], [75.6, 78.0], [75.7, 78.0], [75.8, 78.0], [75.9, 79.0], [76.0, 79.0], [76.1, 79.0], [76.2, 79.0], [76.3, 79.0], [76.4, 79.0], [76.5, 79.0], [76.6, 79.0], [76.7, 79.0], [76.8, 79.0], [76.9, 79.0], [77.0, 79.0], [77.1, 79.0], [77.2, 79.0], [77.3, 79.0], [77.4, 80.0], [77.5, 80.0], [77.6, 80.0], [77.7, 80.0], [77.8, 80.0], [77.9, 80.0], [78.0, 80.0], [78.1, 80.0], [78.2, 80.0], [78.3, 80.0], [78.4, 80.0], [78.5, 80.0], [78.6, 80.0], [78.7, 80.0], [78.8, 80.0], [78.9, 80.0], [79.0, 80.0], [79.1, 80.0], [79.2, 80.0], [79.3, 80.0], [79.4, 80.0], [79.5, 80.0], [79.6, 81.0], [79.7, 81.0], [79.8, 81.0], [79.9, 81.0], [80.0, 81.0], [80.1, 81.0], [80.2, 81.0], [80.3, 81.0], [80.4, 81.0], [80.5, 81.0], [80.6, 81.0], [80.7, 81.0], [80.8, 81.0], [80.9, 81.0], [81.0, 81.0], [81.1, 81.0], [81.2, 81.0], [81.3, 81.0], [81.4, 81.0], [81.5, 82.0], [81.6, 82.0], [81.7, 82.0], [81.8, 82.0], [81.9, 82.0], [82.0, 82.0], [82.1, 82.0], [82.2, 82.0], [82.3, 82.0], [82.4, 82.0], [82.5, 82.0], [82.6, 82.0], [82.7, 82.0], [82.8, 82.0], [82.9, 82.0], [83.0, 82.0], [83.1, 82.0], [83.2, 82.0], [83.3, 82.0], [83.4, 82.0], [83.5, 83.0], [83.6, 83.0], [83.7, 83.0], [83.8, 83.0], [83.9, 83.0], [84.0, 83.0], [84.1, 83.0], [84.2, 83.0], [84.3, 83.0], [84.4, 83.0], [84.5, 83.0], [84.6, 83.0], [84.7, 83.0], [84.8, 83.0], [84.9, 83.0], [85.0, 83.0], [85.1, 83.0], [85.2, 84.0], [85.3, 84.0], [85.4, 84.0], [85.5, 84.0], [85.6, 84.0], [85.7, 84.0], [85.8, 84.0], [85.9, 84.0], [86.0, 84.0], [86.1, 85.0], [86.2, 85.0], [86.3, 85.0], [86.4, 85.0], [86.5, 85.0], [86.6, 86.0], [86.7, 86.0], [86.8, 86.0], [86.9, 86.0], [87.0, 86.0], [87.1, 86.0], [87.2, 86.0], [87.3, 86.0], [87.4, 86.0], [87.5, 86.0], [87.6, 86.0], [87.7, 86.0], [87.8, 86.0], [87.9, 87.0], [88.0, 87.0], [88.1, 87.0], [88.2, 87.0], [88.3, 88.0], [88.4, 88.0], [88.5, 88.0], [88.6, 88.0], [88.7, 88.0], [88.8, 89.0], [88.9, 89.0], [89.0, 89.0], [89.1, 89.0], [89.2, 89.0], [89.3, 89.0], [89.4, 89.0], [89.5, 89.0], [89.6, 90.0], [89.7, 90.0], [89.8, 90.0], [89.9, 90.0], [90.0, 90.0], [90.1, 90.0], [90.2, 90.0], [90.3, 90.0], [90.4, 90.0], [90.5, 90.0], [90.6, 90.0], [90.7, 90.0], [90.8, 90.0], [90.9, 90.0], [91.0, 90.0], [91.1, 90.0], [91.2, 90.0], [91.3, 90.0], [91.4, 90.0], [91.5, 91.0], [91.6, 91.0], [91.7, 91.0], [91.8, 91.0], [91.9, 91.0], [92.0, 92.0], [92.1, 92.0], [92.2, 92.0], [92.3, 92.0], [92.4, 92.0], [92.5, 93.0], [92.6, 93.0], [92.7, 93.0], [92.8, 93.0], [92.9, 93.0], [93.0, 93.0], [93.1, 93.0], [93.2, 93.0], [93.3, 93.0], [93.4, 93.0], [93.5, 94.0], [93.6, 94.0], [93.7, 94.0], [93.8, 94.0], [93.9, 94.0], [94.0, 96.0], [94.1, 96.0], [94.2, 96.0], [94.3, 96.0], [94.4, 97.0], [94.5, 97.0], [94.6, 97.0], [94.7, 98.0], [94.8, 98.0], [94.9, 101.0], [95.0, 101.0], [95.1, 101.0], [95.2, 103.0], [95.3, 103.0], [95.4, 103.0], [95.5, 103.0], [95.6, 103.0], [95.7, 108.0], [95.8, 108.0], [95.9, 111.0], [96.0, 111.0], [96.1, 112.0], [96.2, 112.0], [96.3, 112.0], [96.4, 112.0], [96.5, 112.0], [96.6, 117.0], [96.7, 117.0], [96.8, 117.0], [96.9, 119.0], [97.0, 119.0], [97.1, 120.0], [97.2, 120.0], [97.3, 120.0], [97.4, 124.0], [97.5, 124.0], [97.6, 137.0], [97.7, 137.0], [97.8, 137.0], [97.9, 137.0], [98.0, 137.0], [98.1, 147.0], [98.2, 147.0], [98.3, 150.0], [98.4, 150.0], [98.5, 150.0], [98.6, 152.0], [98.7, 152.0], [98.8, 166.0], [98.9, 166.0], [99.0, 166.0], [99.1, 211.0], [99.2, 211.0], [99.3, 349.0], [99.4, 349.0], [99.5, 349.0], [99.6, 532.0], [99.7, 532.0], [99.8, 581.0], [99.9, 581.0], [100.0, 581.0]], "isOverall": false, "label": "Like idea", "isController": false}, {"data": [[0.0, 716.0], [0.1, 716.0], [0.2, 716.0], [0.3, 723.0], [0.4, 723.0], [0.5, 746.0], [0.6, 746.0], [0.7, 759.0], [0.8, 759.0], [0.9, 759.0], [1.0, 759.0], [1.1, 763.0], [1.2, 763.0], [1.3, 768.0], [1.4, 768.0], [1.5, 769.0], [1.6, 769.0], [1.7, 769.0], [1.8, 784.0], [1.9, 784.0], [2.0, 785.0], [2.1, 785.0], [2.2, 797.0], [2.3, 797.0], [2.4, 800.0], [2.5, 800.0], [2.6, 801.0], [2.7, 801.0], [2.8, 806.0], [2.9, 806.0], [3.0, 808.0], [3.1, 808.0], [3.2, 810.0], [3.3, 810.0], [3.4, 810.0], [3.5, 815.0], [3.6, 815.0], [3.7, 815.0], [3.8, 815.0], [3.9, 816.0], [4.0, 816.0], [4.1, 818.0], [4.2, 818.0], [4.3, 824.0], [4.4, 824.0], [4.5, 826.0], [4.6, 826.0], [4.7, 828.0], [4.8, 828.0], [4.9, 833.0], [5.0, 833.0], [5.1, 833.0], [5.2, 835.0], [5.3, 835.0], [5.4, 836.0], [5.5, 836.0], [5.6, 838.0], [5.7, 838.0], [5.8, 849.0], [5.9, 849.0], [6.0, 857.0], [6.1, 857.0], [6.2, 857.0], [6.3, 857.0], [6.4, 860.0], [6.5, 860.0], [6.6, 866.0], [6.7, 866.0], [6.8, 866.0], [6.9, 866.0], [7.0, 866.0], [7.1, 867.0], [7.2, 867.0], [7.3, 872.0], [7.4, 872.0], [7.5, 872.0], [7.6, 872.0], [7.7, 874.0], [7.8, 874.0], [7.9, 879.0], [8.0, 879.0], [8.1, 881.0], [8.2, 881.0], [8.3, 881.0], [8.4, 881.0], [8.5, 881.0], [8.6, 884.0], [8.7, 884.0], [8.8, 890.0], [8.9, 890.0], [9.0, 903.0], [9.1, 903.0], [9.2, 904.0], [9.3, 904.0], [9.4, 914.0], [9.5, 914.0], [9.6, 917.0], [9.7, 917.0], [9.8, 917.0], [9.9, 917.0], [10.0, 939.0], [10.1, 939.0], [10.2, 939.0], [10.3, 947.0], [10.4, 947.0], [10.5, 949.0], [10.6, 949.0], [10.7, 960.0], [10.8, 960.0], [10.9, 980.0], [11.0, 980.0], [11.1, 987.0], [11.2, 987.0], [11.3, 1002.0], [11.4, 1002.0], [11.5, 1023.0], [11.6, 1023.0], [11.7, 1023.0], [11.8, 1031.0], [11.9, 1031.0], [12.0, 1098.0], [12.1, 1098.0], [12.2, 1105.0], [12.3, 1105.0], [12.4, 1166.0], [12.5, 1166.0], [12.6, 1239.0], [12.7, 1239.0], [12.8, 4220.0], [12.9, 4220.0], [13.0, 4250.0], [13.1, 4250.0], [13.2, 4255.0], [13.3, 4255.0], [13.4, 4255.0], [13.5, 4279.0], [13.6, 4279.0], [13.7, 4279.0], [13.8, 4279.0], [13.9, 4282.0], [14.0, 4282.0], [14.1, 4295.0], [14.2, 4295.0], [14.3, 4297.0], [14.4, 4297.0], [14.5, 4317.0], [14.6, 4317.0], [14.7, 4331.0], [14.8, 4331.0], [14.9, 4395.0], [15.0, 4395.0], [15.1, 4395.0], [15.2, 4400.0], [15.3, 4400.0], [15.4, 4402.0], [15.5, 4402.0], [15.6, 4406.0], [15.7, 4406.0], [15.8, 4409.0], [15.9, 4409.0], [16.0, 4410.0], [16.1, 4410.0], [16.2, 4412.0], [16.3, 4412.0], [16.4, 4414.0], [16.5, 4414.0], [16.6, 4415.0], [16.7, 4415.0], [16.8, 4415.0], [16.9, 4416.0], [17.0, 4416.0], [17.1, 4423.0], [17.2, 4423.0], [17.3, 4428.0], [17.4, 4428.0], [17.5, 4429.0], [17.6, 4429.0], [17.7, 4433.0], [17.8, 4433.0], [17.9, 4438.0], [18.0, 4438.0], [18.1, 4441.0], [18.2, 4441.0], [18.3, 4441.0], [18.4, 4441.0], [18.5, 4441.0], [18.6, 4449.0], [18.7, 4449.0], [18.8, 4451.0], [18.9, 4451.0], [19.0, 4470.0], [19.1, 4470.0], [19.2, 4472.0], [19.3, 4472.0], [19.4, 4475.0], [19.5, 4475.0], [19.6, 4478.0], [19.7, 4478.0], [19.8, 4481.0], [19.9, 4481.0], [20.0, 4481.0], [20.1, 4482.0], [20.2, 4482.0], [20.3, 4484.0], [20.4, 4484.0], [20.5, 4485.0], [20.6, 4485.0], [20.7, 4489.0], [20.8, 4489.0], [20.9, 4490.0], [21.0, 4490.0], [21.1, 4491.0], [21.2, 4491.0], [21.3, 4503.0], [21.4, 4503.0], [21.5, 4504.0], [21.6, 4504.0], [21.7, 4504.0], [21.8, 4508.0], [21.9, 4508.0], [22.0, 4511.0], [22.1, 4511.0], [22.2, 4514.0], [22.3, 4514.0], [22.4, 4514.0], [22.5, 4514.0], [22.6, 4515.0], [22.7, 4515.0], [22.8, 4517.0], [22.9, 4517.0], [23.0, 4520.0], [23.1, 4520.0], [23.2, 4523.0], [23.3, 4523.0], [23.4, 4523.0], [23.5, 4528.0], [23.6, 4528.0], [23.7, 4528.0], [23.8, 4528.0], [23.9, 4531.0], [24.0, 4531.0], [24.1, 4531.0], [24.2, 4531.0], [24.3, 4533.0], [24.4, 4533.0], [24.5, 4533.0], [24.6, 4533.0], [24.7, 4534.0], [24.8, 4534.0], [24.9, 4536.0], [25.0, 4536.0], [25.1, 4536.0], [25.2, 4540.0], [25.3, 4540.0], [25.4, 4541.0], [25.5, 4541.0], [25.6, 4541.0], [25.7, 4541.0], [25.8, 4544.0], [25.9, 4544.0], [26.0, 4546.0], [26.1, 4546.0], [26.2, 4551.0], [26.3, 4551.0], [26.4, 4553.0], [26.5, 4553.0], [26.6, 4554.0], [26.7, 4554.0], [26.8, 4554.0], [26.9, 4555.0], [27.0, 4555.0], [27.1, 4556.0], [27.2, 4556.0], [27.3, 4556.0], [27.4, 4556.0], [27.5, 4558.0], [27.6, 4558.0], [27.7, 4560.0], [27.8, 4560.0], [27.9, 4561.0], [28.0, 4561.0], [28.1, 4564.0], [28.2, 4564.0], [28.3, 4565.0], [28.4, 4565.0], [28.5, 4565.0], [28.6, 4568.0], [28.7, 4568.0], [28.8, 4568.0], [28.9, 4568.0], [29.0, 4568.0], [29.1, 4568.0], [29.2, 4571.0], [29.3, 4571.0], [29.4, 4571.0], [29.5, 4571.0], [29.6, 4572.0], [29.7, 4572.0], [29.8, 4573.0], [29.9, 4573.0], [30.0, 4573.0], [30.1, 4576.0], [30.2, 4576.0], [30.3, 4581.0], [30.4, 4581.0], [30.5, 4583.0], [30.6, 4583.0], [30.7, 4584.0], [30.8, 4584.0], [30.9, 4584.0], [31.0, 4584.0], [31.1, 4585.0], [31.2, 4585.0], [31.3, 4585.0], [31.4, 4585.0], [31.5, 4585.0], [31.6, 4585.0], [31.7, 4585.0], [31.8, 4586.0], [31.9, 4586.0], [32.0, 4588.0], [32.1, 4588.0], [32.2, 4590.0], [32.3, 4590.0], [32.4, 4591.0], [32.5, 4591.0], [32.6, 4597.0], [32.7, 4597.0], [32.8, 4599.0], [32.9, 4599.0], [33.0, 4601.0], [33.1, 4601.0], [33.2, 4601.0], [33.3, 4601.0], [33.4, 4601.0], [33.5, 4604.0], [33.6, 4604.0], [33.7, 4605.0], [33.8, 4605.0], [33.9, 4606.0], [34.0, 4606.0], [34.1, 4606.0], [34.2, 4606.0], [34.3, 4607.0], [34.4, 4607.0], [34.5, 4609.0], [34.6, 4609.0], [34.7, 4609.0], [34.8, 4609.0], [34.9, 4610.0], [35.0, 4610.0], [35.1, 4610.0], [35.2, 4610.0], [35.3, 4610.0], [35.4, 4611.0], [35.5, 4611.0], [35.6, 4616.0], [35.7, 4616.0], [35.8, 4618.0], [35.9, 4618.0], [36.0, 4619.0], [36.1, 4619.0], [36.2, 4621.0], [36.3, 4621.0], [36.4, 4621.0], [36.5, 4621.0], [36.6, 4624.0], [36.7, 4624.0], [36.8, 4624.0], [36.9, 4624.0], [37.0, 4624.0], [37.1, 4624.0], [37.2, 4624.0], [37.3, 4626.0], [37.4, 4626.0], [37.5, 4627.0], [37.6, 4627.0], [37.7, 4627.0], [37.8, 4627.0], [37.9, 4632.0], [38.0, 4632.0], [38.1, 4633.0], [38.2, 4633.0], [38.3, 4634.0], [38.4, 4634.0], [38.5, 4634.0], [38.6, 4634.0], [38.7, 4634.0], [38.8, 4636.0], [38.9, 4636.0], [39.0, 4638.0], [39.1, 4638.0], [39.2, 4640.0], [39.3, 4640.0], [39.4, 4641.0], [39.5, 4641.0], [39.6, 4644.0], [39.7, 4644.0], [39.8, 4644.0], [39.9, 4644.0], [40.0, 4645.0], [40.1, 4645.0], [40.2, 4645.0], [40.3, 4649.0], [40.4, 4649.0], [40.5, 4649.0], [40.6, 4649.0], [40.7, 4649.0], [40.8, 4649.0], [40.9, 4650.0], [41.0, 4650.0], [41.1, 4650.0], [41.2, 4650.0], [41.3, 4650.0], [41.4, 4650.0], [41.5, 4652.0], [41.6, 4652.0], [41.7, 4652.0], [41.8, 4655.0], [41.9, 4655.0], [42.0, 4656.0], [42.1, 4656.0], [42.2, 4659.0], [42.3, 4659.0], [42.4, 4660.0], [42.5, 4660.0], [42.6, 4660.0], [42.7, 4660.0], [42.8, 4660.0], [42.9, 4660.0], [43.0, 4664.0], [43.1, 4664.0], [43.2, 4665.0], [43.3, 4665.0], [43.4, 4665.0], [43.5, 4666.0], [43.6, 4666.0], [43.7, 4669.0], [43.8, 4669.0], [43.9, 4670.0], [44.0, 4670.0], [44.1, 4672.0], [44.2, 4672.0], [44.3, 4673.0], [44.4, 4673.0], [44.5, 4673.0], [44.6, 4673.0], [44.7, 4674.0], [44.8, 4674.0], [44.9, 4675.0], [45.0, 4675.0], [45.1, 4675.0], [45.2, 4675.0], [45.3, 4675.0], [45.4, 4677.0], [45.5, 4677.0], [45.6, 4680.0], [45.7, 4680.0], [45.8, 4681.0], [45.9, 4681.0], [46.0, 4682.0], [46.1, 4682.0], [46.2, 4683.0], [46.3, 4683.0], [46.4, 4683.0], [46.5, 4683.0], [46.6, 4685.0], [46.7, 4685.0], [46.8, 4685.0], [46.9, 4686.0], [47.0, 4686.0], [47.1, 4687.0], [47.2, 4687.0], [47.3, 4687.0], [47.4, 4687.0], [47.5, 4690.0], [47.6, 4690.0], [47.7, 4690.0], [47.8, 4690.0], [47.9, 4690.0], [48.0, 4690.0], [48.1, 4692.0], [48.2, 4692.0], [48.3, 4694.0], [48.4, 4694.0], [48.5, 4694.0], [48.6, 4695.0], [48.7, 4695.0], [48.8, 4696.0], [48.9, 4696.0], [49.0, 4697.0], [49.1, 4697.0], [49.2, 4697.0], [49.3, 4697.0], [49.4, 4697.0], [49.5, 4697.0], [49.6, 4698.0], [49.7, 4698.0], [49.8, 4698.0], [49.9, 4698.0], [50.0, 4698.0], [50.1, 4698.0], [50.2, 4698.0], [50.3, 4698.0], [50.4, 4698.0], [50.5, 4698.0], [50.6, 4698.0], [50.7, 4701.0], [50.8, 4701.0], [50.9, 4703.0], [51.0, 4703.0], [51.1, 4705.0], [51.2, 4705.0], [51.3, 4705.0], [51.4, 4705.0], [51.5, 4706.0], [51.6, 4706.0], [51.7, 4706.0], [51.8, 4706.0], [51.9, 4706.0], [52.0, 4707.0], [52.1, 4707.0], [52.2, 4708.0], [52.3, 4708.0], [52.4, 4708.0], [52.5, 4708.0], [52.6, 4709.0], [52.7, 4709.0], [52.8, 4709.0], [52.9, 4709.0], [53.0, 4710.0], [53.1, 4710.0], [53.2, 4711.0], [53.3, 4711.0], [53.4, 4711.0], [53.5, 4711.0], [53.6, 4711.0], [53.7, 4712.0], [53.8, 4712.0], [53.9, 4712.0], [54.0, 4712.0], [54.1, 4713.0], [54.2, 4713.0], [54.3, 4714.0], [54.4, 4714.0], [54.5, 4717.0], [54.6, 4717.0], [54.7, 4719.0], [54.8, 4719.0], [54.9, 4722.0], [55.0, 4722.0], [55.1, 4722.0], [55.2, 4722.0], [55.3, 4722.0], [55.4, 4722.0], [55.5, 4722.0], [55.6, 4723.0], [55.7, 4723.0], [55.8, 4728.0], [55.9, 4728.0], [56.0, 4728.0], [56.1, 4728.0], [56.2, 4729.0], [56.3, 4729.0], [56.4, 4730.0], [56.5, 4730.0], [56.6, 4731.0], [56.7, 4731.0], [56.8, 4731.0], [56.9, 4733.0], [57.0, 4733.0], [57.1, 4734.0], [57.2, 4734.0], [57.3, 4735.0], [57.4, 4735.0], [57.5, 4736.0], [57.6, 4736.0], [57.7, 4738.0], [57.8, 4738.0], [57.9, 4739.0], [58.0, 4739.0], [58.1, 4740.0], [58.2, 4740.0], [58.3, 4740.0], [58.4, 4740.0], [58.5, 4740.0], [58.6, 4741.0], [58.7, 4741.0], [58.8, 4741.0], [58.9, 4741.0], [59.0, 4741.0], [59.1, 4741.0], [59.2, 4749.0], [59.3, 4749.0], [59.4, 4759.0], [59.5, 4759.0], [59.6, 4761.0], [59.7, 4761.0], [59.8, 4762.0], [59.9, 4762.0], [60.0, 4762.0], [60.1, 4762.0], [60.2, 4762.0], [60.3, 4767.0], [60.4, 4767.0], [60.5, 4768.0], [60.6, 4768.0], [60.7, 4769.0], [60.8, 4769.0], [60.9, 4770.0], [61.0, 4770.0], [61.1, 4771.0], [61.2, 4771.0], [61.3, 4771.0], [61.4, 4771.0], [61.5, 4772.0], [61.6, 4772.0], [61.7, 4772.0], [61.8, 4778.0], [61.9, 4778.0], [62.0, 4778.0], [62.1, 4778.0], [62.2, 4780.0], [62.3, 4780.0], [62.4, 4780.0], [62.5, 4780.0], [62.6, 4783.0], [62.7, 4783.0], [62.8, 4783.0], [62.9, 4783.0], [63.0, 4784.0], [63.1, 4784.0], [63.2, 4786.0], [63.3, 4786.0], [63.4, 4786.0], [63.5, 4788.0], [63.6, 4788.0], [63.7, 4788.0], [63.8, 4788.0], [63.9, 4792.0], [64.0, 4792.0], [64.1, 4793.0], [64.2, 4793.0], [64.3, 4796.0], [64.4, 4796.0], [64.5, 4799.0], [64.6, 4799.0], [64.7, 4802.0], [64.8, 4802.0], [64.9, 4802.0], [65.0, 4802.0], [65.1, 4802.0], [65.2, 4803.0], [65.3, 4803.0], [65.4, 4808.0], [65.5, 4808.0], [65.6, 4809.0], [65.7, 4809.0], [65.8, 4809.0], [65.9, 4809.0], [66.0, 4810.0], [66.1, 4810.0], [66.2, 4810.0], [66.3, 4810.0], [66.4, 4814.0], [66.5, 4814.0], [66.6, 4814.0], [66.7, 4814.0], [66.8, 4814.0], [66.9, 4818.0], [67.0, 4818.0], [67.1, 4819.0], [67.2, 4819.0], [67.3, 4823.0], [67.4, 4823.0], [67.5, 4823.0], [67.6, 4823.0], [67.7, 4823.0], [67.8, 4823.0], [67.9, 4823.0], [68.0, 4823.0], [68.1, 4827.0], [68.2, 4827.0], [68.3, 4830.0], [68.4, 4830.0], [68.5, 4830.0], [68.6, 4831.0], [68.7, 4831.0], [68.8, 4834.0], [68.9, 4834.0], [69.0, 4834.0], [69.1, 4834.0], [69.2, 4836.0], [69.3, 4836.0], [69.4, 4837.0], [69.5, 4837.0], [69.6, 4838.0], [69.7, 4838.0], [69.8, 4842.0], [69.9, 4842.0], [70.0, 4842.0], [70.1, 4842.0], [70.2, 4842.0], [70.3, 4846.0], [70.4, 4846.0], [70.5, 4849.0], [70.6, 4849.0], [70.7, 4849.0], [70.8, 4849.0], [70.9, 4849.0], [71.0, 4849.0], [71.1, 4852.0], [71.2, 4852.0], [71.3, 4855.0], [71.4, 4855.0], [71.5, 4859.0], [71.6, 4859.0], [71.7, 4859.0], [71.8, 4861.0], [71.9, 4861.0], [72.0, 4862.0], [72.1, 4862.0], [72.2, 4866.0], [72.3, 4866.0], [72.4, 4867.0], [72.5, 4867.0], [72.6, 4868.0], [72.7, 4868.0], [72.8, 4869.0], [72.9, 4869.0], [73.0, 4871.0], [73.1, 4871.0], [73.2, 4871.0], [73.3, 4871.0], [73.4, 4871.0], [73.5, 4879.0], [73.6, 4879.0], [73.7, 4880.0], [73.8, 4880.0], [73.9, 4882.0], [74.0, 4882.0], [74.1, 4891.0], [74.2, 4891.0], [74.3, 4892.0], [74.4, 4892.0], [74.5, 4900.0], [74.6, 4900.0], [74.7, 4901.0], [74.8, 4901.0], [74.9, 4901.0], [75.0, 4901.0], [75.1, 4901.0], [75.2, 4903.0], [75.3, 4903.0], [75.4, 4903.0], [75.5, 4903.0], [75.6, 4905.0], [75.7, 4905.0], [75.8, 4909.0], [75.9, 4909.0], [76.0, 4915.0], [76.1, 4915.0], [76.2, 4917.0], [76.3, 4917.0], [76.4, 4918.0], [76.5, 4918.0], [76.6, 4919.0], [76.7, 4919.0], [76.8, 4919.0], [76.9, 4919.0], [77.0, 4919.0], [77.1, 4922.0], [77.2, 4922.0], [77.3, 4924.0], [77.4, 4924.0], [77.5, 4924.0], [77.6, 4924.0], [77.7, 4928.0], [77.8, 4928.0], [77.9, 4930.0], [78.0, 4930.0], [78.1, 4932.0], [78.2, 4932.0], [78.3, 4934.0], [78.4, 4934.0], [78.5, 4934.0], [78.6, 4937.0], [78.7, 4937.0], [78.8, 4939.0], [78.9, 4939.0], [79.0, 4942.0], [79.1, 4942.0], [79.2, 4943.0], [79.3, 4943.0], [79.4, 4946.0], [79.5, 4946.0], [79.6, 4954.0], [79.7, 4954.0], [79.8, 4957.0], [79.9, 4957.0], [80.0, 4957.0], [80.1, 4957.0], [80.2, 4957.0], [80.3, 4963.0], [80.4, 4963.0], [80.5, 4968.0], [80.6, 4968.0], [80.7, 4968.0], [80.8, 4968.0], [80.9, 4970.0], [81.0, 4970.0], [81.1, 4972.0], [81.2, 4972.0], [81.3, 4973.0], [81.4, 4973.0], [81.5, 4981.0], [81.6, 4981.0], [81.7, 4981.0], [81.8, 4983.0], [81.9, 4983.0], [82.0, 4983.0], [82.1, 4983.0], [82.2, 4987.0], [82.3, 4987.0], [82.4, 4987.0], [82.5, 4987.0], [82.6, 4990.0], [82.7, 4990.0], [82.8, 4996.0], [82.9, 4996.0], [83.0, 5003.0], [83.1, 5003.0], [83.2, 5005.0], [83.3, 5005.0], [83.4, 5005.0], [83.5, 5006.0], [83.6, 5006.0], [83.7, 5009.0], [83.8, 5009.0], [83.9, 5010.0], [84.0, 5010.0], [84.1, 5013.0], [84.2, 5013.0], [84.3, 5014.0], [84.4, 5014.0], [84.5, 5017.0], [84.6, 5017.0], [84.7, 5017.0], [84.8, 5017.0], [84.9, 5019.0], [85.0, 5019.0], [85.1, 5019.0], [85.2, 5020.0], [85.3, 5020.0], [85.4, 5020.0], [85.5, 5020.0], [85.6, 5023.0], [85.7, 5023.0], [85.8, 5026.0], [85.9, 5026.0], [86.0, 5039.0], [86.1, 5039.0], [86.2, 5046.0], [86.3, 5046.0], [86.4, 5049.0], [86.5, 5049.0], [86.6, 5053.0], [86.7, 5053.0], [86.8, 5053.0], [86.9, 5053.0], [87.0, 5053.0], [87.1, 5054.0], [87.2, 5054.0], [87.3, 5057.0], [87.4, 5057.0], [87.5, 5070.0], [87.6, 5070.0], [87.7, 5070.0], [87.8, 5070.0], [87.9, 5073.0], [88.0, 5073.0], [88.1, 5078.0], [88.2, 5078.0], [88.3, 5080.0], [88.4, 5080.0], [88.5, 5080.0], [88.6, 5087.0], [88.7, 5087.0], [88.8, 5089.0], [88.9, 5089.0], [89.0, 5102.0], [89.1, 5102.0], [89.2, 5112.0], [89.3, 5112.0], [89.4, 5112.0], [89.5, 5112.0], [89.6, 5115.0], [89.7, 5115.0], [89.8, 5117.0], [89.9, 5117.0], [90.0, 5117.0], [90.1, 5117.0], [90.2, 5117.0], [90.3, 5118.0], [90.4, 5118.0], [90.5, 5119.0], [90.6, 5119.0], [90.7, 5123.0], [90.8, 5123.0], [90.9, 5125.0], [91.0, 5125.0], [91.1, 5127.0], [91.2, 5127.0], [91.3, 5127.0], [91.4, 5127.0], [91.5, 5138.0], [91.6, 5138.0], [91.7, 5138.0], [91.8, 5148.0], [91.9, 5148.0], [92.0, 5148.0], [92.1, 5148.0], [92.2, 5154.0], [92.3, 5154.0], [92.4, 5163.0], [92.5, 5163.0], [92.6, 5172.0], [92.7, 5172.0], [92.8, 5181.0], [92.9, 5181.0], [93.0, 5186.0], [93.1, 5186.0], [93.2, 5187.0], [93.3, 5187.0], [93.4, 5187.0], [93.5, 5187.0], [93.6, 5187.0], [93.7, 5216.0], [93.8, 5216.0], [93.9, 5229.0], [94.0, 5229.0], [94.1, 5230.0], [94.2, 5230.0], [94.3, 5231.0], [94.4, 5231.0], [94.5, 5231.0], [94.6, 5231.0], [94.7, 5252.0], [94.8, 5252.0], [94.9, 5275.0], [95.0, 5275.0], [95.1, 5275.0], [95.2, 5292.0], [95.3, 5292.0], [95.4, 5302.0], [95.5, 5302.0], [95.6, 5312.0], [95.7, 5312.0], [95.8, 5324.0], [95.9, 5324.0], [96.0, 5338.0], [96.1, 5338.0], [96.2, 5343.0], [96.3, 5343.0], [96.4, 5395.0], [96.5, 5395.0], [96.6, 5400.0], [96.7, 5400.0], [96.8, 5400.0], [96.9, 5403.0], [97.0, 5403.0], [97.1, 5421.0], [97.2, 5421.0], [97.3, 5433.0], [97.4, 5433.0], [97.5, 5451.0], [97.6, 5451.0], [97.7, 5503.0], [97.8, 5503.0], [97.9, 5575.0], [98.0, 5575.0], [98.1, 5604.0], [98.2, 5604.0], [98.3, 5613.0], [98.4, 5613.0], [98.5, 5613.0], [98.6, 5725.0], [98.7, 5725.0], [98.8, 5817.0], [98.9, 5817.0], [99.0, 5832.0], [99.1, 5832.0], [99.2, 5930.0], [99.3, 5930.0], [99.4, 6020.0], [99.5, 6020.0], [99.6, 6132.0], [99.7, 6132.0], [99.8, 6132.0], [99.9, 6132.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[0.0, 488.0], [0.1, 488.0], [0.2, 493.0], [0.3, 493.0], [0.4, 501.0], [0.5, 501.0], [0.6, 501.0], [0.7, 511.0], [0.8, 512.0], [0.9, 512.0], [1.0, 513.0], [1.1, 513.0], [1.2, 516.0], [1.3, 516.0], [1.4, 516.0], [1.5, 516.0], [1.6, 518.0], [1.7, 518.0], [1.8, 518.0], [1.9, 518.0], [2.0, 520.0], [2.1, 520.0], [2.2, 522.0], [2.3, 522.0], [2.4, 522.0], [2.5, 523.0], [2.6, 523.0], [2.7, 523.0], [2.8, 523.0], [2.9, 525.0], [3.0, 525.0], [3.1, 526.0], [3.2, 526.0], [3.3, 526.0], [3.4, 526.0], [3.5, 527.0], [3.6, 527.0], [3.7, 527.0], [3.8, 527.0], [3.9, 527.0], [4.0, 529.0], [4.1, 529.0], [4.2, 530.0], [4.3, 530.0], [4.4, 531.0], [4.5, 531.0], [4.6, 531.0], [4.7, 531.0], [4.8, 531.0], [4.9, 531.0], [5.0, 531.0], [5.1, 531.0], [5.2, 531.0], [5.3, 531.0], [5.4, 532.0], [5.5, 532.0], [5.6, 532.0], [5.7, 532.0], [5.8, 532.0], [5.9, 533.0], [6.0, 533.0], [6.1, 534.0], [6.2, 534.0], [6.3, 534.0], [6.4, 534.0], [6.5, 534.0], [6.6, 534.0], [6.7, 535.0], [6.8, 535.0], [6.9, 535.0], [7.0, 535.0], [7.1, 535.0], [7.2, 536.0], [7.3, 536.0], [7.4, 537.0], [7.5, 537.0], [7.6, 537.0], [7.7, 537.0], [7.8, 537.0], [7.9, 538.0], [8.0, 538.0], [8.1, 538.0], [8.2, 538.0], [8.3, 538.0], [8.4, 538.0], [8.5, 538.0], [8.6, 538.0], [8.7, 539.0], [8.8, 539.0], [8.9, 539.0], [9.0, 539.0], [9.1, 540.0], [9.2, 540.0], [9.3, 540.0], [9.4, 540.0], [9.5, 541.0], [9.6, 541.0], [9.7, 542.0], [9.8, 542.0], [9.9, 542.0], [10.0, 542.0], [10.1, 542.0], [10.2, 542.0], [10.3, 542.0], [10.4, 542.0], [10.5, 543.0], [10.6, 543.0], [10.7, 543.0], [10.8, 543.0], [10.9, 544.0], [11.0, 544.0], [11.1, 544.0], [11.2, 544.0], [11.3, 545.0], [11.4, 545.0], [11.5, 545.0], [11.6, 545.0], [11.7, 545.0], [11.8, 545.0], [11.9, 545.0], [12.0, 545.0], [12.1, 546.0], [12.2, 546.0], [12.3, 546.0], [12.4, 546.0], [12.5, 547.0], [12.6, 547.0], [12.7, 547.0], [12.8, 547.0], [12.9, 548.0], [13.0, 548.0], [13.1, 548.0], [13.2, 548.0], [13.3, 549.0], [13.4, 549.0], [13.5, 549.0], [13.6, 549.0], [13.7, 549.0], [13.8, 549.0], [13.9, 550.0], [14.0, 550.0], [14.1, 550.0], [14.2, 550.0], [14.3, 551.0], [14.4, 551.0], [14.5, 552.0], [14.6, 552.0], [14.7, 552.0], [14.8, 552.0], [14.9, 552.0], [15.0, 552.0], [15.1, 552.0], [15.2, 552.0], [15.3, 552.0], [15.4, 552.0], [15.5, 552.0], [15.6, 552.0], [15.7, 552.0], [15.8, 552.0], [15.9, 552.0], [16.0, 552.0], [16.1, 553.0], [16.2, 553.0], [16.3, 553.0], [16.4, 553.0], [16.5, 553.0], [16.6, 553.0], [16.7, 553.0], [16.8, 553.0], [16.9, 553.0], [17.0, 553.0], [17.1, 553.0], [17.2, 553.0], [17.3, 554.0], [17.4, 554.0], [17.5, 554.0], [17.6, 554.0], [17.7, 554.0], [17.8, 554.0], [17.9, 554.0], [18.0, 554.0], [18.1, 555.0], [18.2, 555.0], [18.3, 555.0], [18.4, 555.0], [18.5, 555.0], [18.6, 555.0], [18.7, 555.0], [18.8, 555.0], [18.9, 555.0], [19.0, 555.0], [19.1, 555.0], [19.2, 555.0], [19.3, 555.0], [19.4, 555.0], [19.5, 556.0], [19.6, 556.0], [19.7, 556.0], [19.8, 556.0], [19.9, 556.0], [20.0, 556.0], [20.1, 556.0], [20.2, 556.0], [20.3, 556.0], [20.4, 556.0], [20.5, 557.0], [20.6, 557.0], [20.7, 557.0], [20.8, 557.0], [20.9, 557.0], [21.0, 557.0], [21.1, 557.0], [21.2, 557.0], [21.3, 557.0], [21.4, 557.0], [21.5, 557.0], [21.6, 558.0], [21.7, 558.0], [21.8, 558.0], [21.9, 558.0], [22.0, 559.0], [22.1, 559.0], [22.2, 559.0], [22.3, 559.0], [22.4, 559.0], [22.5, 559.0], [22.6, 560.0], [22.7, 560.0], [22.8, 560.0], [22.9, 560.0], [23.0, 560.0], [23.1, 560.0], [23.2, 560.0], [23.3, 560.0], [23.4, 560.0], [23.5, 560.0], [23.6, 560.0], [23.7, 560.0], [23.8, 561.0], [23.9, 561.0], [24.0, 561.0], [24.1, 561.0], [24.2, 562.0], [24.3, 562.0], [24.4, 562.0], [24.5, 562.0], [24.6, 562.0], [24.7, 562.0], [24.8, 562.0], [24.9, 562.0], [25.0, 562.0], [25.1, 562.0], [25.2, 563.0], [25.3, 563.0], [25.4, 563.0], [25.5, 563.0], [25.6, 563.0], [25.7, 563.0], [25.8, 563.0], [25.9, 563.0], [26.0, 563.0], [26.1, 563.0], [26.2, 563.0], [26.3, 563.0], [26.4, 564.0], [26.5, 564.0], [26.6, 564.0], [26.7, 564.0], [26.8, 564.0], [26.9, 564.0], [27.0, 564.0], [27.1, 564.0], [27.2, 564.0], [27.3, 564.0], [27.4, 564.0], [27.5, 564.0], [27.6, 564.0], [27.7, 564.0], [27.8, 564.0], [27.9, 564.0], [28.0, 564.0], [28.1, 564.0], [28.2, 565.0], [28.3, 565.0], [28.4, 566.0], [28.5, 566.0], [28.6, 566.0], [28.7, 566.0], [28.8, 566.0], [28.9, 566.0], [29.0, 566.0], [29.1, 566.0], [29.2, 566.0], [29.3, 566.0], [29.4, 567.0], [29.5, 567.0], [29.6, 568.0], [29.7, 568.0], [29.8, 568.0], [29.9, 568.0], [30.0, 568.0], [30.1, 568.0], [30.2, 568.0], [30.3, 568.0], [30.4, 569.0], [30.5, 569.0], [30.6, 569.0], [30.7, 569.0], [30.8, 569.0], [30.9, 569.0], [31.0, 569.0], [31.1, 569.0], [31.2, 569.0], [31.3, 569.0], [31.4, 569.0], [31.5, 569.0], [31.6, 570.0], [31.7, 570.0], [31.8, 570.0], [31.9, 570.0], [32.0, 570.0], [32.1, 570.0], [32.2, 571.0], [32.3, 571.0], [32.4, 571.0], [32.5, 571.0], [32.6, 571.0], [32.7, 571.0], [32.8, 571.0], [32.9, 571.0], [33.0, 571.0], [33.1, 571.0], [33.2, 572.0], [33.3, 572.0], [33.4, 572.0], [33.5, 572.0], [33.6, 572.0], [33.7, 572.0], [33.8, 572.0], [33.9, 572.0], [34.0, 572.0], [34.1, 572.0], [34.2, 572.0], [34.3, 572.0], [34.4, 572.0], [34.5, 572.0], [34.6, 573.0], [34.7, 573.0], [34.8, 573.0], [34.9, 573.0], [35.0, 573.0], [35.1, 573.0], [35.2, 573.0], [35.3, 573.0], [35.4, 574.0], [35.5, 574.0], [35.6, 574.0], [35.7, 574.0], [35.8, 574.0], [35.9, 574.0], [36.0, 574.0], [36.1, 574.0], [36.2, 575.0], [36.3, 575.0], [36.4, 575.0], [36.5, 575.0], [36.6, 575.0], [36.7, 575.0], [36.8, 575.0], [36.9, 575.0], [37.0, 575.0], [37.1, 575.0], [37.2, 575.0], [37.3, 575.0], [37.4, 575.0], [37.5, 575.0], [37.6, 575.0], [37.7, 575.0], [37.8, 575.0], [37.9, 575.0], [38.0, 575.0], [38.1, 575.0], [38.2, 575.0], [38.3, 575.0], [38.4, 575.0], [38.5, 575.0], [38.6, 575.0], [38.7, 575.0], [38.8, 575.0], [38.9, 575.0], [39.0, 575.0], [39.1, 575.0], [39.2, 576.0], [39.3, 576.0], [39.4, 576.0], [39.5, 576.0], [39.6, 576.0], [39.7, 576.0], [39.8, 576.0], [39.9, 576.0], [40.0, 577.0], [40.1, 577.0], [40.2, 577.0], [40.3, 577.0], [40.4, 577.0], [40.5, 577.0], [40.6, 577.0], [40.7, 577.0], [40.8, 577.0], [40.9, 577.0], [41.0, 578.0], [41.1, 578.0], [41.2, 578.0], [41.3, 578.0], [41.4, 578.0], [41.5, 578.0], [41.6, 578.0], [41.7, 578.0], [41.8, 578.0], [41.9, 578.0], [42.0, 578.0], [42.1, 578.0], [42.2, 579.0], [42.3, 579.0], [42.4, 579.0], [42.5, 579.0], [42.6, 579.0], [42.7, 579.0], [42.8, 579.0], [42.9, 579.0], [43.0, 579.0], [43.1, 579.0], [43.2, 580.0], [43.3, 580.0], [43.4, 580.0], [43.5, 580.0], [43.6, 580.0], [43.7, 580.0], [43.8, 580.0], [43.9, 580.0], [44.0, 580.0], [44.1, 580.0], [44.2, 581.0], [44.3, 581.0], [44.4, 581.0], [44.5, 581.0], [44.6, 581.0], [44.7, 581.0], [44.8, 582.0], [44.9, 582.0], [45.0, 582.0], [45.1, 582.0], [45.2, 582.0], [45.3, 582.0], [45.4, 582.0], [45.5, 582.0], [45.6, 582.0], [45.7, 582.0], [45.8, 582.0], [45.9, 582.0], [46.0, 582.0], [46.1, 582.0], [46.2, 582.0], [46.3, 582.0], [46.4, 583.0], [46.5, 583.0], [46.6, 583.0], [46.7, 583.0], [46.8, 583.0], [46.9, 583.0], [47.0, 583.0], [47.1, 583.0], [47.2, 584.0], [47.3, 584.0], [47.4, 584.0], [47.5, 584.0], [47.6, 584.0], [47.7, 584.0], [47.8, 584.0], [47.9, 584.0], [48.0, 585.0], [48.1, 585.0], [48.2, 586.0], [48.3, 586.0], [48.4, 586.0], [48.5, 586.0], [48.6, 587.0], [48.7, 587.0], [48.8, 587.0], [48.9, 587.0], [49.0, 587.0], [49.1, 587.0], [49.2, 587.0], [49.3, 587.0], [49.4, 587.0], [49.5, 587.0], [49.6, 588.0], [49.7, 588.0], [49.8, 588.0], [49.9, 588.0], [50.0, 588.0], [50.1, 588.0], [50.2, 588.0], [50.3, 588.0], [50.4, 588.0], [50.5, 588.0], [50.6, 588.0], [50.7, 588.0], [50.8, 589.0], [50.9, 589.0], [51.0, 589.0], [51.1, 589.0], [51.2, 589.0], [51.3, 589.0], [51.4, 589.0], [51.5, 589.0], [51.6, 589.0], [51.7, 589.0], [51.8, 589.0], [51.9, 589.0], [52.0, 589.0], [52.1, 589.0], [52.2, 589.0], [52.3, 589.0], [52.4, 589.0], [52.5, 589.0], [52.6, 590.0], [52.7, 590.0], [52.8, 590.0], [52.9, 590.0], [53.0, 591.0], [53.1, 591.0], [53.2, 591.0], [53.3, 591.0], [53.4, 591.0], [53.5, 591.0], [53.6, 591.0], [53.7, 591.0], [53.8, 591.0], [53.9, 591.0], [54.0, 591.0], [54.1, 591.0], [54.2, 591.0], [54.3, 591.0], [54.4, 592.0], [54.5, 592.0], [54.6, 592.0], [54.7, 592.0], [54.8, 592.0], [54.9, 592.0], [55.0, 593.0], [55.1, 593.0], [55.2, 593.0], [55.3, 593.0], [55.4, 593.0], [55.5, 593.0], [55.6, 593.0], [55.7, 593.0], [55.8, 594.0], [55.9, 594.0], [56.0, 595.0], [56.1, 595.0], [56.2, 595.0], [56.3, 595.0], [56.4, 595.0], [56.5, 595.0], [56.6, 595.0], [56.7, 595.0], [56.8, 595.0], [56.9, 595.0], [57.0, 596.0], [57.1, 596.0], [57.2, 596.0], [57.3, 596.0], [57.4, 596.0], [57.5, 596.0], [57.6, 596.0], [57.7, 596.0], [57.8, 597.0], [57.9, 597.0], [58.0, 597.0], [58.1, 597.0], [58.2, 597.0], [58.3, 597.0], [58.4, 597.0], [58.5, 597.0], [58.6, 597.0], [58.7, 597.0], [58.8, 598.0], [58.9, 598.0], [59.0, 598.0], [59.1, 598.0], [59.2, 598.0], [59.3, 598.0], [59.4, 598.0], [59.5, 598.0], [59.6, 599.0], [59.7, 599.0], [59.8, 599.0], [59.9, 599.0], [60.0, 599.0], [60.1, 599.0], [60.2, 600.0], [60.3, 600.0], [60.4, 600.0], [60.5, 600.0], [60.6, 600.0], [60.7, 600.0], [60.8, 601.0], [60.9, 601.0], [61.0, 601.0], [61.1, 601.0], [61.2, 601.0], [61.3, 601.0], [61.4, 601.0], [61.5, 601.0], [61.6, 601.0], [61.7, 601.0], [61.8, 602.0], [61.9, 602.0], [62.0, 602.0], [62.1, 602.0], [62.2, 603.0], [62.3, 603.0], [62.4, 603.0], [62.5, 603.0], [62.6, 603.0], [62.7, 603.0], [62.8, 604.0], [62.9, 604.0], [63.0, 604.0], [63.1, 604.0], [63.2, 604.0], [63.3, 604.0], [63.4, 604.0], [63.5, 604.0], [63.6, 604.0], [63.7, 604.0], [63.8, 605.0], [63.9, 605.0], [64.0, 605.0], [64.1, 605.0], [64.2, 606.0], [64.3, 606.0], [64.4, 606.0], [64.5, 606.0], [64.6, 606.0], [64.7, 606.0], [64.8, 606.0], [64.9, 606.0], [65.0, 606.0], [65.1, 606.0], [65.2, 606.0], [65.3, 606.0], [65.4, 607.0], [65.5, 607.0], [65.6, 607.0], [65.7, 607.0], [65.8, 607.0], [65.9, 607.0], [66.0, 607.0], [66.1, 607.0], [66.2, 607.0], [66.3, 607.0], [66.4, 608.0], [66.5, 608.0], [66.6, 608.0], [66.7, 608.0], [66.8, 608.0], [66.9, 608.0], [67.0, 608.0], [67.1, 608.0], [67.2, 608.0], [67.3, 608.0], [67.4, 608.0], [67.5, 608.0], [67.6, 609.0], [67.7, 609.0], [67.8, 609.0], [67.9, 609.0], [68.0, 609.0], [68.1, 609.0], [68.2, 609.0], [68.3, 609.0], [68.4, 610.0], [68.5, 610.0], [68.6, 611.0], [68.7, 611.0], [68.8, 611.0], [68.9, 611.0], [69.0, 611.0], [69.1, 611.0], [69.2, 612.0], [69.3, 612.0], [69.4, 612.0], [69.5, 612.0], [69.6, 612.0], [69.7, 612.0], [69.8, 612.0], [69.9, 612.0], [70.0, 613.0], [70.1, 613.0], [70.2, 613.0], [70.3, 613.0], [70.4, 613.0], [70.5, 613.0], [70.6, 613.0], [70.7, 613.0], [70.8, 614.0], [70.9, 614.0], [71.0, 615.0], [71.1, 615.0], [71.2, 615.0], [71.3, 615.0], [71.4, 615.0], [71.5, 615.0], [71.6, 615.0], [71.7, 615.0], [71.8, 616.0], [71.9, 616.0], [72.0, 616.0], [72.1, 616.0], [72.2, 616.0], [72.3, 616.0], [72.4, 616.0], [72.5, 616.0], [72.6, 616.0], [72.7, 616.0], [72.8, 617.0], [72.9, 617.0], [73.0, 617.0], [73.1, 617.0], [73.2, 617.0], [73.3, 617.0], [73.4, 618.0], [73.5, 618.0], [73.6, 618.0], [73.7, 618.0], [73.8, 618.0], [73.9, 618.0], [74.0, 618.0], [74.1, 618.0], [74.2, 619.0], [74.3, 619.0], [74.4, 619.0], [74.5, 619.0], [74.6, 619.0], [74.7, 619.0], [74.8, 620.0], [74.9, 620.0], [75.0, 620.0], [75.1, 620.0], [75.2, 620.0], [75.3, 620.0], [75.4, 620.0], [75.5, 620.0], [75.6, 621.0], [75.7, 621.0], [75.8, 621.0], [75.9, 621.0], [76.0, 622.0], [76.1, 622.0], [76.2, 622.0], [76.3, 622.0], [76.4, 623.0], [76.5, 623.0], [76.6, 623.0], [76.7, 623.0], [76.8, 623.0], [76.9, 623.0], [77.0, 623.0], [77.1, 623.0], [77.2, 624.0], [77.3, 624.0], [77.4, 624.0], [77.5, 624.0], [77.6, 626.0], [77.7, 626.0], [77.8, 626.0], [77.9, 626.0], [78.0, 626.0], [78.1, 626.0], [78.2, 627.0], [78.3, 627.0], [78.4, 627.0], [78.5, 627.0], [78.6, 628.0], [78.7, 628.0], [78.8, 628.0], [78.9, 628.0], [79.0, 628.0], [79.1, 628.0], [79.2, 628.0], [79.3, 628.0], [79.4, 629.0], [79.5, 629.0], [79.6, 629.0], [79.7, 629.0], [79.8, 629.0], [79.9, 629.0], [80.0, 629.0], [80.1, 629.0], [80.2, 630.0], [80.3, 630.0], [80.4, 630.0], [80.5, 630.0], [80.6, 630.0], [80.7, 630.0], [80.8, 630.0], [80.9, 630.0], [81.0, 631.0], [81.1, 631.0], [81.2, 632.0], [81.3, 632.0], [81.4, 632.0], [81.5, 632.0], [81.6, 633.0], [81.7, 633.0], [81.8, 635.0], [81.9, 635.0], [82.0, 635.0], [82.1, 635.0], [82.2, 636.0], [82.3, 636.0], [82.4, 637.0], [82.5, 637.0], [82.6, 637.0], [82.7, 637.0], [82.8, 640.0], [82.9, 640.0], [83.0, 640.0], [83.1, 640.0], [83.2, 640.0], [83.3, 640.0], [83.4, 641.0], [83.5, 641.0], [83.6, 641.0], [83.7, 641.0], [83.8, 641.0], [83.9, 641.0], [84.0, 642.0], [84.1, 642.0], [84.2, 644.0], [84.3, 644.0], [84.4, 645.0], [84.5, 645.0], [84.6, 645.0], [84.7, 645.0], [84.8, 646.0], [84.9, 646.0], [85.0, 647.0], [85.1, 647.0], [85.2, 647.0], [85.3, 647.0], [85.4, 647.0], [85.5, 647.0], [85.6, 648.0], [85.7, 648.0], [85.8, 650.0], [85.9, 650.0], [86.0, 653.0], [86.1, 653.0], [86.2, 654.0], [86.3, 654.0], [86.4, 654.0], [86.5, 654.0], [86.6, 654.0], [86.7, 654.0], [86.8, 654.0], [86.9, 654.0], [87.0, 655.0], [87.1, 655.0], [87.2, 655.0], [87.3, 655.0], [87.4, 656.0], [87.5, 656.0], [87.6, 656.0], [87.7, 657.0], [87.8, 657.0], [87.9, 659.0], [88.0, 659.0], [88.1, 660.0], [88.2, 660.0], [88.3, 661.0], [88.4, 661.0], [88.5, 664.0], [88.6, 664.0], [88.7, 665.0], [88.8, 665.0], [88.9, 665.0], [89.0, 665.0], [89.1, 667.0], [89.2, 667.0], [89.3, 667.0], [89.4, 667.0], [89.5, 667.0], [89.6, 667.0], [89.7, 670.0], [89.8, 670.0], [89.9, 671.0], [90.0, 671.0], [90.1, 671.0], [90.2, 671.0], [90.3, 674.0], [90.4, 674.0], [90.5, 675.0], [90.6, 675.0], [90.7, 675.0], [90.8, 675.0], [90.9, 678.0], [91.0, 678.0], [91.1, 679.0], [91.2, 679.0], [91.3, 679.0], [91.4, 679.0], [91.5, 681.0], [91.6, 681.0], [91.7, 682.0], [91.8, 682.0], [91.9, 682.0], [92.0, 682.0], [92.1, 684.0], [92.2, 684.0], [92.3, 684.0], [92.4, 684.0], [92.5, 684.0], [92.6, 684.0], [92.7, 689.0], [92.8, 689.0], [92.9, 693.0], [93.0, 693.0], [93.1, 694.0], [93.2, 694.0], [93.3, 695.0], [93.4, 695.0], [93.5, 699.0], [93.6, 699.0], [93.7, 702.0], [93.8, 702.0], [93.9, 702.0], [94.0, 702.0], [94.1, 702.0], [94.2, 702.0], [94.3, 704.0], [94.4, 704.0], [94.5, 710.0], [94.6, 710.0], [94.7, 711.0], [94.8, 711.0], [94.9, 712.0], [95.0, 712.0], [95.1, 726.0], [95.2, 726.0], [95.3, 728.0], [95.4, 728.0], [95.5, 730.0], [95.6, 730.0], [95.7, 732.0], [95.8, 732.0], [95.9, 734.0], [96.0, 734.0], [96.1, 746.0], [96.2, 746.0], [96.3, 746.0], [96.4, 746.0], [96.5, 754.0], [96.6, 754.0], [96.7, 765.0], [96.8, 765.0], [96.9, 769.0], [97.0, 769.0], [97.1, 772.0], [97.2, 772.0], [97.3, 775.0], [97.4, 775.0], [97.5, 801.0], [97.6, 801.0], [97.7, 828.0], [97.8, 828.0], [97.9, 834.0], [98.0, 834.0], [98.1, 845.0], [98.2, 845.0], [98.3, 852.0], [98.4, 852.0], [98.5, 866.0], [98.6, 866.0], [98.7, 871.0], [98.8, 871.0], [98.9, 919.0], [99.0, 919.0], [99.1, 936.0], [99.2, 936.0], [99.3, 1119.0], [99.4, 1119.0], [99.5, 1233.0], [99.6, 1233.0], [99.7, 1250.0], [99.8, 1250.0], [99.9, 1559.0], [100.0, 1559.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 3175.0], [0.1, 3175.0], [0.2, 3175.0], [0.3, 3243.0], [0.4, 3243.0], [0.5, 3262.0], [0.6, 3262.0], [0.7, 3275.0], [0.8, 3275.0], [0.9, 3275.0], [1.0, 3278.0], [1.1, 3278.0], [1.2, 3283.0], [1.3, 3283.0], [1.4, 3293.0], [1.5, 3293.0], [1.6, 3297.0], [1.7, 3297.0], [1.8, 3297.0], [1.9, 3309.0], [2.0, 3309.0], [2.1, 3316.0], [2.2, 3316.0], [2.3, 3319.0], [2.4, 3319.0], [2.5, 3342.0], [2.6, 3342.0], [2.7, 3342.0], [2.8, 3362.0], [2.9, 3362.0], [3.0, 3364.0], [3.1, 3364.0], [3.2, 3374.0], [3.3, 3374.0], [3.4, 3374.0], [3.5, 3380.0], [3.6, 3380.0], [3.7, 3386.0], [3.8, 3386.0], [3.9, 3399.0], [4.0, 3399.0], [4.1, 3402.0], [4.2, 3402.0], [4.3, 3402.0], [4.4, 3407.0], [4.5, 3407.0], [4.6, 3408.0], [4.7, 3408.0], [4.8, 3419.0], [4.9, 3419.0], [5.0, 3419.0], [5.1, 3419.0], [5.2, 3419.0], [5.3, 3421.0], [5.4, 3421.0], [5.5, 3424.0], [5.6, 3424.0], [5.7, 3430.0], [5.8, 3430.0], [5.9, 3430.0], [6.0, 3439.0], [6.1, 3439.0], [6.2, 3440.0], [6.3, 3440.0], [6.4, 3447.0], [6.5, 3447.0], [6.6, 3448.0], [6.7, 3448.0], [6.8, 3448.0], [6.9, 3451.0], [7.0, 3451.0], [7.1, 3452.0], [7.2, 3452.0], [7.3, 3456.0], [7.4, 3456.0], [7.5, 3456.0], [7.6, 3457.0], [7.7, 3457.0], [7.8, 3457.0], [7.9, 3457.0], [8.0, 3459.0], [8.1, 3459.0], [8.2, 3461.0], [8.3, 3461.0], [8.4, 3461.0], [8.5, 3464.0], [8.6, 3464.0], [8.7, 3467.0], [8.8, 3467.0], [8.9, 3469.0], [9.0, 3469.0], [9.1, 3469.0], [9.2, 3469.0], [9.3, 3469.0], [9.4, 3471.0], [9.5, 3471.0], [9.6, 3472.0], [9.7, 3472.0], [9.8, 3473.0], [9.9, 3473.0], [10.0, 3474.0], [10.1, 3474.0], [10.2, 3474.0], [10.3, 3479.0], [10.4, 3479.0], [10.5, 3481.0], [10.6, 3481.0], [10.7, 3482.0], [10.8, 3482.0], [10.9, 3482.0], [11.0, 3483.0], [11.1, 3483.0], [11.2, 3483.0], [11.3, 3483.0], [11.4, 3489.0], [11.5, 3489.0], [11.6, 3490.0], [11.7, 3490.0], [11.8, 3490.0], [11.9, 3492.0], [12.0, 3492.0], [12.1, 3493.0], [12.2, 3493.0], [12.3, 3495.0], [12.4, 3495.0], [12.5, 3496.0], [12.6, 3496.0], [12.7, 3496.0], [12.8, 3502.0], [12.9, 3502.0], [13.0, 3503.0], [13.1, 3503.0], [13.2, 3509.0], [13.3, 3509.0], [13.4, 3509.0], [13.5, 3511.0], [13.6, 3511.0], [13.7, 3512.0], [13.8, 3512.0], [13.9, 3512.0], [14.0, 3512.0], [14.1, 3513.0], [14.2, 3513.0], [14.3, 3513.0], [14.4, 3514.0], [14.5, 3514.0], [14.6, 3515.0], [14.7, 3515.0], [14.8, 3516.0], [14.9, 3516.0], [15.0, 3517.0], [15.1, 3517.0], [15.2, 3517.0], [15.3, 3517.0], [15.4, 3517.0], [15.5, 3519.0], [15.6, 3519.0], [15.7, 3519.0], [15.8, 3519.0], [15.9, 3519.0], [16.0, 3521.0], [16.1, 3521.0], [16.2, 3521.0], [16.3, 3521.0], [16.4, 3523.0], [16.5, 3523.0], [16.6, 3524.0], [16.7, 3524.0], [16.8, 3524.0], [16.9, 3524.0], [17.0, 3524.0], [17.1, 3524.0], [17.2, 3524.0], [17.3, 3527.0], [17.4, 3527.0], [17.5, 3529.0], [17.6, 3529.0], [17.7, 3529.0], [17.8, 3531.0], [17.9, 3531.0], [18.0, 3532.0], [18.1, 3532.0], [18.2, 3533.0], [18.3, 3533.0], [18.4, 3533.0], [18.5, 3534.0], [18.6, 3534.0], [18.7, 3535.0], [18.8, 3535.0], [18.9, 3537.0], [19.0, 3537.0], [19.1, 3537.0], [19.2, 3537.0], [19.3, 3537.0], [19.4, 3540.0], [19.5, 3540.0], [19.6, 3541.0], [19.7, 3541.0], [19.8, 3543.0], [19.9, 3543.0], [20.0, 3543.0], [20.1, 3543.0], [20.2, 3543.0], [20.3, 3543.0], [20.4, 3543.0], [20.5, 3544.0], [20.6, 3544.0], [20.7, 3544.0], [20.8, 3544.0], [20.9, 3544.0], [21.0, 3545.0], [21.1, 3545.0], [21.2, 3547.0], [21.3, 3547.0], [21.4, 3548.0], [21.5, 3548.0], [21.6, 3548.0], [21.7, 3548.0], [21.8, 3548.0], [21.9, 3548.0], [22.0, 3548.0], [22.1, 3549.0], [22.2, 3549.0], [22.3, 3550.0], [22.4, 3550.0], [22.5, 3553.0], [22.6, 3553.0], [22.7, 3553.0], [22.8, 3555.0], [22.9, 3555.0], [23.0, 3556.0], [23.1, 3556.0], [23.2, 3559.0], [23.3, 3559.0], [23.4, 3559.0], [23.5, 3561.0], [23.6, 3561.0], [23.7, 3561.0], [23.8, 3561.0], [23.9, 3563.0], [24.0, 3563.0], [24.1, 3563.0], [24.2, 3563.0], [24.3, 3563.0], [24.4, 3563.0], [24.5, 3563.0], [24.6, 3569.0], [24.7, 3569.0], [24.8, 3571.0], [24.9, 3571.0], [25.0, 3571.0], [25.1, 3571.0], [25.2, 3571.0], [25.3, 3571.0], [25.4, 3571.0], [25.5, 3572.0], [25.6, 3572.0], [25.7, 3576.0], [25.8, 3576.0], [25.9, 3576.0], [26.0, 3578.0], [26.1, 3578.0], [26.2, 3578.0], [26.3, 3578.0], [26.4, 3582.0], [26.5, 3582.0], [26.6, 3582.0], [26.7, 3582.0], [26.8, 3582.0], [26.9, 3582.0], [27.0, 3582.0], [27.1, 3583.0], [27.2, 3583.0], [27.3, 3584.0], [27.4, 3584.0], [27.5, 3584.0], [27.6, 3584.0], [27.7, 3584.0], [27.8, 3584.0], [27.9, 3584.0], [28.0, 3587.0], [28.1, 3587.0], [28.2, 3587.0], [28.3, 3587.0], [28.4, 3587.0], [28.5, 3588.0], [28.6, 3588.0], [28.7, 3589.0], [28.8, 3589.0], [28.9, 3593.0], [29.0, 3593.0], [29.1, 3598.0], [29.2, 3598.0], [29.3, 3598.0], [29.4, 3600.0], [29.5, 3600.0], [29.6, 3600.0], [29.7, 3600.0], [29.8, 3601.0], [29.9, 3601.0], [30.0, 3601.0], [30.1, 3601.0], [30.2, 3601.0], [30.3, 3601.0], [30.4, 3601.0], [30.5, 3602.0], [30.6, 3602.0], [30.7, 3602.0], [30.8, 3602.0], [30.9, 3602.0], [31.0, 3610.0], [31.1, 3610.0], [31.2, 3610.0], [31.3, 3610.0], [31.4, 3611.0], [31.5, 3611.0], [31.6, 3612.0], [31.7, 3612.0], [31.8, 3612.0], [31.9, 3617.0], [32.0, 3617.0], [32.1, 3617.0], [32.2, 3617.0], [32.3, 3618.0], [32.4, 3618.0], [32.5, 3618.0], [32.6, 3618.0], [32.7, 3618.0], [32.8, 3619.0], [32.9, 3619.0], [33.0, 3620.0], [33.1, 3620.0], [33.2, 3620.0], [33.3, 3620.0], [33.4, 3620.0], [33.5, 3620.0], [33.6, 3620.0], [33.7, 3620.0], [33.8, 3620.0], [33.9, 3621.0], [34.0, 3621.0], [34.1, 3621.0], [34.2, 3621.0], [34.3, 3621.0], [34.4, 3623.0], [34.5, 3623.0], [34.6, 3623.0], [34.7, 3623.0], [34.8, 3625.0], [34.9, 3625.0], [35.0, 3625.0], [35.1, 3625.0], [35.2, 3625.0], [35.3, 3627.0], [35.4, 3627.0], [35.5, 3628.0], [35.6, 3628.0], [35.7, 3628.0], [35.8, 3628.0], [35.9, 3628.0], [36.0, 3628.0], [36.1, 3628.0], [36.2, 3630.0], [36.3, 3630.0], [36.4, 3630.0], [36.5, 3630.0], [36.6, 3630.0], [36.7, 3630.0], [36.8, 3630.0], [36.9, 3630.0], [37.0, 3630.0], [37.1, 3633.0], [37.2, 3633.0], [37.3, 3635.0], [37.4, 3635.0], [37.5, 3637.0], [37.6, 3637.0], [37.7, 3637.0], [37.8, 3637.0], [37.9, 3637.0], [38.0, 3639.0], [38.1, 3639.0], [38.2, 3639.0], [38.3, 3639.0], [38.4, 3639.0], [38.5, 3640.0], [38.6, 3640.0], [38.7, 3642.0], [38.8, 3642.0], [38.9, 3642.0], [39.0, 3642.0], [39.1, 3644.0], [39.2, 3644.0], [39.3, 3644.0], [39.4, 3644.0], [39.5, 3644.0], [39.6, 3644.0], [39.7, 3644.0], [39.8, 3645.0], [39.9, 3645.0], [40.0, 3646.0], [40.1, 3646.0], [40.2, 3646.0], [40.3, 3646.0], [40.4, 3646.0], [40.5, 3650.0], [40.6, 3650.0], [40.7, 3650.0], [40.8, 3650.0], [40.9, 3650.0], [41.0, 3652.0], [41.1, 3652.0], [41.2, 3653.0], [41.3, 3653.0], [41.4, 3654.0], [41.5, 3654.0], [41.6, 3655.0], [41.7, 3655.0], [41.8, 3655.0], [41.9, 3655.0], [42.0, 3655.0], [42.1, 3655.0], [42.2, 3655.0], [42.3, 3656.0], [42.4, 3656.0], [42.5, 3656.0], [42.6, 3656.0], [42.7, 3656.0], [42.8, 3656.0], [42.9, 3656.0], [43.0, 3656.0], [43.1, 3656.0], [43.2, 3657.0], [43.3, 3657.0], [43.4, 3657.0], [43.5, 3657.0], [43.6, 3657.0], [43.7, 3659.0], [43.8, 3659.0], [43.9, 3661.0], [44.0, 3661.0], [44.1, 3661.0], [44.2, 3661.0], [44.3, 3661.0], [44.4, 3661.0], [44.5, 3661.0], [44.6, 3662.0], [44.7, 3662.0], [44.8, 3663.0], [44.9, 3663.0], [45.0, 3665.0], [45.1, 3665.0], [45.2, 3665.0], [45.3, 3665.0], [45.4, 3665.0], [45.5, 3667.0], [45.6, 3667.0], [45.7, 3670.0], [45.8, 3670.0], [45.9, 3670.0], [46.0, 3673.0], [46.1, 3673.0], [46.2, 3673.0], [46.3, 3673.0], [46.4, 3673.0], [46.5, 3673.0], [46.6, 3673.0], [46.7, 3673.0], [46.8, 3673.0], [46.9, 3674.0], [47.0, 3674.0], [47.1, 3674.0], [47.2, 3674.0], [47.3, 3674.0], [47.4, 3674.0], [47.5, 3678.0], [47.6, 3678.0], [47.7, 3678.0], [47.8, 3680.0], [47.9, 3680.0], [48.0, 3681.0], [48.1, 3681.0], [48.2, 3683.0], [48.3, 3683.0], [48.4, 3683.0], [48.5, 3685.0], [48.6, 3685.0], [48.7, 3686.0], [48.8, 3686.0], [48.9, 3687.0], [49.0, 3687.0], [49.1, 3687.0], [49.2, 3687.0], [49.3, 3687.0], [49.4, 3687.0], [49.5, 3687.0], [49.6, 3688.0], [49.7, 3688.0], [49.8, 3689.0], [49.9, 3689.0], [50.0, 3690.0], [50.1, 3690.0], [50.2, 3690.0], [50.3, 3692.0], [50.4, 3692.0], [50.5, 3693.0], [50.6, 3693.0], [50.7, 3695.0], [50.8, 3695.0], [50.9, 3695.0], [51.0, 3697.0], [51.1, 3697.0], [51.2, 3698.0], [51.3, 3698.0], [51.4, 3699.0], [51.5, 3699.0], [51.6, 3700.0], [51.7, 3700.0], [51.8, 3700.0], [51.9, 3700.0], [52.0, 3700.0], [52.1, 3701.0], [52.2, 3701.0], [52.3, 3703.0], [52.4, 3703.0], [52.5, 3705.0], [52.6, 3705.0], [52.7, 3705.0], [52.8, 3706.0], [52.9, 3706.0], [53.0, 3706.0], [53.1, 3706.0], [53.2, 3707.0], [53.3, 3707.0], [53.4, 3707.0], [53.5, 3707.0], [53.6, 3707.0], [53.7, 3709.0], [53.8, 3709.0], [53.9, 3711.0], [54.0, 3711.0], [54.1, 3713.0], [54.2, 3713.0], [54.3, 3713.0], [54.4, 3714.0], [54.5, 3714.0], [54.6, 3715.0], [54.7, 3715.0], [54.8, 3718.0], [54.9, 3718.0], [55.0, 3719.0], [55.1, 3719.0], [55.2, 3719.0], [55.3, 3720.0], [55.4, 3720.0], [55.5, 3720.0], [55.6, 3720.0], [55.7, 3721.0], [55.8, 3721.0], [55.9, 3721.0], [56.0, 3722.0], [56.1, 3722.0], [56.2, 3722.0], [56.3, 3722.0], [56.4, 3726.0], [56.5, 3726.0], [56.6, 3726.0], [56.7, 3726.0], [56.8, 3726.0], [56.9, 3726.0], [57.0, 3726.0], [57.1, 3727.0], [57.2, 3727.0], [57.3, 3728.0], [57.4, 3728.0], [57.5, 3729.0], [57.6, 3729.0], [57.7, 3729.0], [57.8, 3729.0], [57.9, 3729.0], [58.0, 3729.0], [58.1, 3729.0], [58.2, 3730.0], [58.3, 3730.0], [58.4, 3730.0], [58.5, 3734.0], [58.6, 3734.0], [58.7, 3734.0], [58.8, 3734.0], [58.9, 3734.0], [59.0, 3734.0], [59.1, 3736.0], [59.2, 3736.0], [59.3, 3736.0], [59.4, 3737.0], [59.5, 3737.0], [59.6, 3739.0], [59.7, 3739.0], [59.8, 3740.0], [59.9, 3740.0], [60.0, 3740.0], [60.1, 3740.0], [60.2, 3740.0], [60.3, 3740.0], [60.4, 3740.0], [60.5, 3741.0], [60.6, 3741.0], [60.7, 3742.0], [60.8, 3742.0], [60.9, 3742.0], [61.0, 3743.0], [61.1, 3743.0], [61.2, 3743.0], [61.3, 3743.0], [61.4, 3745.0], [61.5, 3745.0], [61.6, 3745.0], [61.7, 3745.0], [61.8, 3745.0], [61.9, 3746.0], [62.0, 3746.0], [62.1, 3746.0], [62.2, 3746.0], [62.3, 3748.0], [62.4, 3748.0], [62.5, 3748.0], [62.6, 3748.0], [62.7, 3748.0], [62.8, 3750.0], [62.9, 3750.0], [63.0, 3751.0], [63.1, 3751.0], [63.2, 3752.0], [63.3, 3752.0], [63.4, 3752.0], [63.5, 3753.0], [63.6, 3753.0], [63.7, 3754.0], [63.8, 3754.0], [63.9, 3754.0], [64.0, 3754.0], [64.1, 3757.0], [64.2, 3757.0], [64.3, 3757.0], [64.4, 3759.0], [64.5, 3759.0], [64.6, 3759.0], [64.7, 3759.0], [64.8, 3762.0], [64.9, 3762.0], [65.0, 3764.0], [65.1, 3764.0], [65.2, 3764.0], [65.3, 3766.0], [65.4, 3766.0], [65.5, 3767.0], [65.6, 3767.0], [65.7, 3768.0], [65.8, 3768.0], [65.9, 3768.0], [66.0, 3768.0], [66.1, 3768.0], [66.2, 3770.0], [66.3, 3770.0], [66.4, 3771.0], [66.5, 3771.0], [66.6, 3772.0], [66.7, 3772.0], [66.8, 3772.0], [66.9, 3775.0], [67.0, 3775.0], [67.1, 3776.0], [67.2, 3776.0], [67.3, 3777.0], [67.4, 3777.0], [67.5, 3778.0], [67.6, 3778.0], [67.7, 3778.0], [67.8, 3778.0], [67.9, 3778.0], [68.0, 3779.0], [68.1, 3779.0], [68.2, 3780.0], [68.3, 3780.0], [68.4, 3780.0], [68.5, 3784.0], [68.6, 3784.0], [68.7, 3787.0], [68.8, 3787.0], [68.9, 3787.0], [69.0, 3787.0], [69.1, 3787.0], [69.2, 3787.0], [69.3, 3787.0], [69.4, 3789.0], [69.5, 3789.0], [69.6, 3790.0], [69.7, 3790.0], [69.8, 3790.0], [69.9, 3790.0], [70.0, 3791.0], [70.1, 3791.0], [70.2, 3791.0], [70.3, 3791.0], [70.4, 3791.0], [70.5, 3795.0], [70.6, 3795.0], [70.7, 3796.0], [70.8, 3796.0], [70.9, 3796.0], [71.0, 3796.0], [71.1, 3796.0], [71.2, 3797.0], [71.3, 3797.0], [71.4, 3797.0], [71.5, 3797.0], [71.6, 3798.0], [71.7, 3798.0], [71.8, 3798.0], [71.9, 3799.0], [72.0, 3799.0], [72.1, 3800.0], [72.2, 3800.0], [72.3, 3801.0], [72.4, 3801.0], [72.5, 3801.0], [72.6, 3803.0], [72.7, 3803.0], [72.8, 3804.0], [72.9, 3804.0], [73.0, 3805.0], [73.1, 3805.0], [73.2, 3808.0], [73.3, 3808.0], [73.4, 3808.0], [73.5, 3810.0], [73.6, 3810.0], [73.7, 3812.0], [73.8, 3812.0], [73.9, 3812.0], [74.0, 3812.0], [74.1, 3814.0], [74.2, 3814.0], [74.3, 3814.0], [74.4, 3816.0], [74.5, 3816.0], [74.6, 3816.0], [74.7, 3816.0], [74.8, 3817.0], [74.9, 3817.0], [75.0, 3817.0], [75.1, 3817.0], [75.2, 3817.0], [75.3, 3818.0], [75.4, 3818.0], [75.5, 3819.0], [75.6, 3819.0], [75.7, 3819.0], [75.8, 3819.0], [75.9, 3819.0], [76.0, 3822.0], [76.1, 3822.0], [76.2, 3822.0], [76.3, 3822.0], [76.4, 3824.0], [76.5, 3824.0], [76.6, 3826.0], [76.7, 3826.0], [76.8, 3826.0], [76.9, 3828.0], [77.0, 3828.0], [77.1, 3829.0], [77.2, 3829.0], [77.3, 3830.0], [77.4, 3830.0], [77.5, 3830.0], [77.6, 3836.0], [77.7, 3836.0], [77.8, 3841.0], [77.9, 3841.0], [78.0, 3841.0], [78.1, 3841.0], [78.2, 3847.0], [78.3, 3847.0], [78.4, 3847.0], [78.5, 3848.0], [78.6, 3848.0], [78.7, 3850.0], [78.8, 3850.0], [78.9, 3855.0], [79.0, 3855.0], [79.1, 3855.0], [79.2, 3855.0], [79.3, 3855.0], [79.4, 3856.0], [79.5, 3856.0], [79.6, 3858.0], [79.7, 3858.0], [79.8, 3858.0], [79.9, 3858.0], [80.0, 3858.0], [80.1, 3861.0], [80.2, 3861.0], [80.3, 3863.0], [80.4, 3863.0], [80.5, 3865.0], [80.6, 3865.0], [80.7, 3866.0], [80.8, 3866.0], [80.9, 3866.0], [81.0, 3867.0], [81.1, 3867.0], [81.2, 3869.0], [81.3, 3869.0], [81.4, 3869.0], [81.5, 3869.0], [81.6, 3870.0], [81.7, 3870.0], [81.8, 3870.0], [81.9, 3870.0], [82.0, 3870.0], [82.1, 3871.0], [82.2, 3871.0], [82.3, 3872.0], [82.4, 3872.0], [82.5, 3872.0], [82.6, 3873.0], [82.7, 3873.0], [82.8, 3875.0], [82.9, 3875.0], [83.0, 3877.0], [83.1, 3877.0], [83.2, 3882.0], [83.3, 3882.0], [83.4, 3882.0], [83.5, 3883.0], [83.6, 3883.0], [83.7, 3885.0], [83.8, 3885.0], [83.9, 3887.0], [84.0, 3887.0], [84.1, 3892.0], [84.2, 3892.0], [84.3, 3892.0], [84.4, 3892.0], [84.5, 3892.0], [84.6, 3895.0], [84.7, 3895.0], [84.8, 3895.0], [84.9, 3895.0], [85.0, 3895.0], [85.1, 3898.0], [85.2, 3898.0], [85.3, 3898.0], [85.4, 3898.0], [85.5, 3900.0], [85.6, 3900.0], [85.7, 3901.0], [85.8, 3901.0], [85.9, 3901.0], [86.0, 3904.0], [86.1, 3904.0], [86.2, 3906.0], [86.3, 3906.0], [86.4, 3906.0], [86.5, 3906.0], [86.6, 3907.0], [86.7, 3907.0], [86.8, 3907.0], [86.9, 3915.0], [87.0, 3915.0], [87.1, 3915.0], [87.2, 3915.0], [87.3, 3916.0], [87.4, 3916.0], [87.5, 3916.0], [87.6, 3922.0], [87.7, 3922.0], [87.8, 3922.0], [87.9, 3922.0], [88.0, 3922.0], [88.1, 3922.0], [88.2, 3923.0], [88.3, 3923.0], [88.4, 3923.0], [88.5, 3926.0], [88.6, 3926.0], [88.7, 3927.0], [88.8, 3927.0], [88.9, 3928.0], [89.0, 3928.0], [89.1, 3929.0], [89.2, 3929.0], [89.3, 3929.0], [89.4, 3933.0], [89.5, 3933.0], [89.6, 3933.0], [89.7, 3933.0], [89.8, 3937.0], [89.9, 3937.0], [90.0, 3937.0], [90.1, 3940.0], [90.2, 3940.0], [90.3, 3941.0], [90.4, 3941.0], [90.5, 3941.0], [90.6, 3941.0], [90.7, 3946.0], [90.8, 3946.0], [90.9, 3946.0], [91.0, 3955.0], [91.1, 3955.0], [91.2, 3963.0], [91.3, 3963.0], [91.4, 3973.0], [91.5, 3973.0], [91.6, 3978.0], [91.7, 3978.0], [91.8, 3978.0], [91.9, 3979.0], [92.0, 3979.0], [92.1, 3989.0], [92.2, 3989.0], [92.3, 3994.0], [92.4, 3994.0], [92.5, 3994.0], [92.6, 4011.0], [92.7, 4011.0], [92.8, 4019.0], [92.9, 4019.0], [93.0, 4019.0], [93.1, 4019.0], [93.2, 4021.0], [93.3, 4021.0], [93.4, 4021.0], [93.5, 4030.0], [93.6, 4030.0], [93.7, 4031.0], [93.8, 4031.0], [93.9, 4053.0], [94.0, 4053.0], [94.1, 4061.0], [94.2, 4061.0], [94.3, 4061.0], [94.4, 4064.0], [94.5, 4064.0], [94.6, 4078.0], [94.7, 4078.0], [94.8, 4079.0], [94.9, 4079.0], [95.0, 4079.0], [95.1, 4086.0], [95.2, 4086.0], [95.3, 4099.0], [95.4, 4099.0], [95.5, 4129.0], [95.6, 4129.0], [95.7, 4135.0], [95.8, 4135.0], [95.9, 4135.0], [96.0, 4144.0], [96.1, 4144.0], [96.2, 4148.0], [96.3, 4148.0], [96.4, 4209.0], [96.5, 4209.0], [96.6, 4222.0], [96.7, 4222.0], [96.8, 4222.0], [96.9, 4229.0], [97.0, 4229.0], [97.1, 4236.0], [97.2, 4236.0], [97.3, 4237.0], [97.4, 4237.0], [97.5, 4237.0], [97.6, 4271.0], [97.7, 4271.0], [97.8, 4292.0], [97.9, 4292.0], [98.0, 4297.0], [98.1, 4297.0], [98.2, 4328.0], [98.3, 4328.0], [98.4, 4328.0], [98.5, 4328.0], [98.6, 4328.0], [98.7, 4406.0], [98.8, 4406.0], [98.9, 4567.0], [99.0, 4567.0], [99.1, 4645.0], [99.2, 4645.0], [99.3, 4645.0], [99.4, 4646.0], [99.5, 4646.0], [99.6, 4768.0], [99.7, 4768.0], [99.8, 4961.0], [99.9, 4961.0], [100.0, 4961.0]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 494.0, "series": [{"data": [[0.0, 490.0], [500.0, 10.0]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[0.0, 437.0], [500.0, 3.0]], "isOverall": false, "label": "Add Comment", "isController": false}, {"data": [[0.0, 408.0], [500.0, 2.0]], "isOverall": false, "label": "Like idea", "isController": false}, {"data": [[4500.0, 290.0], [5000.0, 69.0], [5500.0, 8.0], [6000.0, 3.0], [4000.0, 40.0], [500.0, 53.0], [1000.0, 7.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[0.0, 2.0], [1500.0, 1.0], [500.0, 494.0], [1000.0, 3.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[4500.0, 5.0], [3000.0, 56.0], [3500.0, 351.0], [4000.0, 28.0]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 6000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 90.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1249.0, "series": [{"data": [[1.0, 510.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 90.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 1249.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 441.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.303571428571428, "minX": 1.50029568E12, "maxY": 7.395894428152491, "series": [{"data": [[1.5002958E12, 7.201754385964911], [1.50029598E12, 6.810975609756102], [1.50029592E12, 7.395894428152491], [1.5002961E12, 6.6056782334384865], [1.50029604E12, 6.728434504792329], [1.50029574E12, 7.282913165266108], [1.50029622E12, 4.303571428571428], [1.50029568E12, 6.515624999999998], [1.50029616E12, 6.610223642172525], [1.50029586E12, 6.930091185410332]], "isOverall": false, "label": "Authenticated Browsing", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.50029622E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 62.0, "minX": 1.0, "maxY": 5864.4, "series": [{"data": [[4.0, 220.55555555555554], [8.0, 387.4117647058823], [9.0, 230.0], [5.0, 232.9074074074074], [3.0, 269.6666666666667], [6.0, 244.9455782312925], [7.0, 239.40892193308554]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[6.449999999999998, 245.1900000000002]], "isOverall": false, "label": "Submit Idea-Aggregated", "isController": false}, {"data": [[8.0, 190.39024390243907], [4.0, 161.75], [2.0, 418.0], [9.0, 235.0], [5.0, 158.1470588235294], [6.0, 161.1397849462365], [3.0, 137.0], [7.0, 166.49618320610682]], "isOverall": false, "label": "Add Comment", "isController": false}, {"data": [[6.681818181818182, 168.4454545454545]], "isOverall": false, "label": "Add Comment-Aggregated", "isController": false}, {"data": [[8.0, 82.54922279792748], [4.0, 64.5], [2.0, 71.0], [1.0, 66.0], [9.0, 81.2], [5.0, 72.9], [6.0, 72.93999999999997], [3.0, 62.0], [7.0, 75.23809523809521]], "isOverall": false, "label": "Like idea", "isController": false}, {"data": [[7.273170731707325, 78.29756097560985]], "isOverall": false, "label": "Like idea-Aggregated", "isController": false}, {"data": [[8.0, 4710.617346938778], [4.0, 3493.0], [2.0, 5127.0], [1.0, 4677.0], [9.0, 5864.4], [5.0, 3450.0], [6.0, 3692.9285714285716], [3.0, 4698.0], [7.0, 4101.398876404496]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[7.174468085106383, 4293.378723404257]], "isOverall": false, "label": "Transaction Controller-Aggregated", "isController": true}, {"data": [[2.0, 702.0], [4.0, 562.3333333333334], [8.0, 605.1455696202528], [9.0, 873.8], [5.0, 597.1904761904761], [3.0, 514.0], [6.0, 597.4337349397592], [7.0, 602.0308370044055]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[7.041999999999995, 604.3759999999999]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[8.0, 3834.0563380281687], [4.0, 3597.3333333333335], [2.0, 3544.0], [9.0, 3778.5], [5.0, 3664.633333333333], [6.0, 3703.2391304347834], [3.0, 3564.0], [7.0, 3689.1645569620237]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}, {"data": [[6.784090909090907, 3713.102272727271]], "isOverall": false, "label": "Navigate to Idea page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 9.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 317.56666666666666, "minX": 1.50029568E12, "maxY": 571763.4, "series": [{"data": [[1.5002958E12, 549661.8166666667], [1.50029598E12, 508860.51666666666], [1.50029592E12, 567660.1833333333], [1.5002961E12, 496440.13333333336], [1.50029604E12, 518468.2833333333], [1.50029574E12, 571763.4], [1.50029622E12, 88058.4], [1.50029568E12, 91843.15], [1.50029616E12, 499054.01666666666], [1.50029586E12, 536588.3333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5002958E12, 1982.6833333333334], [1.50029598E12, 1899.5833333333333], [1.50029592E12, 1985.85], [1.5002961E12, 1831.2666666666667], [1.50029604E12, 1863.9], [1.50029574E12, 2049.5666666666666], [1.50029622E12, 317.56666666666666], [1.50029568E12, 374.81666666666666], [1.50029616E12, 1839.85], [1.50029586E12, 1907.4333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.50029622E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 65.66666666666667, "minX": 1.50029568E12, "maxY": 4724.285714285714, "series": [{"data": [[1.5002958E12, 247.60000000000002], [1.50029598E12, 245.68333333333337], [1.50029592E12, 247.4166666666667], [1.5002961E12, 246.13559322033896], [1.50029604E12, 236.9000000000001], [1.50029574E12, 232.50000000000006], [1.50029622E12, 247.11111111111111], [1.50029568E12, 222.15384615384613], [1.50029616E12, 264.1166666666666], [1.50029586E12, 245.89830508474583]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[1.5002958E12, 171.57142857142856], [1.50029598E12, 158.68627450980387], [1.50029592E12, 170.01754385964918], [1.5002961E12, 162.64583333333334], [1.50029604E12, 166.42], [1.50029574E12, 157.1525423728814], [1.50029622E12, 213.60000000000002], [1.50029568E12, 162.44444444444446], [1.50029616E12, 192.37499999999997], [1.50029586E12, 163.3076923076923]], "isOverall": false, "label": "Add Comment", "isController": false}, {"data": [[1.5002958E12, 75.77777777777777], [1.50029598E12, 73.53061224489797], [1.50029592E12, 99.90196078431372], [1.5002961E12, 73.00000000000001], [1.50029604E12, 74.23809523809524], [1.50029574E12, 77.1186440677966], [1.50029622E12, 65.66666666666667], [1.50029568E12, 76.875], [1.50029616E12, 80.2093023255814], [1.50029586E12, 74.08]], "isOverall": false, "label": "Like idea", "isController": false}, {"data": [[1.5002958E12, 4512.637931034483], [1.50029598E12, 4092.033898305085], [1.50029592E12, 4724.285714285714], [1.5002961E12, 4069.4035087719294], [1.50029604E12, 4213.18], [1.50029574E12, 4573.440677966101], [1.50029622E12, 3720.090909090909], [1.50029568E12, 4318.000000000001], [1.50029616E12, 3992.5000000000005], [1.50029586E12, 4249.145454545455]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.5002958E12, 608.6949152542372], [1.50029598E12, 588.3898305084747], [1.50029592E12, 614.3000000000001], [1.5002961E12, 615.6333333333333], [1.50029604E12, 614.1666666666666], [1.50029574E12, 590.45], [1.50029622E12, 606.3749999999999], [1.50029568E12, 553.5714285714287], [1.50029616E12, 628.9166666666669], [1.50029586E12, 585.8500000000001]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.5002958E12, 3665.290909090909], [1.50029598E12, 3769.82], [1.50029592E12, 3828.4561403508783], [1.5002961E12, 3748.8958333333335], [1.50029604E12, 3785.529411764706], [1.50029574E12, 3513.066666666667], [1.50029622E12, 3650.777777777778], [1.50029568E12, 3303.222222222222], [1.50029616E12, 3821.395833333333], [1.50029586E12, 3691.6037735849063]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.50029622E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 65.55555555555556, "minX": 1.50029568E12, "maxY": 3923.9464285714284, "series": [{"data": [[1.5002958E12, 246.78333333333336], [1.50029598E12, 244.49999999999997], [1.50029592E12, 246.98333333333332], [1.5002961E12, 244.83050847457628], [1.50029604E12, 235.78333333333333], [1.50029574E12, 232.43333333333334], [1.50029622E12, 244.55555555555554], [1.50029568E12, 221.92307692307693], [1.50029616E12, 262.1666666666666], [1.50029586E12, 244.25423728813556]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[1.5002958E12, 171.5178571428571], [1.50029598E12, 158.6666666666667], [1.50029592E12, 169.98245614035085], [1.5002961E12, 162.62500000000006], [1.50029604E12, 166.35999999999999], [1.50029574E12, 157.11864406779662], [1.50029622E12, 213.60000000000002], [1.50029568E12, 162.44444444444446], [1.50029616E12, 192.3125], [1.50029586E12, 163.3076923076923]], "isOverall": false, "label": "Add Comment", "isController": false}, {"data": [[1.5002958E12, 75.72222222222221], [1.50029598E12, 73.42857142857143], [1.50029592E12, 99.84313725490193], [1.5002961E12, 72.8888888888889], [1.50029604E12, 74.2142857142857], [1.50029574E12, 77.0], [1.50029622E12, 65.55555555555556], [1.50029568E12, 76.875], [1.50029616E12, 80.16279069767442], [1.50029586E12, 73.98]], "isOverall": false, "label": "Like idea", "isController": false}, {"data": [[1.5002958E12, 3727.413793103449], [1.50029598E12, 3377.457627118643], [1.50029592E12, 3923.9464285714284], [1.5002961E12, 3345.649122807017], [1.50029604E12, 3488.18], [1.50029574E12, 3817.0508474576272], [1.50029622E12, 2998.8181818181815], [1.50029568E12, 3596.2727272727275], [1.50029616E12, 3234.1296296296296], [1.50029586E12, 3526.8727272727274]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.5002958E12, 111.71186440677965], [1.50029598E12, 105.88135593220339], [1.50029592E12, 115.54999999999998], [1.5002961E12, 106.73333333333333], [1.50029604E12, 117.11666666666669], [1.50029574E12, 109.44999999999999], [1.50029622E12, 100.5], [1.50029568E12, 105.7142857142857], [1.50029616E12, 112.04999999999997], [1.50029586E12, 109.13333333333334]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.5002958E12, 3356.8727272727274], [1.50029598E12, 3488.8199999999993], [1.50029592E12, 3510.5789473684217], [1.5002961E12, 3483.1666666666665], [1.50029604E12, 3506.8039215686276], [1.50029574E12, 3235.75], [1.50029622E12, 3377.0], [1.50029568E12, 3028.222222222222], [1.50029616E12, 3505.3124999999995], [1.50029586E12, 3412.301886792453]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.50029622E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.50029568E12, "maxY": 90.32758620689657, "series": [{"data": [[1.5002958E12, 48.28333333333333], [1.50029598E12, 37.349999999999994], [1.50029592E12, 40.35], [1.5002961E12, 37.3728813559322], [1.50029604E12, 38.43333333333334], [1.50029574E12, 41.266666666666666], [1.50029622E12, 39.111111111111114], [1.50029568E12, 45.38461538461539], [1.50029616E12, 43.9], [1.50029586E12, 42.64406779661019]], "isOverall": false, "label": "Submit Idea", "isController": false}, {"data": [[1.5002958E12, 44.732142857142875], [1.50029598E12, 36.03921568627453], [1.50029592E12, 41.298245614035096], [1.5002961E12, 37.41666666666667], [1.50029604E12, 37.66], [1.50029574E12, 36.33898305084745], [1.50029622E12, 32.7], [1.50029568E12, 36.666666666666664], [1.50029616E12, 43.333333333333336], [1.50029586E12, 36.8076923076923]], "isOverall": false, "label": "Add Comment", "isController": false}, {"data": [[1.5002958E12, 0.0], [1.50029598E12, 0.0], [1.50029592E12, 0.0], [1.5002961E12, 0.0], [1.50029604E12, 0.0], [1.50029574E12, 0.0], [1.50029622E12, 0.0], [1.50029568E12, 0.0], [1.50029616E12, 0.0], [1.50029586E12, 0.0]], "isOverall": false, "label": "Like idea", "isController": false}, {"data": [[1.5002958E12, 90.32758620689657], [1.50029598E12, 66.54237288135592], [1.50029592E12, 80.10714285714283], [1.5002961E12, 67.80701754385966], [1.50029604E12, 70.12], [1.50029574E12, 77.77966101694916], [1.50029622E12, 62.18181818181818], [1.50029568E12, 80.63636363636364], [1.50029616E12, 77.00000000000001], [1.50029586E12, 75.14545454545454]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.5002958E12, 0.0], [1.50029598E12, 0.0], [1.50029592E12, 0.0], [1.5002961E12, 0.0], [1.50029604E12, 0.0], [1.50029574E12, 0.0], [1.50029622E12, 0.0], [1.50029568E12, 0.0], [1.50029616E12, 0.0], [1.50029586E12, 0.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.5002958E12, 0.0], [1.50029598E12, 0.0], [1.50029592E12, 0.0], [1.5002961E12, 0.0], [1.50029604E12, 0.0], [1.50029574E12, 0.0], [1.50029622E12, 0.0], [1.50029568E12, 0.0], [1.50029616E12, 0.0], [1.50029586E12, 0.0]], "isOverall": false, "label": "Navigate to Idea page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.50029622E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 58.0, "minX": 1.50029568E12, "maxY": 4961.0, "series": [{"data": [[1.5002958E12, 4961.0], [1.50029598E12, 4768.0], [1.50029592E12, 4646.0], [1.5002961E12, 4209.0], [1.50029604E12, 4271.0], [1.50029574E12, 4222.0], [1.50029622E12, 3768.0], [1.50029568E12, 3380.0], [1.50029616E12, 4567.0], [1.50029586E12, 4406.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5002958E12, 64.0], [1.50029598E12, 63.0], [1.50029592E12, 60.0], [1.5002961E12, 58.0], [1.50029604E12, 59.0], [1.50029574E12, 61.0], [1.50029622E12, 62.0], [1.50029568E12, 70.0], [1.50029616E12, 59.0], [1.50029586E12, 60.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5002958E12, 3524.0], [1.50029598E12, 3650.4], [1.50029592E12, 3632.7000000000003], [1.5002961E12, 3680.1000000000004], [1.50029604E12, 3665.0], [1.50029574E12, 3472.6], [1.50029622E12, 3689.9], [1.50029568E12, 3291.4], [1.50029616E12, 3692.0], [1.50029586E12, 3580.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5002958E12, 3847.8000000000015], [1.50029598E12, 4079.8400000000006], [1.50029592E12, 4070.379999999999], [1.5002961E12, 4081.819999999999], [1.50029604E12, 4107.099999999999], [1.50029574E12, 3679.0000000000005], [1.50029622E12, 4085.9299999999985], [1.50029568E12, 3380.0], [1.50029616E12, 4091.200000000001], [1.50029586E12, 3915.6599999999994]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5002958E12, 3645.5], [1.50029598E12, 3779.2], [1.50029592E12, 3768.9], [1.5002961E12, 3808.1], [1.50029604E12, 3797.35], [1.50029574E12, 3568.9999999999995], [1.50029622E12, 3817.0], [1.50029568E12, 3367.0], [1.50029616E12, 3819.0], [1.50029586E12, 3693.7999999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.50029622E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 220.5, "minX": 0.0, "maxY": 242.0, "series": [{"data": [[0.0, 235.5], [4.0, 242.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 220.5], [0.0, 223.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 4.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 156.0, "minX": 0.0, "maxY": 213.0, "series": [{"data": [[0.0, 156.5], [4.0, 156.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 210.5], [0.0, 213.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 4.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7, "minX": 1.50029568E12, "maxY": 4.933333333333334, "series": [{"data": [[1.5002958E12, 4.766666666666667], [1.50029598E12, 4.5], [1.50029592E12, 4.7], [1.5002961E12, 4.366666666666666], [1.50029604E12, 4.366666666666666], [1.50029574E12, 4.933333333333334], [1.50029622E12, 0.7], [1.50029568E12, 0.9666666666666667], [1.50029616E12, 4.266666666666667], [1.50029586E12, 4.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.50029622E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.50029568E12, "maxY": 4.966666666666667, "series": [{"data": [[1.5002958E12, 4.633333333333334], [1.50029598E12, 4.283333333333333], [1.50029592E12, 4.616666666666666], [1.5002961E12, 4.1], [1.50029604E12, 4.083333333333333], [1.50029574E12, 4.966666666666667], [1.50029622E12, 0.6833333333333333], [1.50029568E12, 0.8833333333333333], [1.50029616E12, 4.016666666666667], [1.50029586E12, 4.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.5002958E12, 0.1], [1.50029598E12, 0.2], [1.50029592E12, 0.13333333333333333], [1.5002961E12, 0.23333333333333334], [1.50029604E12, 0.3], [1.50029622E12, 0.06666666666666667], [1.50029616E12, 0.3], [1.50029586E12, 0.16666666666666666]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.50029622E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.50029568E12, "maxY": 1.0, "series": [{"data": [[1.5002958E12, 0.9], [1.50029598E12, 0.8], [1.50029592E12, 0.8833333333333333], [1.5002961E12, 0.7666666666666667], [1.50029604E12, 0.7], [1.50029574E12, 0.9833333333333333], [1.50029622E12, 0.13333333333333333], [1.50029568E12, 0.18333333333333332], [1.50029616E12, 0.6833333333333333], [1.50029586E12, 0.8]], "isOverall": false, "label": "Transaction Controller-success", "isController": true}, {"data": [[1.5002958E12, 0.9166666666666666], [1.50029598E12, 0.8333333333333334], [1.50029592E12, 0.95], [1.5002961E12, 0.8], [1.50029604E12, 0.85], [1.50029574E12, 1.0], [1.50029622E12, 0.15], [1.50029568E12, 0.15], [1.50029616E12, 0.8], [1.50029586E12, 0.8833333333333333]], "isOverall": false, "label": "Navigate to Idea page-success", "isController": false}, {"data": [[1.5002958E12, 0.06666666666666667], [1.50029598E12, 0.18333333333333332], [1.50029592E12, 0.05], [1.5002961E12, 0.18333333333333332], [1.50029604E12, 0.13333333333333333], [1.50029622E12, 0.05], [1.50029616E12, 0.21666666666666667], [1.50029586E12, 0.11666666666666667]], "isOverall": false, "label": "Transaction Controller-failure", "isController": true}, {"data": [[1.5002958E12, 0.9], [1.50029598E12, 0.8166666666666667], [1.50029592E12, 0.8666666666666667], [1.5002961E12, 0.75], [1.50029604E12, 0.6833333333333333], [1.50029574E12, 0.9833333333333333], [1.50029622E12, 0.15], [1.50029568E12, 0.15], [1.50029616E12, 0.7166666666666667], [1.50029586E12, 0.8166666666666667]], "isOverall": false, "label": "Add Comment-success", "isController": false}, {"data": [[1.5002958E12, 0.9], [1.50029598E12, 0.8166666666666667], [1.50029592E12, 0.85], [1.5002961E12, 0.75], [1.50029604E12, 0.7], [1.50029574E12, 0.9833333333333333], [1.50029622E12, 0.15], [1.50029568E12, 0.13333333333333333], [1.50029616E12, 0.7166666666666667], [1.50029586E12, 0.8333333333333334]], "isOverall": false, "label": "Like idea-success", "isController": false}, {"data": [[1.5002958E12, 0.03333333333333333], [1.50029598E12, 0.03333333333333333], [1.50029592E12, 0.08333333333333333], [1.5002961E12, 0.05], [1.50029604E12, 0.15], [1.50029622E12, 0.016666666666666666], [1.50029616E12, 0.08333333333333333], [1.50029586E12, 0.05]], "isOverall": false, "label": "Add Comment-failure", "isController": false}, {"data": [[1.5002958E12, 0.06666666666666667], [1.50029598E12, 0.16666666666666666], [1.50029592E12, 0.05], [1.5002961E12, 0.18333333333333332], [1.50029604E12, 0.15], [1.50029622E12, 0.05], [1.50029616E12, 0.21666666666666667], [1.50029586E12, 0.11666666666666667]], "isOverall": false, "label": "Submit Idea-failure", "isController": false}, {"data": [[1.5002958E12, 0.9833333333333333], [1.50029598E12, 0.9833333333333333], [1.50029592E12, 1.0], [1.5002961E12, 1.0], [1.50029604E12, 1.0], [1.50029574E12, 1.0], [1.50029622E12, 0.13333333333333333], [1.50029568E12, 0.23333333333333334], [1.50029616E12, 1.0], [1.50029586E12, 1.0]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.5002958E12, 0.9333333333333333], [1.50029598E12, 0.8333333333333334], [1.50029592E12, 0.95], [1.5002961E12, 0.8], [1.50029604E12, 0.85], [1.50029574E12, 1.0], [1.50029622E12, 0.1], [1.50029568E12, 0.21666666666666667], [1.50029616E12, 0.7833333333333333], [1.50029586E12, 0.8666666666666667]], "isOverall": false, "label": "Submit Idea-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.50029622E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
